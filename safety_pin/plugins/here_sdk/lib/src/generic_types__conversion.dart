import 'package:here_sdk/src/sdk/core/geo_coordinates.dart';
import 'dart:ffi';
import 'package:here_sdk/src/_library_context.dart' as __lib;
import 'package:here_sdk/src/sdk/animation/geo_coordinates_keyframe.dart';
import 'package:here_sdk/src/sdk/animation/geo_orientation_keyframe.dart';
import 'package:here_sdk/src/sdk/animation/point2_d_keyframe.dart';
import 'package:here_sdk/src/sdk/animation/scalar_keyframe.dart';
import 'package:here_sdk/src/sdk/mapview/map_camera_keyframe_track.dart';
import 'package:here_sdk/src/builtin_types__conversion.dart';
import 'package:here_sdk/src/sdk/core/localized_text.dart';
import 'package:intl/locale.dart';
import 'package:here_sdk/src/sdk/mapview/map_marker.dart';
import 'package:here_sdk/src/sdk/mapview/map_polygon.dart';
import 'package:here_sdk/src/sdk/mapview/map_polyline.dart';
import 'package:here_sdk/src/sdk/core/country_code.dart';
import 'package:here_sdk/src/sdk/core/geo_box.dart';
import 'package:here_sdk/src/sdk/core/geo_polygon.dart';
import 'package:here_sdk/src/sdk/core/location.dart';
import 'package:here_sdk/src/sdk/core/location_impl.dart' as location_impl;
import 'package:here_sdk/src/sdk/routing/attribution.dart';
import 'package:here_sdk/src/sdk/routing/charging_connector_type.dart';
import 'package:here_sdk/src/sdk/routing/fare.dart';
import 'package:here_sdk/src/sdk/routing/hazardous_good.dart';
import 'package:here_sdk/src/sdk/routing/isoline.dart';
import 'package:here_sdk/src/sdk/routing/maneuver.dart';
import 'package:here_sdk/src/sdk/routing/payment_method.dart';
import 'package:here_sdk/src/sdk/routing/post_action.dart';
import 'package:here_sdk/src/sdk/routing/pre_action.dart';
import 'package:here_sdk/src/sdk/routing/road_features.dart';
import 'package:here_sdk/src/sdk/routing/route.dart';
import 'package:here_sdk/src/sdk/routing/section.dart';
import 'package:here_sdk/src/sdk/routing/section_notice.dart';
import 'package:here_sdk/src/sdk/routing/segment_reference.dart';
import 'package:here_sdk/src/sdk/routing/span.dart';
import 'package:here_sdk/src/sdk/routing/toll.dart';
import 'package:here_sdk/src/sdk/routing/toll_fare.dart';
import 'package:here_sdk/src/sdk/routing/traffic_speed.dart';
import 'package:here_sdk/src/sdk/routing/transit_incident.dart';
import 'package:here_sdk/src/sdk/routing/transit_mode.dart';
import 'package:here_sdk/src/sdk/routing/transit_stop.dart';
import 'package:here_sdk/src/sdk/routing/waypoint.dart';
import 'package:here_sdk/src/sdk/routing/zone_category.dart';
import 'package:here_sdk/src/sdk/search/contact.dart';
import 'package:here_sdk/src/sdk/search/e_v_charging_station.dart';
import 'package:here_sdk/src/sdk/search/email_address.dart';
import 'package:here_sdk/src/sdk/search/ev_connector_experimental.dart';
import 'package:here_sdk/src/sdk/search/highlight_type.dart';
import 'package:here_sdk/src/sdk/search/index_range.dart';
import 'package:here_sdk/src/sdk/search/landline_phone.dart';
import 'package:here_sdk/src/sdk/search/mobile_phone.dart';
import 'package:here_sdk/src/sdk/search/opening_hours.dart';
import 'package:here_sdk/src/sdk/search/place.dart';
import 'package:here_sdk/src/sdk/search/place_category.dart';
import 'package:here_sdk/src/sdk/search/schedule_details.dart';
import 'package:here_sdk/src/sdk/search/suggestion.dart';
import 'package:here_sdk/src/sdk/search/supplier_reference.dart';
import 'package:here_sdk/src/sdk/search/web_editorial.dart';
import 'package:here_sdk/src/sdk/search/web_image.dart';
import 'package:here_sdk/src/sdk/search/web_rating.dart';
import 'package:here_sdk/src/sdk/search/website_address.dart';
// Copyright (c) 2018-2021 HERE Global B.V. and its affiliate(s).
// All rights reserved.
//
// This software and other materials contain proprietary information
// controlled by HERE and are protected by applicable copyright legislation.
// Any use and utilization of this software and other materials and
// disclosure to any third parties is conditional upon having a separate
// agreement with HERE for the access, use, utilization or disclosure of this
// software. In the absence of such agreement, the use of the software is not
// allowed.
//







final _coreTypeslistofSdkCoreGeocoordinatesCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_core_typesListOf_sdk_core_GeoCoordinates_create_handle'));
final _coreTypeslistofSdkCoreGeocoordinatesReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_core_typesListOf_sdk_core_GeoCoordinates_release_handle'));
final _coreTypeslistofSdkCoreGeocoordinatesInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_core_typesListOf_sdk_core_GeoCoordinates_insert'));
final _coreTypeslistofSdkCoreGeocoordinatesIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_core_typesListOf_sdk_core_GeoCoordinates_iterator'));
final _coreTypeslistofSdkCoreGeocoordinatesIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_core_typesListOf_sdk_core_GeoCoordinates_iterator_release_handle'));
final _coreTypeslistofSdkCoreGeocoordinatesIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_core_typesListOf_sdk_core_GeoCoordinates_iterator_is_valid'));
final _coreTypeslistofSdkCoreGeocoordinatesIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_core_typesListOf_sdk_core_GeoCoordinates_iterator_increment'));
final _coreTypeslistofSdkCoreGeocoordinatesIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_core_typesListOf_sdk_core_GeoCoordinates_iterator_get'));

Pointer<Void> coreTypeslistofSdkCoreGeocoordinatesToFfi(List<GeoCoordinates> value) {
  final _result = _coreTypeslistofSdkCoreGeocoordinatesCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreGeocoordinatesToFfi(element);
    _coreTypeslistofSdkCoreGeocoordinatesInsert(_result, _elementHandle);
    sdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoCoordinates> coreTypeslistofSdkCoreGeocoordinatesFromFfi(Pointer<Void> handle) {
  final result = List<GeoCoordinates>.empty(growable: true);
  final _iteratorHandle = _coreTypeslistofSdkCoreGeocoordinatesIterator(handle);
  while (_coreTypeslistofSdkCoreGeocoordinatesIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _coreTypeslistofSdkCoreGeocoordinatesIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreGeocoordinatesFromFfi(_elementHandle));
    } finally {
      sdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
    }
    _coreTypeslistofSdkCoreGeocoordinatesIteratorIncrement(_iteratorHandle);
  }
  _coreTypeslistofSdkCoreGeocoordinatesIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void coreTypeslistofSdkCoreGeocoordinatesReleaseFfiHandle(Pointer<Void> handle) => _coreTypeslistofSdkCoreGeocoordinatesReleaseHandle(handle);

final _coreTypeslistofSdkCoreGeocoordinatesCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_core_typesListOf_sdk_core_GeoCoordinates_create_handle_nullable'));
final _coreTypeslistofSdkCoreGeocoordinatesReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_core_typesListOf_sdk_core_GeoCoordinates_release_handle_nullable'));
final _coreTypeslistofSdkCoreGeocoordinatesGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_core_typesListOf_sdk_core_GeoCoordinates_get_value_nullable'));

Pointer<Void> coreTypeslistofSdkCoreGeocoordinatesToFfiNullable(List<GeoCoordinates>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = coreTypeslistofSdkCoreGeocoordinatesToFfi(value);
  final result = _coreTypeslistofSdkCoreGeocoordinatesCreateHandleNullable(_handle);
  coreTypeslistofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

List<GeoCoordinates>? coreTypeslistofSdkCoreGeocoordinatesFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _coreTypeslistofSdkCoreGeocoordinatesGetValueNullable(handle);
  final result = coreTypeslistofSdkCoreGeocoordinatesFromFfi(_handle);
  coreTypeslistofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

void coreTypeslistofSdkCoreGeocoordinatesReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _coreTypeslistofSdkCoreGeocoordinatesReleaseHandleNullable(handle);


// Copyright (c) 2019 HERE Global B.V. and its affiliate(s).
// All rights reserved.
// This software and other materials contain proprietary information
// controlled by HERE and are protected by applicable copyright legislation.
// Any use and utilization of this software and other materials and
// disclosure to any third parties is conditional upon having a separate
// agreement with HERE for the access, use, utilization or disclosure of this
// software. In the absence of such agreement, the use of the software is not
// allowed.












final _harpPluginsOmvBindingslistofSdkAnimationGeocoordinateskeyframeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_create_handle'));
final _harpPluginsOmvBindingslistofSdkAnimationGeocoordinateskeyframeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_release_handle'));
final _harpPluginsOmvBindingslistofSdkAnimationGeocoordinateskeyframeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_insert'));
final _harpPluginsOmvBindingslistofSdkAnimationGeocoordinateskeyframeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_iterator'));
final _harpPluginsOmvBindingslistofSdkAnimationGeocoordinateskeyframeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_iterator_release_handle'));
final _harpPluginsOmvBindingslistofSdkAnimationGeocoordinateskeyframeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_iterator_is_valid'));
final _harpPluginsOmvBindingslistofSdkAnimationGeocoordinateskeyframeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_iterator_increment'));
final _harpPluginsOmvBindingslistofSdkAnimationGeocoordinateskeyframeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_iterator_get'));

Pointer<Void> harpPluginsOmvBindingslistofSdkAnimationGeocoordinateskeyframeToFfi(List<GeoCoordinatesKeyframe> value) {
  final _result = _harpPluginsOmvBindingslistofSdkAnimationGeocoordinateskeyframeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkAnimationGeocoordinateskeyframeToFfi(element);
    _harpPluginsOmvBindingslistofSdkAnimationGeocoordinateskeyframeInsert(_result, _elementHandle);
    sdkAnimationGeocoordinateskeyframeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoCoordinatesKeyframe> harpPluginsOmvBindingslistofSdkAnimationGeocoordinateskeyframeFromFfi(Pointer<Void> handle) {
  final result = List<GeoCoordinatesKeyframe>.empty(growable: true);
  final _iteratorHandle = _harpPluginsOmvBindingslistofSdkAnimationGeocoordinateskeyframeIterator(handle);
  while (_harpPluginsOmvBindingslistofSdkAnimationGeocoordinateskeyframeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _harpPluginsOmvBindingslistofSdkAnimationGeocoordinateskeyframeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkAnimationGeocoordinateskeyframeFromFfi(_elementHandle));
    } finally {
      sdkAnimationGeocoordinateskeyframeReleaseFfiHandle(_elementHandle);
    }
    _harpPluginsOmvBindingslistofSdkAnimationGeocoordinateskeyframeIteratorIncrement(_iteratorHandle);
  }
  _harpPluginsOmvBindingslistofSdkAnimationGeocoordinateskeyframeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void harpPluginsOmvBindingslistofSdkAnimationGeocoordinateskeyframeReleaseFfiHandle(Pointer<Void> handle) => _harpPluginsOmvBindingslistofSdkAnimationGeocoordinateskeyframeReleaseHandle(handle);

final _harpPluginsOmvBindingslistofSdkAnimationGeocoordinateskeyframeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_create_handle_nullable'));
final _harpPluginsOmvBindingslistofSdkAnimationGeocoordinateskeyframeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_release_handle_nullable'));
final _harpPluginsOmvBindingslistofSdkAnimationGeocoordinateskeyframeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_get_value_nullable'));

Pointer<Void> harpPluginsOmvBindingslistofSdkAnimationGeocoordinateskeyframeToFfiNullable(List<GeoCoordinatesKeyframe>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = harpPluginsOmvBindingslistofSdkAnimationGeocoordinateskeyframeToFfi(value);
  final result = _harpPluginsOmvBindingslistofSdkAnimationGeocoordinateskeyframeCreateHandleNullable(_handle);
  harpPluginsOmvBindingslistofSdkAnimationGeocoordinateskeyframeReleaseFfiHandle(_handle);
  return result;
}

List<GeoCoordinatesKeyframe>? harpPluginsOmvBindingslistofSdkAnimationGeocoordinateskeyframeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _harpPluginsOmvBindingslistofSdkAnimationGeocoordinateskeyframeGetValueNullable(handle);
  final result = harpPluginsOmvBindingslistofSdkAnimationGeocoordinateskeyframeFromFfi(_handle);
  harpPluginsOmvBindingslistofSdkAnimationGeocoordinateskeyframeReleaseFfiHandle(_handle);
  return result;
}

void harpPluginsOmvBindingslistofSdkAnimationGeocoordinateskeyframeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _harpPluginsOmvBindingslistofSdkAnimationGeocoordinateskeyframeReleaseHandleNullable(handle);

final _harpPluginsOmvBindingslistofSdkAnimationGeoorientationkeyframeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_animation_GeoOrientationKeyframe_create_handle'));
final _harpPluginsOmvBindingslistofSdkAnimationGeoorientationkeyframeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_animation_GeoOrientationKeyframe_release_handle'));
final _harpPluginsOmvBindingslistofSdkAnimationGeoorientationkeyframeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_animation_GeoOrientationKeyframe_insert'));
final _harpPluginsOmvBindingslistofSdkAnimationGeoorientationkeyframeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_animation_GeoOrientationKeyframe_iterator'));
final _harpPluginsOmvBindingslistofSdkAnimationGeoorientationkeyframeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_animation_GeoOrientationKeyframe_iterator_release_handle'));
final _harpPluginsOmvBindingslistofSdkAnimationGeoorientationkeyframeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_animation_GeoOrientationKeyframe_iterator_is_valid'));
final _harpPluginsOmvBindingslistofSdkAnimationGeoorientationkeyframeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_animation_GeoOrientationKeyframe_iterator_increment'));
final _harpPluginsOmvBindingslistofSdkAnimationGeoorientationkeyframeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_animation_GeoOrientationKeyframe_iterator_get'));

Pointer<Void> harpPluginsOmvBindingslistofSdkAnimationGeoorientationkeyframeToFfi(List<GeoOrientationKeyframe> value) {
  final _result = _harpPluginsOmvBindingslistofSdkAnimationGeoorientationkeyframeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkAnimationGeoorientationkeyframeToFfi(element);
    _harpPluginsOmvBindingslistofSdkAnimationGeoorientationkeyframeInsert(_result, _elementHandle);
    sdkAnimationGeoorientationkeyframeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoOrientationKeyframe> harpPluginsOmvBindingslistofSdkAnimationGeoorientationkeyframeFromFfi(Pointer<Void> handle) {
  final result = List<GeoOrientationKeyframe>.empty(growable: true);
  final _iteratorHandle = _harpPluginsOmvBindingslistofSdkAnimationGeoorientationkeyframeIterator(handle);
  while (_harpPluginsOmvBindingslistofSdkAnimationGeoorientationkeyframeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _harpPluginsOmvBindingslistofSdkAnimationGeoorientationkeyframeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkAnimationGeoorientationkeyframeFromFfi(_elementHandle));
    } finally {
      sdkAnimationGeoorientationkeyframeReleaseFfiHandle(_elementHandle);
    }
    _harpPluginsOmvBindingslistofSdkAnimationGeoorientationkeyframeIteratorIncrement(_iteratorHandle);
  }
  _harpPluginsOmvBindingslistofSdkAnimationGeoorientationkeyframeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void harpPluginsOmvBindingslistofSdkAnimationGeoorientationkeyframeReleaseFfiHandle(Pointer<Void> handle) => _harpPluginsOmvBindingslistofSdkAnimationGeoorientationkeyframeReleaseHandle(handle);

final _harpPluginsOmvBindingslistofSdkAnimationGeoorientationkeyframeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_animation_GeoOrientationKeyframe_create_handle_nullable'));
final _harpPluginsOmvBindingslistofSdkAnimationGeoorientationkeyframeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_animation_GeoOrientationKeyframe_release_handle_nullable'));
final _harpPluginsOmvBindingslistofSdkAnimationGeoorientationkeyframeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_animation_GeoOrientationKeyframe_get_value_nullable'));

Pointer<Void> harpPluginsOmvBindingslistofSdkAnimationGeoorientationkeyframeToFfiNullable(List<GeoOrientationKeyframe>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = harpPluginsOmvBindingslistofSdkAnimationGeoorientationkeyframeToFfi(value);
  final result = _harpPluginsOmvBindingslistofSdkAnimationGeoorientationkeyframeCreateHandleNullable(_handle);
  harpPluginsOmvBindingslistofSdkAnimationGeoorientationkeyframeReleaseFfiHandle(_handle);
  return result;
}

List<GeoOrientationKeyframe>? harpPluginsOmvBindingslistofSdkAnimationGeoorientationkeyframeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _harpPluginsOmvBindingslistofSdkAnimationGeoorientationkeyframeGetValueNullable(handle);
  final result = harpPluginsOmvBindingslistofSdkAnimationGeoorientationkeyframeFromFfi(_handle);
  harpPluginsOmvBindingslistofSdkAnimationGeoorientationkeyframeReleaseFfiHandle(_handle);
  return result;
}

void harpPluginsOmvBindingslistofSdkAnimationGeoorientationkeyframeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _harpPluginsOmvBindingslistofSdkAnimationGeoorientationkeyframeReleaseHandleNullable(handle);

final _harpPluginsOmvBindingslistofSdkAnimationPoint2dkeyframeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_animation_Point2DKeyframe_create_handle'));
final _harpPluginsOmvBindingslistofSdkAnimationPoint2dkeyframeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_animation_Point2DKeyframe_release_handle'));
final _harpPluginsOmvBindingslistofSdkAnimationPoint2dkeyframeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_animation_Point2DKeyframe_insert'));
final _harpPluginsOmvBindingslistofSdkAnimationPoint2dkeyframeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_animation_Point2DKeyframe_iterator'));
final _harpPluginsOmvBindingslistofSdkAnimationPoint2dkeyframeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_animation_Point2DKeyframe_iterator_release_handle'));
final _harpPluginsOmvBindingslistofSdkAnimationPoint2dkeyframeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_animation_Point2DKeyframe_iterator_is_valid'));
final _harpPluginsOmvBindingslistofSdkAnimationPoint2dkeyframeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_animation_Point2DKeyframe_iterator_increment'));
final _harpPluginsOmvBindingslistofSdkAnimationPoint2dkeyframeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_animation_Point2DKeyframe_iterator_get'));

Pointer<Void> harpPluginsOmvBindingslistofSdkAnimationPoint2dkeyframeToFfi(List<Point2DKeyframe> value) {
  final _result = _harpPluginsOmvBindingslistofSdkAnimationPoint2dkeyframeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkAnimationPoint2dkeyframeToFfi(element);
    _harpPluginsOmvBindingslistofSdkAnimationPoint2dkeyframeInsert(_result, _elementHandle);
    sdkAnimationPoint2dkeyframeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Point2DKeyframe> harpPluginsOmvBindingslistofSdkAnimationPoint2dkeyframeFromFfi(Pointer<Void> handle) {
  final result = List<Point2DKeyframe>.empty(growable: true);
  final _iteratorHandle = _harpPluginsOmvBindingslistofSdkAnimationPoint2dkeyframeIterator(handle);
  while (_harpPluginsOmvBindingslistofSdkAnimationPoint2dkeyframeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _harpPluginsOmvBindingslistofSdkAnimationPoint2dkeyframeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkAnimationPoint2dkeyframeFromFfi(_elementHandle));
    } finally {
      sdkAnimationPoint2dkeyframeReleaseFfiHandle(_elementHandle);
    }
    _harpPluginsOmvBindingslistofSdkAnimationPoint2dkeyframeIteratorIncrement(_iteratorHandle);
  }
  _harpPluginsOmvBindingslistofSdkAnimationPoint2dkeyframeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void harpPluginsOmvBindingslistofSdkAnimationPoint2dkeyframeReleaseFfiHandle(Pointer<Void> handle) => _harpPluginsOmvBindingslistofSdkAnimationPoint2dkeyframeReleaseHandle(handle);

final _harpPluginsOmvBindingslistofSdkAnimationPoint2dkeyframeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_animation_Point2DKeyframe_create_handle_nullable'));
final _harpPluginsOmvBindingslistofSdkAnimationPoint2dkeyframeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_animation_Point2DKeyframe_release_handle_nullable'));
final _harpPluginsOmvBindingslistofSdkAnimationPoint2dkeyframeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_animation_Point2DKeyframe_get_value_nullable'));

Pointer<Void> harpPluginsOmvBindingslistofSdkAnimationPoint2dkeyframeToFfiNullable(List<Point2DKeyframe>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = harpPluginsOmvBindingslistofSdkAnimationPoint2dkeyframeToFfi(value);
  final result = _harpPluginsOmvBindingslistofSdkAnimationPoint2dkeyframeCreateHandleNullable(_handle);
  harpPluginsOmvBindingslistofSdkAnimationPoint2dkeyframeReleaseFfiHandle(_handle);
  return result;
}

List<Point2DKeyframe>? harpPluginsOmvBindingslistofSdkAnimationPoint2dkeyframeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _harpPluginsOmvBindingslistofSdkAnimationPoint2dkeyframeGetValueNullable(handle);
  final result = harpPluginsOmvBindingslistofSdkAnimationPoint2dkeyframeFromFfi(_handle);
  harpPluginsOmvBindingslistofSdkAnimationPoint2dkeyframeReleaseFfiHandle(_handle);
  return result;
}

void harpPluginsOmvBindingslistofSdkAnimationPoint2dkeyframeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _harpPluginsOmvBindingslistofSdkAnimationPoint2dkeyframeReleaseHandleNullable(handle);

final _harpPluginsOmvBindingslistofSdkAnimationScalarkeyframeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_animation_ScalarKeyframe_create_handle'));
final _harpPluginsOmvBindingslistofSdkAnimationScalarkeyframeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_animation_ScalarKeyframe_release_handle'));
final _harpPluginsOmvBindingslistofSdkAnimationScalarkeyframeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_animation_ScalarKeyframe_insert'));
final _harpPluginsOmvBindingslistofSdkAnimationScalarkeyframeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_animation_ScalarKeyframe_iterator'));
final _harpPluginsOmvBindingslistofSdkAnimationScalarkeyframeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_animation_ScalarKeyframe_iterator_release_handle'));
final _harpPluginsOmvBindingslistofSdkAnimationScalarkeyframeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_animation_ScalarKeyframe_iterator_is_valid'));
final _harpPluginsOmvBindingslistofSdkAnimationScalarkeyframeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_animation_ScalarKeyframe_iterator_increment'));
final _harpPluginsOmvBindingslistofSdkAnimationScalarkeyframeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_animation_ScalarKeyframe_iterator_get'));

Pointer<Void> harpPluginsOmvBindingslistofSdkAnimationScalarkeyframeToFfi(List<ScalarKeyframe> value) {
  final _result = _harpPluginsOmvBindingslistofSdkAnimationScalarkeyframeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkAnimationScalarkeyframeToFfi(element);
    _harpPluginsOmvBindingslistofSdkAnimationScalarkeyframeInsert(_result, _elementHandle);
    sdkAnimationScalarkeyframeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<ScalarKeyframe> harpPluginsOmvBindingslistofSdkAnimationScalarkeyframeFromFfi(Pointer<Void> handle) {
  final result = List<ScalarKeyframe>.empty(growable: true);
  final _iteratorHandle = _harpPluginsOmvBindingslistofSdkAnimationScalarkeyframeIterator(handle);
  while (_harpPluginsOmvBindingslistofSdkAnimationScalarkeyframeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _harpPluginsOmvBindingslistofSdkAnimationScalarkeyframeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkAnimationScalarkeyframeFromFfi(_elementHandle));
    } finally {
      sdkAnimationScalarkeyframeReleaseFfiHandle(_elementHandle);
    }
    _harpPluginsOmvBindingslistofSdkAnimationScalarkeyframeIteratorIncrement(_iteratorHandle);
  }
  _harpPluginsOmvBindingslistofSdkAnimationScalarkeyframeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void harpPluginsOmvBindingslistofSdkAnimationScalarkeyframeReleaseFfiHandle(Pointer<Void> handle) => _harpPluginsOmvBindingslistofSdkAnimationScalarkeyframeReleaseHandle(handle);

final _harpPluginsOmvBindingslistofSdkAnimationScalarkeyframeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_animation_ScalarKeyframe_create_handle_nullable'));
final _harpPluginsOmvBindingslistofSdkAnimationScalarkeyframeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_animation_ScalarKeyframe_release_handle_nullable'));
final _harpPluginsOmvBindingslistofSdkAnimationScalarkeyframeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_animation_ScalarKeyframe_get_value_nullable'));

Pointer<Void> harpPluginsOmvBindingslistofSdkAnimationScalarkeyframeToFfiNullable(List<ScalarKeyframe>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = harpPluginsOmvBindingslistofSdkAnimationScalarkeyframeToFfi(value);
  final result = _harpPluginsOmvBindingslistofSdkAnimationScalarkeyframeCreateHandleNullable(_handle);
  harpPluginsOmvBindingslistofSdkAnimationScalarkeyframeReleaseFfiHandle(_handle);
  return result;
}

List<ScalarKeyframe>? harpPluginsOmvBindingslistofSdkAnimationScalarkeyframeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _harpPluginsOmvBindingslistofSdkAnimationScalarkeyframeGetValueNullable(handle);
  final result = harpPluginsOmvBindingslistofSdkAnimationScalarkeyframeFromFfi(_handle);
  harpPluginsOmvBindingslistofSdkAnimationScalarkeyframeReleaseFfiHandle(_handle);
  return result;
}

void harpPluginsOmvBindingslistofSdkAnimationScalarkeyframeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _harpPluginsOmvBindingslistofSdkAnimationScalarkeyframeReleaseHandleNullable(handle);

final _harpPluginsOmvBindingslistofSdkCoreGeocoordinatesCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_core_GeoCoordinates_create_handle'));
final _harpPluginsOmvBindingslistofSdkCoreGeocoordinatesReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_core_GeoCoordinates_release_handle'));
final _harpPluginsOmvBindingslistofSdkCoreGeocoordinatesInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_core_GeoCoordinates_insert'));
final _harpPluginsOmvBindingslistofSdkCoreGeocoordinatesIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_core_GeoCoordinates_iterator'));
final _harpPluginsOmvBindingslistofSdkCoreGeocoordinatesIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_core_GeoCoordinates_iterator_release_handle'));
final _harpPluginsOmvBindingslistofSdkCoreGeocoordinatesIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_core_GeoCoordinates_iterator_is_valid'));
final _harpPluginsOmvBindingslistofSdkCoreGeocoordinatesIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_core_GeoCoordinates_iterator_increment'));
final _harpPluginsOmvBindingslistofSdkCoreGeocoordinatesIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_core_GeoCoordinates_iterator_get'));

Pointer<Void> harpPluginsOmvBindingslistofSdkCoreGeocoordinatesToFfi(List<GeoCoordinates> value) {
  final _result = _harpPluginsOmvBindingslistofSdkCoreGeocoordinatesCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreGeocoordinatesToFfi(element);
    _harpPluginsOmvBindingslistofSdkCoreGeocoordinatesInsert(_result, _elementHandle);
    sdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoCoordinates> harpPluginsOmvBindingslistofSdkCoreGeocoordinatesFromFfi(Pointer<Void> handle) {
  final result = List<GeoCoordinates>.empty(growable: true);
  final _iteratorHandle = _harpPluginsOmvBindingslistofSdkCoreGeocoordinatesIterator(handle);
  while (_harpPluginsOmvBindingslistofSdkCoreGeocoordinatesIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _harpPluginsOmvBindingslistofSdkCoreGeocoordinatesIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreGeocoordinatesFromFfi(_elementHandle));
    } finally {
      sdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
    }
    _harpPluginsOmvBindingslistofSdkCoreGeocoordinatesIteratorIncrement(_iteratorHandle);
  }
  _harpPluginsOmvBindingslistofSdkCoreGeocoordinatesIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void harpPluginsOmvBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(Pointer<Void> handle) => _harpPluginsOmvBindingslistofSdkCoreGeocoordinatesReleaseHandle(handle);

final _harpPluginsOmvBindingslistofSdkCoreGeocoordinatesCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_core_GeoCoordinates_create_handle_nullable'));
final _harpPluginsOmvBindingslistofSdkCoreGeocoordinatesReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_core_GeoCoordinates_release_handle_nullable'));
final _harpPluginsOmvBindingslistofSdkCoreGeocoordinatesGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_core_GeoCoordinates_get_value_nullable'));

Pointer<Void> harpPluginsOmvBindingslistofSdkCoreGeocoordinatesToFfiNullable(List<GeoCoordinates>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = harpPluginsOmvBindingslistofSdkCoreGeocoordinatesToFfi(value);
  final result = _harpPluginsOmvBindingslistofSdkCoreGeocoordinatesCreateHandleNullable(_handle);
  harpPluginsOmvBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

List<GeoCoordinates>? harpPluginsOmvBindingslistofSdkCoreGeocoordinatesFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _harpPluginsOmvBindingslistofSdkCoreGeocoordinatesGetValueNullable(handle);
  final result = harpPluginsOmvBindingslistofSdkCoreGeocoordinatesFromFfi(_handle);
  harpPluginsOmvBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

void harpPluginsOmvBindingslistofSdkCoreGeocoordinatesReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _harpPluginsOmvBindingslistofSdkCoreGeocoordinatesReleaseHandleNullable(handle);

final _harpPluginsOmvBindingslistofSdkMapviewMapcamerakeyframetrackCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_create_handle'));
final _harpPluginsOmvBindingslistofSdkMapviewMapcamerakeyframetrackReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_release_handle'));
final _harpPluginsOmvBindingslistofSdkMapviewMapcamerakeyframetrackInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_insert'));
final _harpPluginsOmvBindingslistofSdkMapviewMapcamerakeyframetrackIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_iterator'));
final _harpPluginsOmvBindingslistofSdkMapviewMapcamerakeyframetrackIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_iterator_release_handle'));
final _harpPluginsOmvBindingslistofSdkMapviewMapcamerakeyframetrackIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_iterator_is_valid'));
final _harpPluginsOmvBindingslistofSdkMapviewMapcamerakeyframetrackIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_iterator_increment'));
final _harpPluginsOmvBindingslistofSdkMapviewMapcamerakeyframetrackIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_iterator_get'));

Pointer<Void> harpPluginsOmvBindingslistofSdkMapviewMapcamerakeyframetrackToFfi(List<MapCameraKeyframeTrack> value) {
  final _result = _harpPluginsOmvBindingslistofSdkMapviewMapcamerakeyframetrackCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkMapviewMapcamerakeyframetrackToFfi(element);
    _harpPluginsOmvBindingslistofSdkMapviewMapcamerakeyframetrackInsert(_result, _elementHandle);
    sdkMapviewMapcamerakeyframetrackReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<MapCameraKeyframeTrack> harpPluginsOmvBindingslistofSdkMapviewMapcamerakeyframetrackFromFfi(Pointer<Void> handle) {
  final result = List<MapCameraKeyframeTrack>.empty(growable: true);
  final _iteratorHandle = _harpPluginsOmvBindingslistofSdkMapviewMapcamerakeyframetrackIterator(handle);
  while (_harpPluginsOmvBindingslistofSdkMapviewMapcamerakeyframetrackIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _harpPluginsOmvBindingslistofSdkMapviewMapcamerakeyframetrackIteratorGet(_iteratorHandle);
    try {
      result.add(sdkMapviewMapcamerakeyframetrackFromFfi(_elementHandle));
    } finally {
      sdkMapviewMapcamerakeyframetrackReleaseFfiHandle(_elementHandle);
    }
    _harpPluginsOmvBindingslistofSdkMapviewMapcamerakeyframetrackIteratorIncrement(_iteratorHandle);
  }
  _harpPluginsOmvBindingslistofSdkMapviewMapcamerakeyframetrackIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void harpPluginsOmvBindingslistofSdkMapviewMapcamerakeyframetrackReleaseFfiHandle(Pointer<Void> handle) => _harpPluginsOmvBindingslistofSdkMapviewMapcamerakeyframetrackReleaseHandle(handle);

final _harpPluginsOmvBindingslistofSdkMapviewMapcamerakeyframetrackCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_create_handle_nullable'));
final _harpPluginsOmvBindingslistofSdkMapviewMapcamerakeyframetrackReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_release_handle_nullable'));
final _harpPluginsOmvBindingslistofSdkMapviewMapcamerakeyframetrackGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_get_value_nullable'));

Pointer<Void> harpPluginsOmvBindingslistofSdkMapviewMapcamerakeyframetrackToFfiNullable(List<MapCameraKeyframeTrack>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = harpPluginsOmvBindingslistofSdkMapviewMapcamerakeyframetrackToFfi(value);
  final result = _harpPluginsOmvBindingslistofSdkMapviewMapcamerakeyframetrackCreateHandleNullable(_handle);
  harpPluginsOmvBindingslistofSdkMapviewMapcamerakeyframetrackReleaseFfiHandle(_handle);
  return result;
}

List<MapCameraKeyframeTrack>? harpPluginsOmvBindingslistofSdkMapviewMapcamerakeyframetrackFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _harpPluginsOmvBindingslistofSdkMapviewMapcamerakeyframetrackGetValueNullable(handle);
  final result = harpPluginsOmvBindingslistofSdkMapviewMapcamerakeyframetrackFromFfi(_handle);
  harpPluginsOmvBindingslistofSdkMapviewMapcamerakeyframetrackReleaseFfiHandle(_handle);
  return result;
}

void harpPluginsOmvBindingslistofSdkMapviewMapcamerakeyframetrackReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _harpPluginsOmvBindingslistofSdkMapviewMapcamerakeyframetrackReleaseHandleNullable(handle);


// Copyright (c) 2019 HERE Global B.V. and its affiliate(s).
// All rights reserved.
// This software and other materials contain proprietary information
// controlled by HERE and are protected by applicable copyright legislation.
// Any use and utilization of this software and other materials and
// disclosure to any third parties is conditional upon having a separate
// agreement with HERE for the access, use, utilization or disclosure of this
// software. In the absence of such agreement, the use of the software is not
// allowed.












final _harpPluginsRasterBindingslistofSdkAnimationGeocoordinateskeyframeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_create_handle'));
final _harpPluginsRasterBindingslistofSdkAnimationGeocoordinateskeyframeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_release_handle'));
final _harpPluginsRasterBindingslistofSdkAnimationGeocoordinateskeyframeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_insert'));
final _harpPluginsRasterBindingslistofSdkAnimationGeocoordinateskeyframeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_iterator'));
final _harpPluginsRasterBindingslistofSdkAnimationGeocoordinateskeyframeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_iterator_release_handle'));
final _harpPluginsRasterBindingslistofSdkAnimationGeocoordinateskeyframeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_iterator_is_valid'));
final _harpPluginsRasterBindingslistofSdkAnimationGeocoordinateskeyframeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_iterator_increment'));
final _harpPluginsRasterBindingslistofSdkAnimationGeocoordinateskeyframeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_iterator_get'));

Pointer<Void> harpPluginsRasterBindingslistofSdkAnimationGeocoordinateskeyframeToFfi(List<GeoCoordinatesKeyframe> value) {
  final _result = _harpPluginsRasterBindingslistofSdkAnimationGeocoordinateskeyframeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkAnimationGeocoordinateskeyframeToFfi(element);
    _harpPluginsRasterBindingslistofSdkAnimationGeocoordinateskeyframeInsert(_result, _elementHandle);
    sdkAnimationGeocoordinateskeyframeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoCoordinatesKeyframe> harpPluginsRasterBindingslistofSdkAnimationGeocoordinateskeyframeFromFfi(Pointer<Void> handle) {
  final result = List<GeoCoordinatesKeyframe>.empty(growable: true);
  final _iteratorHandle = _harpPluginsRasterBindingslistofSdkAnimationGeocoordinateskeyframeIterator(handle);
  while (_harpPluginsRasterBindingslistofSdkAnimationGeocoordinateskeyframeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _harpPluginsRasterBindingslistofSdkAnimationGeocoordinateskeyframeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkAnimationGeocoordinateskeyframeFromFfi(_elementHandle));
    } finally {
      sdkAnimationGeocoordinateskeyframeReleaseFfiHandle(_elementHandle);
    }
    _harpPluginsRasterBindingslistofSdkAnimationGeocoordinateskeyframeIteratorIncrement(_iteratorHandle);
  }
  _harpPluginsRasterBindingslistofSdkAnimationGeocoordinateskeyframeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void harpPluginsRasterBindingslistofSdkAnimationGeocoordinateskeyframeReleaseFfiHandle(Pointer<Void> handle) => _harpPluginsRasterBindingslistofSdkAnimationGeocoordinateskeyframeReleaseHandle(handle);

final _harpPluginsRasterBindingslistofSdkAnimationGeocoordinateskeyframeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_create_handle_nullable'));
final _harpPluginsRasterBindingslistofSdkAnimationGeocoordinateskeyframeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_release_handle_nullable'));
final _harpPluginsRasterBindingslistofSdkAnimationGeocoordinateskeyframeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_get_value_nullable'));

Pointer<Void> harpPluginsRasterBindingslistofSdkAnimationGeocoordinateskeyframeToFfiNullable(List<GeoCoordinatesKeyframe>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = harpPluginsRasterBindingslistofSdkAnimationGeocoordinateskeyframeToFfi(value);
  final result = _harpPluginsRasterBindingslistofSdkAnimationGeocoordinateskeyframeCreateHandleNullable(_handle);
  harpPluginsRasterBindingslistofSdkAnimationGeocoordinateskeyframeReleaseFfiHandle(_handle);
  return result;
}

List<GeoCoordinatesKeyframe>? harpPluginsRasterBindingslistofSdkAnimationGeocoordinateskeyframeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _harpPluginsRasterBindingslistofSdkAnimationGeocoordinateskeyframeGetValueNullable(handle);
  final result = harpPluginsRasterBindingslistofSdkAnimationGeocoordinateskeyframeFromFfi(_handle);
  harpPluginsRasterBindingslistofSdkAnimationGeocoordinateskeyframeReleaseFfiHandle(_handle);
  return result;
}

void harpPluginsRasterBindingslistofSdkAnimationGeocoordinateskeyframeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _harpPluginsRasterBindingslistofSdkAnimationGeocoordinateskeyframeReleaseHandleNullable(handle);

final _harpPluginsRasterBindingslistofSdkAnimationGeoorientationkeyframeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_animation_GeoOrientationKeyframe_create_handle'));
final _harpPluginsRasterBindingslistofSdkAnimationGeoorientationkeyframeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_animation_GeoOrientationKeyframe_release_handle'));
final _harpPluginsRasterBindingslistofSdkAnimationGeoorientationkeyframeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_animation_GeoOrientationKeyframe_insert'));
final _harpPluginsRasterBindingslistofSdkAnimationGeoorientationkeyframeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_animation_GeoOrientationKeyframe_iterator'));
final _harpPluginsRasterBindingslistofSdkAnimationGeoorientationkeyframeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_animation_GeoOrientationKeyframe_iterator_release_handle'));
final _harpPluginsRasterBindingslistofSdkAnimationGeoorientationkeyframeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_animation_GeoOrientationKeyframe_iterator_is_valid'));
final _harpPluginsRasterBindingslistofSdkAnimationGeoorientationkeyframeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_animation_GeoOrientationKeyframe_iterator_increment'));
final _harpPluginsRasterBindingslistofSdkAnimationGeoorientationkeyframeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_animation_GeoOrientationKeyframe_iterator_get'));

Pointer<Void> harpPluginsRasterBindingslistofSdkAnimationGeoorientationkeyframeToFfi(List<GeoOrientationKeyframe> value) {
  final _result = _harpPluginsRasterBindingslistofSdkAnimationGeoorientationkeyframeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkAnimationGeoorientationkeyframeToFfi(element);
    _harpPluginsRasterBindingslistofSdkAnimationGeoorientationkeyframeInsert(_result, _elementHandle);
    sdkAnimationGeoorientationkeyframeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoOrientationKeyframe> harpPluginsRasterBindingslistofSdkAnimationGeoorientationkeyframeFromFfi(Pointer<Void> handle) {
  final result = List<GeoOrientationKeyframe>.empty(growable: true);
  final _iteratorHandle = _harpPluginsRasterBindingslistofSdkAnimationGeoorientationkeyframeIterator(handle);
  while (_harpPluginsRasterBindingslistofSdkAnimationGeoorientationkeyframeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _harpPluginsRasterBindingslistofSdkAnimationGeoorientationkeyframeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkAnimationGeoorientationkeyframeFromFfi(_elementHandle));
    } finally {
      sdkAnimationGeoorientationkeyframeReleaseFfiHandle(_elementHandle);
    }
    _harpPluginsRasterBindingslistofSdkAnimationGeoorientationkeyframeIteratorIncrement(_iteratorHandle);
  }
  _harpPluginsRasterBindingslistofSdkAnimationGeoorientationkeyframeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void harpPluginsRasterBindingslistofSdkAnimationGeoorientationkeyframeReleaseFfiHandle(Pointer<Void> handle) => _harpPluginsRasterBindingslistofSdkAnimationGeoorientationkeyframeReleaseHandle(handle);

final _harpPluginsRasterBindingslistofSdkAnimationGeoorientationkeyframeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_animation_GeoOrientationKeyframe_create_handle_nullable'));
final _harpPluginsRasterBindingslistofSdkAnimationGeoorientationkeyframeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_animation_GeoOrientationKeyframe_release_handle_nullable'));
final _harpPluginsRasterBindingslistofSdkAnimationGeoorientationkeyframeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_animation_GeoOrientationKeyframe_get_value_nullable'));

Pointer<Void> harpPluginsRasterBindingslistofSdkAnimationGeoorientationkeyframeToFfiNullable(List<GeoOrientationKeyframe>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = harpPluginsRasterBindingslistofSdkAnimationGeoorientationkeyframeToFfi(value);
  final result = _harpPluginsRasterBindingslistofSdkAnimationGeoorientationkeyframeCreateHandleNullable(_handle);
  harpPluginsRasterBindingslistofSdkAnimationGeoorientationkeyframeReleaseFfiHandle(_handle);
  return result;
}

List<GeoOrientationKeyframe>? harpPluginsRasterBindingslistofSdkAnimationGeoorientationkeyframeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _harpPluginsRasterBindingslistofSdkAnimationGeoorientationkeyframeGetValueNullable(handle);
  final result = harpPluginsRasterBindingslistofSdkAnimationGeoorientationkeyframeFromFfi(_handle);
  harpPluginsRasterBindingslistofSdkAnimationGeoorientationkeyframeReleaseFfiHandle(_handle);
  return result;
}

void harpPluginsRasterBindingslistofSdkAnimationGeoorientationkeyframeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _harpPluginsRasterBindingslistofSdkAnimationGeoorientationkeyframeReleaseHandleNullable(handle);

final _harpPluginsRasterBindingslistofSdkAnimationPoint2dkeyframeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_animation_Point2DKeyframe_create_handle'));
final _harpPluginsRasterBindingslistofSdkAnimationPoint2dkeyframeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_animation_Point2DKeyframe_release_handle'));
final _harpPluginsRasterBindingslistofSdkAnimationPoint2dkeyframeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_animation_Point2DKeyframe_insert'));
final _harpPluginsRasterBindingslistofSdkAnimationPoint2dkeyframeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_animation_Point2DKeyframe_iterator'));
final _harpPluginsRasterBindingslistofSdkAnimationPoint2dkeyframeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_animation_Point2DKeyframe_iterator_release_handle'));
final _harpPluginsRasterBindingslistofSdkAnimationPoint2dkeyframeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_animation_Point2DKeyframe_iterator_is_valid'));
final _harpPluginsRasterBindingslistofSdkAnimationPoint2dkeyframeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_animation_Point2DKeyframe_iterator_increment'));
final _harpPluginsRasterBindingslistofSdkAnimationPoint2dkeyframeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_animation_Point2DKeyframe_iterator_get'));

Pointer<Void> harpPluginsRasterBindingslistofSdkAnimationPoint2dkeyframeToFfi(List<Point2DKeyframe> value) {
  final _result = _harpPluginsRasterBindingslistofSdkAnimationPoint2dkeyframeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkAnimationPoint2dkeyframeToFfi(element);
    _harpPluginsRasterBindingslistofSdkAnimationPoint2dkeyframeInsert(_result, _elementHandle);
    sdkAnimationPoint2dkeyframeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Point2DKeyframe> harpPluginsRasterBindingslistofSdkAnimationPoint2dkeyframeFromFfi(Pointer<Void> handle) {
  final result = List<Point2DKeyframe>.empty(growable: true);
  final _iteratorHandle = _harpPluginsRasterBindingslistofSdkAnimationPoint2dkeyframeIterator(handle);
  while (_harpPluginsRasterBindingslistofSdkAnimationPoint2dkeyframeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _harpPluginsRasterBindingslistofSdkAnimationPoint2dkeyframeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkAnimationPoint2dkeyframeFromFfi(_elementHandle));
    } finally {
      sdkAnimationPoint2dkeyframeReleaseFfiHandle(_elementHandle);
    }
    _harpPluginsRasterBindingslistofSdkAnimationPoint2dkeyframeIteratorIncrement(_iteratorHandle);
  }
  _harpPluginsRasterBindingslistofSdkAnimationPoint2dkeyframeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void harpPluginsRasterBindingslistofSdkAnimationPoint2dkeyframeReleaseFfiHandle(Pointer<Void> handle) => _harpPluginsRasterBindingslistofSdkAnimationPoint2dkeyframeReleaseHandle(handle);

final _harpPluginsRasterBindingslistofSdkAnimationPoint2dkeyframeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_animation_Point2DKeyframe_create_handle_nullable'));
final _harpPluginsRasterBindingslistofSdkAnimationPoint2dkeyframeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_animation_Point2DKeyframe_release_handle_nullable'));
final _harpPluginsRasterBindingslistofSdkAnimationPoint2dkeyframeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_animation_Point2DKeyframe_get_value_nullable'));

Pointer<Void> harpPluginsRasterBindingslistofSdkAnimationPoint2dkeyframeToFfiNullable(List<Point2DKeyframe>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = harpPluginsRasterBindingslistofSdkAnimationPoint2dkeyframeToFfi(value);
  final result = _harpPluginsRasterBindingslistofSdkAnimationPoint2dkeyframeCreateHandleNullable(_handle);
  harpPluginsRasterBindingslistofSdkAnimationPoint2dkeyframeReleaseFfiHandle(_handle);
  return result;
}

List<Point2DKeyframe>? harpPluginsRasterBindingslistofSdkAnimationPoint2dkeyframeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _harpPluginsRasterBindingslistofSdkAnimationPoint2dkeyframeGetValueNullable(handle);
  final result = harpPluginsRasterBindingslistofSdkAnimationPoint2dkeyframeFromFfi(_handle);
  harpPluginsRasterBindingslistofSdkAnimationPoint2dkeyframeReleaseFfiHandle(_handle);
  return result;
}

void harpPluginsRasterBindingslistofSdkAnimationPoint2dkeyframeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _harpPluginsRasterBindingslistofSdkAnimationPoint2dkeyframeReleaseHandleNullable(handle);

final _harpPluginsRasterBindingslistofSdkAnimationScalarkeyframeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_animation_ScalarKeyframe_create_handle'));
final _harpPluginsRasterBindingslistofSdkAnimationScalarkeyframeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_animation_ScalarKeyframe_release_handle'));
final _harpPluginsRasterBindingslistofSdkAnimationScalarkeyframeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_animation_ScalarKeyframe_insert'));
final _harpPluginsRasterBindingslistofSdkAnimationScalarkeyframeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_animation_ScalarKeyframe_iterator'));
final _harpPluginsRasterBindingslistofSdkAnimationScalarkeyframeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_animation_ScalarKeyframe_iterator_release_handle'));
final _harpPluginsRasterBindingslistofSdkAnimationScalarkeyframeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_animation_ScalarKeyframe_iterator_is_valid'));
final _harpPluginsRasterBindingslistofSdkAnimationScalarkeyframeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_animation_ScalarKeyframe_iterator_increment'));
final _harpPluginsRasterBindingslistofSdkAnimationScalarkeyframeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_animation_ScalarKeyframe_iterator_get'));

Pointer<Void> harpPluginsRasterBindingslistofSdkAnimationScalarkeyframeToFfi(List<ScalarKeyframe> value) {
  final _result = _harpPluginsRasterBindingslistofSdkAnimationScalarkeyframeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkAnimationScalarkeyframeToFfi(element);
    _harpPluginsRasterBindingslistofSdkAnimationScalarkeyframeInsert(_result, _elementHandle);
    sdkAnimationScalarkeyframeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<ScalarKeyframe> harpPluginsRasterBindingslistofSdkAnimationScalarkeyframeFromFfi(Pointer<Void> handle) {
  final result = List<ScalarKeyframe>.empty(growable: true);
  final _iteratorHandle = _harpPluginsRasterBindingslistofSdkAnimationScalarkeyframeIterator(handle);
  while (_harpPluginsRasterBindingslistofSdkAnimationScalarkeyframeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _harpPluginsRasterBindingslistofSdkAnimationScalarkeyframeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkAnimationScalarkeyframeFromFfi(_elementHandle));
    } finally {
      sdkAnimationScalarkeyframeReleaseFfiHandle(_elementHandle);
    }
    _harpPluginsRasterBindingslistofSdkAnimationScalarkeyframeIteratorIncrement(_iteratorHandle);
  }
  _harpPluginsRasterBindingslistofSdkAnimationScalarkeyframeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void harpPluginsRasterBindingslistofSdkAnimationScalarkeyframeReleaseFfiHandle(Pointer<Void> handle) => _harpPluginsRasterBindingslistofSdkAnimationScalarkeyframeReleaseHandle(handle);

final _harpPluginsRasterBindingslistofSdkAnimationScalarkeyframeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_animation_ScalarKeyframe_create_handle_nullable'));
final _harpPluginsRasterBindingslistofSdkAnimationScalarkeyframeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_animation_ScalarKeyframe_release_handle_nullable'));
final _harpPluginsRasterBindingslistofSdkAnimationScalarkeyframeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_animation_ScalarKeyframe_get_value_nullable'));

Pointer<Void> harpPluginsRasterBindingslistofSdkAnimationScalarkeyframeToFfiNullable(List<ScalarKeyframe>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = harpPluginsRasterBindingslistofSdkAnimationScalarkeyframeToFfi(value);
  final result = _harpPluginsRasterBindingslistofSdkAnimationScalarkeyframeCreateHandleNullable(_handle);
  harpPluginsRasterBindingslistofSdkAnimationScalarkeyframeReleaseFfiHandle(_handle);
  return result;
}

List<ScalarKeyframe>? harpPluginsRasterBindingslistofSdkAnimationScalarkeyframeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _harpPluginsRasterBindingslistofSdkAnimationScalarkeyframeGetValueNullable(handle);
  final result = harpPluginsRasterBindingslistofSdkAnimationScalarkeyframeFromFfi(_handle);
  harpPluginsRasterBindingslistofSdkAnimationScalarkeyframeReleaseFfiHandle(_handle);
  return result;
}

void harpPluginsRasterBindingslistofSdkAnimationScalarkeyframeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _harpPluginsRasterBindingslistofSdkAnimationScalarkeyframeReleaseHandleNullable(handle);

final _harpPluginsRasterBindingslistofSdkCoreGeocoordinatesCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_core_GeoCoordinates_create_handle'));
final _harpPluginsRasterBindingslistofSdkCoreGeocoordinatesReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_core_GeoCoordinates_release_handle'));
final _harpPluginsRasterBindingslistofSdkCoreGeocoordinatesInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_core_GeoCoordinates_insert'));
final _harpPluginsRasterBindingslistofSdkCoreGeocoordinatesIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_core_GeoCoordinates_iterator'));
final _harpPluginsRasterBindingslistofSdkCoreGeocoordinatesIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_core_GeoCoordinates_iterator_release_handle'));
final _harpPluginsRasterBindingslistofSdkCoreGeocoordinatesIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_core_GeoCoordinates_iterator_is_valid'));
final _harpPluginsRasterBindingslistofSdkCoreGeocoordinatesIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_core_GeoCoordinates_iterator_increment'));
final _harpPluginsRasterBindingslistofSdkCoreGeocoordinatesIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_core_GeoCoordinates_iterator_get'));

Pointer<Void> harpPluginsRasterBindingslistofSdkCoreGeocoordinatesToFfi(List<GeoCoordinates> value) {
  final _result = _harpPluginsRasterBindingslistofSdkCoreGeocoordinatesCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreGeocoordinatesToFfi(element);
    _harpPluginsRasterBindingslistofSdkCoreGeocoordinatesInsert(_result, _elementHandle);
    sdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoCoordinates> harpPluginsRasterBindingslistofSdkCoreGeocoordinatesFromFfi(Pointer<Void> handle) {
  final result = List<GeoCoordinates>.empty(growable: true);
  final _iteratorHandle = _harpPluginsRasterBindingslistofSdkCoreGeocoordinatesIterator(handle);
  while (_harpPluginsRasterBindingslistofSdkCoreGeocoordinatesIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _harpPluginsRasterBindingslistofSdkCoreGeocoordinatesIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreGeocoordinatesFromFfi(_elementHandle));
    } finally {
      sdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
    }
    _harpPluginsRasterBindingslistofSdkCoreGeocoordinatesIteratorIncrement(_iteratorHandle);
  }
  _harpPluginsRasterBindingslistofSdkCoreGeocoordinatesIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void harpPluginsRasterBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(Pointer<Void> handle) => _harpPluginsRasterBindingslistofSdkCoreGeocoordinatesReleaseHandle(handle);

final _harpPluginsRasterBindingslistofSdkCoreGeocoordinatesCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_core_GeoCoordinates_create_handle_nullable'));
final _harpPluginsRasterBindingslistofSdkCoreGeocoordinatesReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_core_GeoCoordinates_release_handle_nullable'));
final _harpPluginsRasterBindingslistofSdkCoreGeocoordinatesGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_core_GeoCoordinates_get_value_nullable'));

Pointer<Void> harpPluginsRasterBindingslistofSdkCoreGeocoordinatesToFfiNullable(List<GeoCoordinates>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = harpPluginsRasterBindingslistofSdkCoreGeocoordinatesToFfi(value);
  final result = _harpPluginsRasterBindingslistofSdkCoreGeocoordinatesCreateHandleNullable(_handle);
  harpPluginsRasterBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

List<GeoCoordinates>? harpPluginsRasterBindingslistofSdkCoreGeocoordinatesFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _harpPluginsRasterBindingslistofSdkCoreGeocoordinatesGetValueNullable(handle);
  final result = harpPluginsRasterBindingslistofSdkCoreGeocoordinatesFromFfi(_handle);
  harpPluginsRasterBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

void harpPluginsRasterBindingslistofSdkCoreGeocoordinatesReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _harpPluginsRasterBindingslistofSdkCoreGeocoordinatesReleaseHandleNullable(handle);

final _harpPluginsRasterBindingslistofSdkMapviewMapcamerakeyframetrackCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_create_handle'));
final _harpPluginsRasterBindingslistofSdkMapviewMapcamerakeyframetrackReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_release_handle'));
final _harpPluginsRasterBindingslistofSdkMapviewMapcamerakeyframetrackInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_insert'));
final _harpPluginsRasterBindingslistofSdkMapviewMapcamerakeyframetrackIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_iterator'));
final _harpPluginsRasterBindingslistofSdkMapviewMapcamerakeyframetrackIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_iterator_release_handle'));
final _harpPluginsRasterBindingslistofSdkMapviewMapcamerakeyframetrackIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_iterator_is_valid'));
final _harpPluginsRasterBindingslistofSdkMapviewMapcamerakeyframetrackIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_iterator_increment'));
final _harpPluginsRasterBindingslistofSdkMapviewMapcamerakeyframetrackIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_iterator_get'));

Pointer<Void> harpPluginsRasterBindingslistofSdkMapviewMapcamerakeyframetrackToFfi(List<MapCameraKeyframeTrack> value) {
  final _result = _harpPluginsRasterBindingslistofSdkMapviewMapcamerakeyframetrackCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkMapviewMapcamerakeyframetrackToFfi(element);
    _harpPluginsRasterBindingslistofSdkMapviewMapcamerakeyframetrackInsert(_result, _elementHandle);
    sdkMapviewMapcamerakeyframetrackReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<MapCameraKeyframeTrack> harpPluginsRasterBindingslistofSdkMapviewMapcamerakeyframetrackFromFfi(Pointer<Void> handle) {
  final result = List<MapCameraKeyframeTrack>.empty(growable: true);
  final _iteratorHandle = _harpPluginsRasterBindingslistofSdkMapviewMapcamerakeyframetrackIterator(handle);
  while (_harpPluginsRasterBindingslistofSdkMapviewMapcamerakeyframetrackIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _harpPluginsRasterBindingslistofSdkMapviewMapcamerakeyframetrackIteratorGet(_iteratorHandle);
    try {
      result.add(sdkMapviewMapcamerakeyframetrackFromFfi(_elementHandle));
    } finally {
      sdkMapviewMapcamerakeyframetrackReleaseFfiHandle(_elementHandle);
    }
    _harpPluginsRasterBindingslistofSdkMapviewMapcamerakeyframetrackIteratorIncrement(_iteratorHandle);
  }
  _harpPluginsRasterBindingslistofSdkMapviewMapcamerakeyframetrackIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void harpPluginsRasterBindingslistofSdkMapviewMapcamerakeyframetrackReleaseFfiHandle(Pointer<Void> handle) => _harpPluginsRasterBindingslistofSdkMapviewMapcamerakeyframetrackReleaseHandle(handle);

final _harpPluginsRasterBindingslistofSdkMapviewMapcamerakeyframetrackCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_create_handle_nullable'));
final _harpPluginsRasterBindingslistofSdkMapviewMapcamerakeyframetrackReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_release_handle_nullable'));
final _harpPluginsRasterBindingslistofSdkMapviewMapcamerakeyframetrackGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_get_value_nullable'));

Pointer<Void> harpPluginsRasterBindingslistofSdkMapviewMapcamerakeyframetrackToFfiNullable(List<MapCameraKeyframeTrack>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = harpPluginsRasterBindingslistofSdkMapviewMapcamerakeyframetrackToFfi(value);
  final result = _harpPluginsRasterBindingslistofSdkMapviewMapcamerakeyframetrackCreateHandleNullable(_handle);
  harpPluginsRasterBindingslistofSdkMapviewMapcamerakeyframetrackReleaseFfiHandle(_handle);
  return result;
}

List<MapCameraKeyframeTrack>? harpPluginsRasterBindingslistofSdkMapviewMapcamerakeyframetrackFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _harpPluginsRasterBindingslistofSdkMapviewMapcamerakeyframetrackGetValueNullable(handle);
  final result = harpPluginsRasterBindingslistofSdkMapviewMapcamerakeyframetrackFromFfi(_handle);
  harpPluginsRasterBindingslistofSdkMapviewMapcamerakeyframetrackReleaseFfiHandle(_handle);
  return result;
}

void harpPluginsRasterBindingslistofSdkMapviewMapcamerakeyframetrackReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _harpPluginsRasterBindingslistofSdkMapviewMapcamerakeyframetrackReleaseHandleNullable(handle);


// Copyright (c) 2019-2020 HERE Global B.V. and its affiliate(s).
// All rights reserved.
// This software and other materials contain proprietary information
// controlled by HERE and are protected by applicable copyright legislation.
// Any use and utilization of this software and other materials and
// disclosure to any third parties is conditional upon having a separate
// agreement with HERE for the access, use, utilization or disclosure of this
// software. In the absence of such agreement, the use of the software is not
// allowed.












final _harpSdkBindingslistofSdkAnimationGeocoordinateskeyframeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_harp_sdk_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_create_handle'));
final _harpSdkBindingslistofSdkAnimationGeocoordinateskeyframeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_release_handle'));
final _harpSdkBindingslistofSdkAnimationGeocoordinateskeyframeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_insert'));
final _harpSdkBindingslistofSdkAnimationGeocoordinateskeyframeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_iterator'));
final _harpSdkBindingslistofSdkAnimationGeocoordinateskeyframeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_iterator_release_handle'));
final _harpSdkBindingslistofSdkAnimationGeocoordinateskeyframeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_iterator_is_valid'));
final _harpSdkBindingslistofSdkAnimationGeocoordinateskeyframeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_iterator_increment'));
final _harpSdkBindingslistofSdkAnimationGeocoordinateskeyframeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_iterator_get'));

Pointer<Void> harpSdkBindingslistofSdkAnimationGeocoordinateskeyframeToFfi(List<GeoCoordinatesKeyframe> value) {
  final _result = _harpSdkBindingslistofSdkAnimationGeocoordinateskeyframeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkAnimationGeocoordinateskeyframeToFfi(element);
    _harpSdkBindingslistofSdkAnimationGeocoordinateskeyframeInsert(_result, _elementHandle);
    sdkAnimationGeocoordinateskeyframeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoCoordinatesKeyframe> harpSdkBindingslistofSdkAnimationGeocoordinateskeyframeFromFfi(Pointer<Void> handle) {
  final result = List<GeoCoordinatesKeyframe>.empty(growable: true);
  final _iteratorHandle = _harpSdkBindingslistofSdkAnimationGeocoordinateskeyframeIterator(handle);
  while (_harpSdkBindingslistofSdkAnimationGeocoordinateskeyframeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _harpSdkBindingslistofSdkAnimationGeocoordinateskeyframeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkAnimationGeocoordinateskeyframeFromFfi(_elementHandle));
    } finally {
      sdkAnimationGeocoordinateskeyframeReleaseFfiHandle(_elementHandle);
    }
    _harpSdkBindingslistofSdkAnimationGeocoordinateskeyframeIteratorIncrement(_iteratorHandle);
  }
  _harpSdkBindingslistofSdkAnimationGeocoordinateskeyframeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void harpSdkBindingslistofSdkAnimationGeocoordinateskeyframeReleaseFfiHandle(Pointer<Void> handle) => _harpSdkBindingslistofSdkAnimationGeocoordinateskeyframeReleaseHandle(handle);

final _harpSdkBindingslistofSdkAnimationGeocoordinateskeyframeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_create_handle_nullable'));
final _harpSdkBindingslistofSdkAnimationGeocoordinateskeyframeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_release_handle_nullable'));
final _harpSdkBindingslistofSdkAnimationGeocoordinateskeyframeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_get_value_nullable'));

Pointer<Void> harpSdkBindingslistofSdkAnimationGeocoordinateskeyframeToFfiNullable(List<GeoCoordinatesKeyframe>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = harpSdkBindingslistofSdkAnimationGeocoordinateskeyframeToFfi(value);
  final result = _harpSdkBindingslistofSdkAnimationGeocoordinateskeyframeCreateHandleNullable(_handle);
  harpSdkBindingslistofSdkAnimationGeocoordinateskeyframeReleaseFfiHandle(_handle);
  return result;
}

List<GeoCoordinatesKeyframe>? harpSdkBindingslistofSdkAnimationGeocoordinateskeyframeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _harpSdkBindingslistofSdkAnimationGeocoordinateskeyframeGetValueNullable(handle);
  final result = harpSdkBindingslistofSdkAnimationGeocoordinateskeyframeFromFfi(_handle);
  harpSdkBindingslistofSdkAnimationGeocoordinateskeyframeReleaseFfiHandle(_handle);
  return result;
}

void harpSdkBindingslistofSdkAnimationGeocoordinateskeyframeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _harpSdkBindingslistofSdkAnimationGeocoordinateskeyframeReleaseHandleNullable(handle);

final _harpSdkBindingslistofSdkAnimationGeoorientationkeyframeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_harp_sdk_bindingsListOf_sdk_animation_GeoOrientationKeyframe_create_handle'));
final _harpSdkBindingslistofSdkAnimationGeoorientationkeyframeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_animation_GeoOrientationKeyframe_release_handle'));
final _harpSdkBindingslistofSdkAnimationGeoorientationkeyframeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_animation_GeoOrientationKeyframe_insert'));
final _harpSdkBindingslistofSdkAnimationGeoorientationkeyframeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_animation_GeoOrientationKeyframe_iterator'));
final _harpSdkBindingslistofSdkAnimationGeoorientationkeyframeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_animation_GeoOrientationKeyframe_iterator_release_handle'));
final _harpSdkBindingslistofSdkAnimationGeoorientationkeyframeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_animation_GeoOrientationKeyframe_iterator_is_valid'));
final _harpSdkBindingslistofSdkAnimationGeoorientationkeyframeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_animation_GeoOrientationKeyframe_iterator_increment'));
final _harpSdkBindingslistofSdkAnimationGeoorientationkeyframeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_animation_GeoOrientationKeyframe_iterator_get'));

Pointer<Void> harpSdkBindingslistofSdkAnimationGeoorientationkeyframeToFfi(List<GeoOrientationKeyframe> value) {
  final _result = _harpSdkBindingslistofSdkAnimationGeoorientationkeyframeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkAnimationGeoorientationkeyframeToFfi(element);
    _harpSdkBindingslistofSdkAnimationGeoorientationkeyframeInsert(_result, _elementHandle);
    sdkAnimationGeoorientationkeyframeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoOrientationKeyframe> harpSdkBindingslistofSdkAnimationGeoorientationkeyframeFromFfi(Pointer<Void> handle) {
  final result = List<GeoOrientationKeyframe>.empty(growable: true);
  final _iteratorHandle = _harpSdkBindingslistofSdkAnimationGeoorientationkeyframeIterator(handle);
  while (_harpSdkBindingslistofSdkAnimationGeoorientationkeyframeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _harpSdkBindingslistofSdkAnimationGeoorientationkeyframeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkAnimationGeoorientationkeyframeFromFfi(_elementHandle));
    } finally {
      sdkAnimationGeoorientationkeyframeReleaseFfiHandle(_elementHandle);
    }
    _harpSdkBindingslistofSdkAnimationGeoorientationkeyframeIteratorIncrement(_iteratorHandle);
  }
  _harpSdkBindingslistofSdkAnimationGeoorientationkeyframeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void harpSdkBindingslistofSdkAnimationGeoorientationkeyframeReleaseFfiHandle(Pointer<Void> handle) => _harpSdkBindingslistofSdkAnimationGeoorientationkeyframeReleaseHandle(handle);

final _harpSdkBindingslistofSdkAnimationGeoorientationkeyframeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_animation_GeoOrientationKeyframe_create_handle_nullable'));
final _harpSdkBindingslistofSdkAnimationGeoorientationkeyframeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_animation_GeoOrientationKeyframe_release_handle_nullable'));
final _harpSdkBindingslistofSdkAnimationGeoorientationkeyframeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_animation_GeoOrientationKeyframe_get_value_nullable'));

Pointer<Void> harpSdkBindingslistofSdkAnimationGeoorientationkeyframeToFfiNullable(List<GeoOrientationKeyframe>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = harpSdkBindingslistofSdkAnimationGeoorientationkeyframeToFfi(value);
  final result = _harpSdkBindingslistofSdkAnimationGeoorientationkeyframeCreateHandleNullable(_handle);
  harpSdkBindingslistofSdkAnimationGeoorientationkeyframeReleaseFfiHandle(_handle);
  return result;
}

List<GeoOrientationKeyframe>? harpSdkBindingslistofSdkAnimationGeoorientationkeyframeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _harpSdkBindingslistofSdkAnimationGeoorientationkeyframeGetValueNullable(handle);
  final result = harpSdkBindingslistofSdkAnimationGeoorientationkeyframeFromFfi(_handle);
  harpSdkBindingslistofSdkAnimationGeoorientationkeyframeReleaseFfiHandle(_handle);
  return result;
}

void harpSdkBindingslistofSdkAnimationGeoorientationkeyframeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _harpSdkBindingslistofSdkAnimationGeoorientationkeyframeReleaseHandleNullable(handle);

final _harpSdkBindingslistofSdkAnimationPoint2dkeyframeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_harp_sdk_bindingsListOf_sdk_animation_Point2DKeyframe_create_handle'));
final _harpSdkBindingslistofSdkAnimationPoint2dkeyframeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_animation_Point2DKeyframe_release_handle'));
final _harpSdkBindingslistofSdkAnimationPoint2dkeyframeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_animation_Point2DKeyframe_insert'));
final _harpSdkBindingslistofSdkAnimationPoint2dkeyframeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_animation_Point2DKeyframe_iterator'));
final _harpSdkBindingslistofSdkAnimationPoint2dkeyframeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_animation_Point2DKeyframe_iterator_release_handle'));
final _harpSdkBindingslistofSdkAnimationPoint2dkeyframeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_animation_Point2DKeyframe_iterator_is_valid'));
final _harpSdkBindingslistofSdkAnimationPoint2dkeyframeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_animation_Point2DKeyframe_iterator_increment'));
final _harpSdkBindingslistofSdkAnimationPoint2dkeyframeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_animation_Point2DKeyframe_iterator_get'));

Pointer<Void> harpSdkBindingslistofSdkAnimationPoint2dkeyframeToFfi(List<Point2DKeyframe> value) {
  final _result = _harpSdkBindingslistofSdkAnimationPoint2dkeyframeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkAnimationPoint2dkeyframeToFfi(element);
    _harpSdkBindingslistofSdkAnimationPoint2dkeyframeInsert(_result, _elementHandle);
    sdkAnimationPoint2dkeyframeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Point2DKeyframe> harpSdkBindingslistofSdkAnimationPoint2dkeyframeFromFfi(Pointer<Void> handle) {
  final result = List<Point2DKeyframe>.empty(growable: true);
  final _iteratorHandle = _harpSdkBindingslistofSdkAnimationPoint2dkeyframeIterator(handle);
  while (_harpSdkBindingslistofSdkAnimationPoint2dkeyframeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _harpSdkBindingslistofSdkAnimationPoint2dkeyframeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkAnimationPoint2dkeyframeFromFfi(_elementHandle));
    } finally {
      sdkAnimationPoint2dkeyframeReleaseFfiHandle(_elementHandle);
    }
    _harpSdkBindingslistofSdkAnimationPoint2dkeyframeIteratorIncrement(_iteratorHandle);
  }
  _harpSdkBindingslistofSdkAnimationPoint2dkeyframeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void harpSdkBindingslistofSdkAnimationPoint2dkeyframeReleaseFfiHandle(Pointer<Void> handle) => _harpSdkBindingslistofSdkAnimationPoint2dkeyframeReleaseHandle(handle);

final _harpSdkBindingslistofSdkAnimationPoint2dkeyframeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_animation_Point2DKeyframe_create_handle_nullable'));
final _harpSdkBindingslistofSdkAnimationPoint2dkeyframeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_animation_Point2DKeyframe_release_handle_nullable'));
final _harpSdkBindingslistofSdkAnimationPoint2dkeyframeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_animation_Point2DKeyframe_get_value_nullable'));

Pointer<Void> harpSdkBindingslistofSdkAnimationPoint2dkeyframeToFfiNullable(List<Point2DKeyframe>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = harpSdkBindingslistofSdkAnimationPoint2dkeyframeToFfi(value);
  final result = _harpSdkBindingslistofSdkAnimationPoint2dkeyframeCreateHandleNullable(_handle);
  harpSdkBindingslistofSdkAnimationPoint2dkeyframeReleaseFfiHandle(_handle);
  return result;
}

List<Point2DKeyframe>? harpSdkBindingslistofSdkAnimationPoint2dkeyframeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _harpSdkBindingslistofSdkAnimationPoint2dkeyframeGetValueNullable(handle);
  final result = harpSdkBindingslistofSdkAnimationPoint2dkeyframeFromFfi(_handle);
  harpSdkBindingslistofSdkAnimationPoint2dkeyframeReleaseFfiHandle(_handle);
  return result;
}

void harpSdkBindingslistofSdkAnimationPoint2dkeyframeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _harpSdkBindingslistofSdkAnimationPoint2dkeyframeReleaseHandleNullable(handle);

final _harpSdkBindingslistofSdkAnimationScalarkeyframeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_harp_sdk_bindingsListOf_sdk_animation_ScalarKeyframe_create_handle'));
final _harpSdkBindingslistofSdkAnimationScalarkeyframeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_animation_ScalarKeyframe_release_handle'));
final _harpSdkBindingslistofSdkAnimationScalarkeyframeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_animation_ScalarKeyframe_insert'));
final _harpSdkBindingslistofSdkAnimationScalarkeyframeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_animation_ScalarKeyframe_iterator'));
final _harpSdkBindingslistofSdkAnimationScalarkeyframeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_animation_ScalarKeyframe_iterator_release_handle'));
final _harpSdkBindingslistofSdkAnimationScalarkeyframeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_animation_ScalarKeyframe_iterator_is_valid'));
final _harpSdkBindingslistofSdkAnimationScalarkeyframeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_animation_ScalarKeyframe_iterator_increment'));
final _harpSdkBindingslistofSdkAnimationScalarkeyframeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_animation_ScalarKeyframe_iterator_get'));

Pointer<Void> harpSdkBindingslistofSdkAnimationScalarkeyframeToFfi(List<ScalarKeyframe> value) {
  final _result = _harpSdkBindingslistofSdkAnimationScalarkeyframeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkAnimationScalarkeyframeToFfi(element);
    _harpSdkBindingslistofSdkAnimationScalarkeyframeInsert(_result, _elementHandle);
    sdkAnimationScalarkeyframeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<ScalarKeyframe> harpSdkBindingslistofSdkAnimationScalarkeyframeFromFfi(Pointer<Void> handle) {
  final result = List<ScalarKeyframe>.empty(growable: true);
  final _iteratorHandle = _harpSdkBindingslistofSdkAnimationScalarkeyframeIterator(handle);
  while (_harpSdkBindingslistofSdkAnimationScalarkeyframeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _harpSdkBindingslistofSdkAnimationScalarkeyframeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkAnimationScalarkeyframeFromFfi(_elementHandle));
    } finally {
      sdkAnimationScalarkeyframeReleaseFfiHandle(_elementHandle);
    }
    _harpSdkBindingslistofSdkAnimationScalarkeyframeIteratorIncrement(_iteratorHandle);
  }
  _harpSdkBindingslistofSdkAnimationScalarkeyframeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void harpSdkBindingslistofSdkAnimationScalarkeyframeReleaseFfiHandle(Pointer<Void> handle) => _harpSdkBindingslistofSdkAnimationScalarkeyframeReleaseHandle(handle);

final _harpSdkBindingslistofSdkAnimationScalarkeyframeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_animation_ScalarKeyframe_create_handle_nullable'));
final _harpSdkBindingslistofSdkAnimationScalarkeyframeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_animation_ScalarKeyframe_release_handle_nullable'));
final _harpSdkBindingslistofSdkAnimationScalarkeyframeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_animation_ScalarKeyframe_get_value_nullable'));

Pointer<Void> harpSdkBindingslistofSdkAnimationScalarkeyframeToFfiNullable(List<ScalarKeyframe>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = harpSdkBindingslistofSdkAnimationScalarkeyframeToFfi(value);
  final result = _harpSdkBindingslistofSdkAnimationScalarkeyframeCreateHandleNullable(_handle);
  harpSdkBindingslistofSdkAnimationScalarkeyframeReleaseFfiHandle(_handle);
  return result;
}

List<ScalarKeyframe>? harpSdkBindingslistofSdkAnimationScalarkeyframeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _harpSdkBindingslistofSdkAnimationScalarkeyframeGetValueNullable(handle);
  final result = harpSdkBindingslistofSdkAnimationScalarkeyframeFromFfi(_handle);
  harpSdkBindingslistofSdkAnimationScalarkeyframeReleaseFfiHandle(_handle);
  return result;
}

void harpSdkBindingslistofSdkAnimationScalarkeyframeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _harpSdkBindingslistofSdkAnimationScalarkeyframeReleaseHandleNullable(handle);

final _harpSdkBindingslistofSdkCoreGeocoordinatesCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_harp_sdk_bindingsListOf_sdk_core_GeoCoordinates_create_handle'));
final _harpSdkBindingslistofSdkCoreGeocoordinatesReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_core_GeoCoordinates_release_handle'));
final _harpSdkBindingslistofSdkCoreGeocoordinatesInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_core_GeoCoordinates_insert'));
final _harpSdkBindingslistofSdkCoreGeocoordinatesIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_core_GeoCoordinates_iterator'));
final _harpSdkBindingslistofSdkCoreGeocoordinatesIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_core_GeoCoordinates_iterator_release_handle'));
final _harpSdkBindingslistofSdkCoreGeocoordinatesIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_core_GeoCoordinates_iterator_is_valid'));
final _harpSdkBindingslistofSdkCoreGeocoordinatesIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_core_GeoCoordinates_iterator_increment'));
final _harpSdkBindingslistofSdkCoreGeocoordinatesIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_core_GeoCoordinates_iterator_get'));

Pointer<Void> harpSdkBindingslistofSdkCoreGeocoordinatesToFfi(List<GeoCoordinates> value) {
  final _result = _harpSdkBindingslistofSdkCoreGeocoordinatesCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreGeocoordinatesToFfi(element);
    _harpSdkBindingslistofSdkCoreGeocoordinatesInsert(_result, _elementHandle);
    sdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoCoordinates> harpSdkBindingslistofSdkCoreGeocoordinatesFromFfi(Pointer<Void> handle) {
  final result = List<GeoCoordinates>.empty(growable: true);
  final _iteratorHandle = _harpSdkBindingslistofSdkCoreGeocoordinatesIterator(handle);
  while (_harpSdkBindingslistofSdkCoreGeocoordinatesIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _harpSdkBindingslistofSdkCoreGeocoordinatesIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreGeocoordinatesFromFfi(_elementHandle));
    } finally {
      sdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
    }
    _harpSdkBindingslistofSdkCoreGeocoordinatesIteratorIncrement(_iteratorHandle);
  }
  _harpSdkBindingslistofSdkCoreGeocoordinatesIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void harpSdkBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(Pointer<Void> handle) => _harpSdkBindingslistofSdkCoreGeocoordinatesReleaseHandle(handle);

final _harpSdkBindingslistofSdkCoreGeocoordinatesCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_core_GeoCoordinates_create_handle_nullable'));
final _harpSdkBindingslistofSdkCoreGeocoordinatesReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_core_GeoCoordinates_release_handle_nullable'));
final _harpSdkBindingslistofSdkCoreGeocoordinatesGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_core_GeoCoordinates_get_value_nullable'));

Pointer<Void> harpSdkBindingslistofSdkCoreGeocoordinatesToFfiNullable(List<GeoCoordinates>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = harpSdkBindingslistofSdkCoreGeocoordinatesToFfi(value);
  final result = _harpSdkBindingslistofSdkCoreGeocoordinatesCreateHandleNullable(_handle);
  harpSdkBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

List<GeoCoordinates>? harpSdkBindingslistofSdkCoreGeocoordinatesFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _harpSdkBindingslistofSdkCoreGeocoordinatesGetValueNullable(handle);
  final result = harpSdkBindingslistofSdkCoreGeocoordinatesFromFfi(_handle);
  harpSdkBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

void harpSdkBindingslistofSdkCoreGeocoordinatesReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _harpSdkBindingslistofSdkCoreGeocoordinatesReleaseHandleNullable(handle);

final _harpSdkBindingslistofSdkMapviewMapcamerakeyframetrackCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_create_handle'));
final _harpSdkBindingslistofSdkMapviewMapcamerakeyframetrackReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_release_handle'));
final _harpSdkBindingslistofSdkMapviewMapcamerakeyframetrackInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_insert'));
final _harpSdkBindingslistofSdkMapviewMapcamerakeyframetrackIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_iterator'));
final _harpSdkBindingslistofSdkMapviewMapcamerakeyframetrackIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_iterator_release_handle'));
final _harpSdkBindingslistofSdkMapviewMapcamerakeyframetrackIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_iterator_is_valid'));
final _harpSdkBindingslistofSdkMapviewMapcamerakeyframetrackIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_iterator_increment'));
final _harpSdkBindingslistofSdkMapviewMapcamerakeyframetrackIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_iterator_get'));

Pointer<Void> harpSdkBindingslistofSdkMapviewMapcamerakeyframetrackToFfi(List<MapCameraKeyframeTrack> value) {
  final _result = _harpSdkBindingslistofSdkMapviewMapcamerakeyframetrackCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkMapviewMapcamerakeyframetrackToFfi(element);
    _harpSdkBindingslistofSdkMapviewMapcamerakeyframetrackInsert(_result, _elementHandle);
    sdkMapviewMapcamerakeyframetrackReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<MapCameraKeyframeTrack> harpSdkBindingslistofSdkMapviewMapcamerakeyframetrackFromFfi(Pointer<Void> handle) {
  final result = List<MapCameraKeyframeTrack>.empty(growable: true);
  final _iteratorHandle = _harpSdkBindingslistofSdkMapviewMapcamerakeyframetrackIterator(handle);
  while (_harpSdkBindingslistofSdkMapviewMapcamerakeyframetrackIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _harpSdkBindingslistofSdkMapviewMapcamerakeyframetrackIteratorGet(_iteratorHandle);
    try {
      result.add(sdkMapviewMapcamerakeyframetrackFromFfi(_elementHandle));
    } finally {
      sdkMapviewMapcamerakeyframetrackReleaseFfiHandle(_elementHandle);
    }
    _harpSdkBindingslistofSdkMapviewMapcamerakeyframetrackIteratorIncrement(_iteratorHandle);
  }
  _harpSdkBindingslistofSdkMapviewMapcamerakeyframetrackIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void harpSdkBindingslistofSdkMapviewMapcamerakeyframetrackReleaseFfiHandle(Pointer<Void> handle) => _harpSdkBindingslistofSdkMapviewMapcamerakeyframetrackReleaseHandle(handle);

final _harpSdkBindingslistofSdkMapviewMapcamerakeyframetrackCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_create_handle_nullable'));
final _harpSdkBindingslistofSdkMapviewMapcamerakeyframetrackReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_release_handle_nullable'));
final _harpSdkBindingslistofSdkMapviewMapcamerakeyframetrackGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_get_value_nullable'));

Pointer<Void> harpSdkBindingslistofSdkMapviewMapcamerakeyframetrackToFfiNullable(List<MapCameraKeyframeTrack>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = harpSdkBindingslistofSdkMapviewMapcamerakeyframetrackToFfi(value);
  final result = _harpSdkBindingslistofSdkMapviewMapcamerakeyframetrackCreateHandleNullable(_handle);
  harpSdkBindingslistofSdkMapviewMapcamerakeyframetrackReleaseFfiHandle(_handle);
  return result;
}

List<MapCameraKeyframeTrack>? harpSdkBindingslistofSdkMapviewMapcamerakeyframetrackFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _harpSdkBindingslistofSdkMapviewMapcamerakeyframetrackGetValueNullable(handle);
  final result = harpSdkBindingslistofSdkMapviewMapcamerakeyframetrackFromFfi(_handle);
  harpSdkBindingslistofSdkMapviewMapcamerakeyframetrackReleaseFfiHandle(_handle);
  return result;
}

void harpSdkBindingslistofSdkMapviewMapcamerakeyframetrackReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _harpSdkBindingslistofSdkMapviewMapcamerakeyframetrackReleaseHandleNullable(handle);


// Copyright (c) 2018-2021 HERE Global B.V. and its affiliate(s).
// All rights reserved.
//
// This software and other materials contain proprietary information
// controlled by HERE and are protected by applicable copyright legislation.
// Any use and utilization of this software and other materials and
// disclosure to any third parties is conditional upon having a separate
// agreement with HERE for the access, use, utilization or disclosure of this
// software. In the absence of such agreement, the use of the software is not
// allowed.
//










final _heresdkCoreBindingslistofLocaleCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_core_bindingsListOf_Locale_create_handle'));
final _heresdkCoreBindingslistofLocaleReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_core_bindingsListOf_Locale_release_handle'));
final _heresdkCoreBindingslistofLocaleInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_core_bindingsListOf_Locale_insert'));
final _heresdkCoreBindingslistofLocaleIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_core_bindingsListOf_Locale_iterator'));
final _heresdkCoreBindingslistofLocaleIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_core_bindingsListOf_Locale_iterator_release_handle'));
final _heresdkCoreBindingslistofLocaleIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_core_bindingsListOf_Locale_iterator_is_valid'));
final _heresdkCoreBindingslistofLocaleIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_core_bindingsListOf_Locale_iterator_increment'));
final _heresdkCoreBindingslistofLocaleIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_core_bindingsListOf_Locale_iterator_get'));

Pointer<Void> heresdkCoreBindingslistofLocaleToFfi(List<Locale> value) {
  final _result = _heresdkCoreBindingslistofLocaleCreateHandle();
  for (final element in value) {
    final _elementHandle = localeToFfi(element);
    _heresdkCoreBindingslistofLocaleInsert(_result, _elementHandle);
    localeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Locale> heresdkCoreBindingslistofLocaleFromFfi(Pointer<Void> handle) {
  final result = List<Locale>.empty(growable: true);
  final _iteratorHandle = _heresdkCoreBindingslistofLocaleIterator(handle);
  while (_heresdkCoreBindingslistofLocaleIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkCoreBindingslistofLocaleIteratorGet(_iteratorHandle);
    try {
      result.add(localeFromFfi(_elementHandle));
    } finally {
      localeReleaseFfiHandle(_elementHandle);
    }
    _heresdkCoreBindingslistofLocaleIteratorIncrement(_iteratorHandle);
  }
  _heresdkCoreBindingslistofLocaleIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkCoreBindingslistofLocaleReleaseFfiHandle(Pointer<Void> handle) => _heresdkCoreBindingslistofLocaleReleaseHandle(handle);

final _heresdkCoreBindingslistofLocaleCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_core_bindingsListOf_Locale_create_handle_nullable'));
final _heresdkCoreBindingslistofLocaleReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_core_bindingsListOf_Locale_release_handle_nullable'));
final _heresdkCoreBindingslistofLocaleGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_core_bindingsListOf_Locale_get_value_nullable'));

Pointer<Void> heresdkCoreBindingslistofLocaleToFfiNullable(List<Locale>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkCoreBindingslistofLocaleToFfi(value);
  final result = _heresdkCoreBindingslistofLocaleCreateHandleNullable(_handle);
  heresdkCoreBindingslistofLocaleReleaseFfiHandle(_handle);
  return result;
}

List<Locale>? heresdkCoreBindingslistofLocaleFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkCoreBindingslistofLocaleGetValueNullable(handle);
  final result = heresdkCoreBindingslistofLocaleFromFfi(_handle);
  heresdkCoreBindingslistofLocaleReleaseFfiHandle(_handle);
  return result;
}

void heresdkCoreBindingslistofLocaleReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkCoreBindingslistofLocaleReleaseHandleNullable(handle);

final _heresdkCoreBindingslistofSdkCoreGeocoordinatesCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_core_bindingsListOf_sdk_core_GeoCoordinates_create_handle'));
final _heresdkCoreBindingslistofSdkCoreGeocoordinatesReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_core_bindingsListOf_sdk_core_GeoCoordinates_release_handle'));
final _heresdkCoreBindingslistofSdkCoreGeocoordinatesInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_core_bindingsListOf_sdk_core_GeoCoordinates_insert'));
final _heresdkCoreBindingslistofSdkCoreGeocoordinatesIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_core_bindingsListOf_sdk_core_GeoCoordinates_iterator'));
final _heresdkCoreBindingslistofSdkCoreGeocoordinatesIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_core_bindingsListOf_sdk_core_GeoCoordinates_iterator_release_handle'));
final _heresdkCoreBindingslistofSdkCoreGeocoordinatesIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_core_bindingsListOf_sdk_core_GeoCoordinates_iterator_is_valid'));
final _heresdkCoreBindingslistofSdkCoreGeocoordinatesIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_core_bindingsListOf_sdk_core_GeoCoordinates_iterator_increment'));
final _heresdkCoreBindingslistofSdkCoreGeocoordinatesIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_core_bindingsListOf_sdk_core_GeoCoordinates_iterator_get'));

Pointer<Void> heresdkCoreBindingslistofSdkCoreGeocoordinatesToFfi(List<GeoCoordinates> value) {
  final _result = _heresdkCoreBindingslistofSdkCoreGeocoordinatesCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreGeocoordinatesToFfi(element);
    _heresdkCoreBindingslistofSdkCoreGeocoordinatesInsert(_result, _elementHandle);
    sdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoCoordinates> heresdkCoreBindingslistofSdkCoreGeocoordinatesFromFfi(Pointer<Void> handle) {
  final result = List<GeoCoordinates>.empty(growable: true);
  final _iteratorHandle = _heresdkCoreBindingslistofSdkCoreGeocoordinatesIterator(handle);
  while (_heresdkCoreBindingslistofSdkCoreGeocoordinatesIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkCoreBindingslistofSdkCoreGeocoordinatesIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreGeocoordinatesFromFfi(_elementHandle));
    } finally {
      sdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
    }
    _heresdkCoreBindingslistofSdkCoreGeocoordinatesIteratorIncrement(_iteratorHandle);
  }
  _heresdkCoreBindingslistofSdkCoreGeocoordinatesIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkCoreBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(Pointer<Void> handle) => _heresdkCoreBindingslistofSdkCoreGeocoordinatesReleaseHandle(handle);

final _heresdkCoreBindingslistofSdkCoreGeocoordinatesCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_core_bindingsListOf_sdk_core_GeoCoordinates_create_handle_nullable'));
final _heresdkCoreBindingslistofSdkCoreGeocoordinatesReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_core_bindingsListOf_sdk_core_GeoCoordinates_release_handle_nullable'));
final _heresdkCoreBindingslistofSdkCoreGeocoordinatesGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_core_bindingsListOf_sdk_core_GeoCoordinates_get_value_nullable'));

Pointer<Void> heresdkCoreBindingslistofSdkCoreGeocoordinatesToFfiNullable(List<GeoCoordinates>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkCoreBindingslistofSdkCoreGeocoordinatesToFfi(value);
  final result = _heresdkCoreBindingslistofSdkCoreGeocoordinatesCreateHandleNullable(_handle);
  heresdkCoreBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

List<GeoCoordinates>? heresdkCoreBindingslistofSdkCoreGeocoordinatesFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkCoreBindingslistofSdkCoreGeocoordinatesGetValueNullable(handle);
  final result = heresdkCoreBindingslistofSdkCoreGeocoordinatesFromFfi(_handle);
  heresdkCoreBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

void heresdkCoreBindingslistofSdkCoreGeocoordinatesReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkCoreBindingslistofSdkCoreGeocoordinatesReleaseHandleNullable(handle);

final _heresdkCoreBindingslistofSdkCoreLocalizedtextCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_core_bindingsListOf_sdk_core_LocalizedText_create_handle'));
final _heresdkCoreBindingslistofSdkCoreLocalizedtextReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_core_bindingsListOf_sdk_core_LocalizedText_release_handle'));
final _heresdkCoreBindingslistofSdkCoreLocalizedtextInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_core_bindingsListOf_sdk_core_LocalizedText_insert'));
final _heresdkCoreBindingslistofSdkCoreLocalizedtextIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_core_bindingsListOf_sdk_core_LocalizedText_iterator'));
final _heresdkCoreBindingslistofSdkCoreLocalizedtextIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_core_bindingsListOf_sdk_core_LocalizedText_iterator_release_handle'));
final _heresdkCoreBindingslistofSdkCoreLocalizedtextIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_core_bindingsListOf_sdk_core_LocalizedText_iterator_is_valid'));
final _heresdkCoreBindingslistofSdkCoreLocalizedtextIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_core_bindingsListOf_sdk_core_LocalizedText_iterator_increment'));
final _heresdkCoreBindingslistofSdkCoreLocalizedtextIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_core_bindingsListOf_sdk_core_LocalizedText_iterator_get'));

Pointer<Void> heresdkCoreBindingslistofSdkCoreLocalizedtextToFfi(List<LocalizedText> value) {
  final _result = _heresdkCoreBindingslistofSdkCoreLocalizedtextCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreLocalizedtextToFfi(element);
    _heresdkCoreBindingslistofSdkCoreLocalizedtextInsert(_result, _elementHandle);
    sdkCoreLocalizedtextReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<LocalizedText> heresdkCoreBindingslistofSdkCoreLocalizedtextFromFfi(Pointer<Void> handle) {
  final result = List<LocalizedText>.empty(growable: true);
  final _iteratorHandle = _heresdkCoreBindingslistofSdkCoreLocalizedtextIterator(handle);
  while (_heresdkCoreBindingslistofSdkCoreLocalizedtextIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkCoreBindingslistofSdkCoreLocalizedtextIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreLocalizedtextFromFfi(_elementHandle));
    } finally {
      sdkCoreLocalizedtextReleaseFfiHandle(_elementHandle);
    }
    _heresdkCoreBindingslistofSdkCoreLocalizedtextIteratorIncrement(_iteratorHandle);
  }
  _heresdkCoreBindingslistofSdkCoreLocalizedtextIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkCoreBindingslistofSdkCoreLocalizedtextReleaseFfiHandle(Pointer<Void> handle) => _heresdkCoreBindingslistofSdkCoreLocalizedtextReleaseHandle(handle);

final _heresdkCoreBindingslistofSdkCoreLocalizedtextCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_core_bindingsListOf_sdk_core_LocalizedText_create_handle_nullable'));
final _heresdkCoreBindingslistofSdkCoreLocalizedtextReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_core_bindingsListOf_sdk_core_LocalizedText_release_handle_nullable'));
final _heresdkCoreBindingslistofSdkCoreLocalizedtextGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_core_bindingsListOf_sdk_core_LocalizedText_get_value_nullable'));

Pointer<Void> heresdkCoreBindingslistofSdkCoreLocalizedtextToFfiNullable(List<LocalizedText>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkCoreBindingslistofSdkCoreLocalizedtextToFfi(value);
  final result = _heresdkCoreBindingslistofSdkCoreLocalizedtextCreateHandleNullable(_handle);
  heresdkCoreBindingslistofSdkCoreLocalizedtextReleaseFfiHandle(_handle);
  return result;
}

List<LocalizedText>? heresdkCoreBindingslistofSdkCoreLocalizedtextFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkCoreBindingslistofSdkCoreLocalizedtextGetValueNullable(handle);
  final result = heresdkCoreBindingslistofSdkCoreLocalizedtextFromFfi(_handle);
  heresdkCoreBindingslistofSdkCoreLocalizedtextReleaseFfiHandle(_handle);
  return result;
}

void heresdkCoreBindingslistofSdkCoreLocalizedtextReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkCoreBindingslistofSdkCoreLocalizedtextReleaseHandleNullable(handle);


// Copyright (c) 2018-2021 HERE Global B.V. and its affiliate(s).
// All rights reserved.
//
// This software and other materials contain proprietary information
// controlled by HERE and are protected by applicable copyright legislation.
// Any use and utilization of this software and other materials and
// disclosure to any third parties is conditional upon having a separate
// agreement with HERE for the access, use, utilization or disclosure of this
// software. In the absence of such agreement, the use of the software is not
// allowed.
//










final _heresdkGesturesBindingslistofLocaleCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_gestures_bindingsListOf_Locale_create_handle'));
final _heresdkGesturesBindingslistofLocaleReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_gestures_bindingsListOf_Locale_release_handle'));
final _heresdkGesturesBindingslistofLocaleInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_gestures_bindingsListOf_Locale_insert'));
final _heresdkGesturesBindingslistofLocaleIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_gestures_bindingsListOf_Locale_iterator'));
final _heresdkGesturesBindingslistofLocaleIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_gestures_bindingsListOf_Locale_iterator_release_handle'));
final _heresdkGesturesBindingslistofLocaleIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_gestures_bindingsListOf_Locale_iterator_is_valid'));
final _heresdkGesturesBindingslistofLocaleIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_gestures_bindingsListOf_Locale_iterator_increment'));
final _heresdkGesturesBindingslistofLocaleIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_gestures_bindingsListOf_Locale_iterator_get'));

Pointer<Void> heresdkGesturesBindingslistofLocaleToFfi(List<Locale> value) {
  final _result = _heresdkGesturesBindingslistofLocaleCreateHandle();
  for (final element in value) {
    final _elementHandle = localeToFfi(element);
    _heresdkGesturesBindingslistofLocaleInsert(_result, _elementHandle);
    localeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Locale> heresdkGesturesBindingslistofLocaleFromFfi(Pointer<Void> handle) {
  final result = List<Locale>.empty(growable: true);
  final _iteratorHandle = _heresdkGesturesBindingslistofLocaleIterator(handle);
  while (_heresdkGesturesBindingslistofLocaleIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkGesturesBindingslistofLocaleIteratorGet(_iteratorHandle);
    try {
      result.add(localeFromFfi(_elementHandle));
    } finally {
      localeReleaseFfiHandle(_elementHandle);
    }
    _heresdkGesturesBindingslistofLocaleIteratorIncrement(_iteratorHandle);
  }
  _heresdkGesturesBindingslistofLocaleIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkGesturesBindingslistofLocaleReleaseFfiHandle(Pointer<Void> handle) => _heresdkGesturesBindingslistofLocaleReleaseHandle(handle);

final _heresdkGesturesBindingslistofLocaleCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_gestures_bindingsListOf_Locale_create_handle_nullable'));
final _heresdkGesturesBindingslistofLocaleReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_gestures_bindingsListOf_Locale_release_handle_nullable'));
final _heresdkGesturesBindingslistofLocaleGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_gestures_bindingsListOf_Locale_get_value_nullable'));

Pointer<Void> heresdkGesturesBindingslistofLocaleToFfiNullable(List<Locale>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkGesturesBindingslistofLocaleToFfi(value);
  final result = _heresdkGesturesBindingslistofLocaleCreateHandleNullable(_handle);
  heresdkGesturesBindingslistofLocaleReleaseFfiHandle(_handle);
  return result;
}

List<Locale>? heresdkGesturesBindingslistofLocaleFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkGesturesBindingslistofLocaleGetValueNullable(handle);
  final result = heresdkGesturesBindingslistofLocaleFromFfi(_handle);
  heresdkGesturesBindingslistofLocaleReleaseFfiHandle(_handle);
  return result;
}

void heresdkGesturesBindingslistofLocaleReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkGesturesBindingslistofLocaleReleaseHandleNullable(handle);

final _heresdkGesturesBindingslistofSdkCoreGeocoordinatesCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_gestures_bindingsListOf_sdk_core_GeoCoordinates_create_handle'));
final _heresdkGesturesBindingslistofSdkCoreGeocoordinatesReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_gestures_bindingsListOf_sdk_core_GeoCoordinates_release_handle'));
final _heresdkGesturesBindingslistofSdkCoreGeocoordinatesInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_gestures_bindingsListOf_sdk_core_GeoCoordinates_insert'));
final _heresdkGesturesBindingslistofSdkCoreGeocoordinatesIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_gestures_bindingsListOf_sdk_core_GeoCoordinates_iterator'));
final _heresdkGesturesBindingslistofSdkCoreGeocoordinatesIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_gestures_bindingsListOf_sdk_core_GeoCoordinates_iterator_release_handle'));
final _heresdkGesturesBindingslistofSdkCoreGeocoordinatesIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_gestures_bindingsListOf_sdk_core_GeoCoordinates_iterator_is_valid'));
final _heresdkGesturesBindingslistofSdkCoreGeocoordinatesIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_gestures_bindingsListOf_sdk_core_GeoCoordinates_iterator_increment'));
final _heresdkGesturesBindingslistofSdkCoreGeocoordinatesIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_gestures_bindingsListOf_sdk_core_GeoCoordinates_iterator_get'));

Pointer<Void> heresdkGesturesBindingslistofSdkCoreGeocoordinatesToFfi(List<GeoCoordinates> value) {
  final _result = _heresdkGesturesBindingslistofSdkCoreGeocoordinatesCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreGeocoordinatesToFfi(element);
    _heresdkGesturesBindingslistofSdkCoreGeocoordinatesInsert(_result, _elementHandle);
    sdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoCoordinates> heresdkGesturesBindingslistofSdkCoreGeocoordinatesFromFfi(Pointer<Void> handle) {
  final result = List<GeoCoordinates>.empty(growable: true);
  final _iteratorHandle = _heresdkGesturesBindingslistofSdkCoreGeocoordinatesIterator(handle);
  while (_heresdkGesturesBindingslistofSdkCoreGeocoordinatesIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkGesturesBindingslistofSdkCoreGeocoordinatesIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreGeocoordinatesFromFfi(_elementHandle));
    } finally {
      sdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
    }
    _heresdkGesturesBindingslistofSdkCoreGeocoordinatesIteratorIncrement(_iteratorHandle);
  }
  _heresdkGesturesBindingslistofSdkCoreGeocoordinatesIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkGesturesBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(Pointer<Void> handle) => _heresdkGesturesBindingslistofSdkCoreGeocoordinatesReleaseHandle(handle);

final _heresdkGesturesBindingslistofSdkCoreGeocoordinatesCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_gestures_bindingsListOf_sdk_core_GeoCoordinates_create_handle_nullable'));
final _heresdkGesturesBindingslistofSdkCoreGeocoordinatesReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_gestures_bindingsListOf_sdk_core_GeoCoordinates_release_handle_nullable'));
final _heresdkGesturesBindingslistofSdkCoreGeocoordinatesGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_gestures_bindingsListOf_sdk_core_GeoCoordinates_get_value_nullable'));

Pointer<Void> heresdkGesturesBindingslistofSdkCoreGeocoordinatesToFfiNullable(List<GeoCoordinates>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkGesturesBindingslistofSdkCoreGeocoordinatesToFfi(value);
  final result = _heresdkGesturesBindingslistofSdkCoreGeocoordinatesCreateHandleNullable(_handle);
  heresdkGesturesBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

List<GeoCoordinates>? heresdkGesturesBindingslistofSdkCoreGeocoordinatesFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkGesturesBindingslistofSdkCoreGeocoordinatesGetValueNullable(handle);
  final result = heresdkGesturesBindingslistofSdkCoreGeocoordinatesFromFfi(_handle);
  heresdkGesturesBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

void heresdkGesturesBindingslistofSdkCoreGeocoordinatesReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkGesturesBindingslistofSdkCoreGeocoordinatesReleaseHandleNullable(handle);

final _heresdkGesturesBindingslistofSdkCoreLocalizedtextCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_gestures_bindingsListOf_sdk_core_LocalizedText_create_handle'));
final _heresdkGesturesBindingslistofSdkCoreLocalizedtextReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_gestures_bindingsListOf_sdk_core_LocalizedText_release_handle'));
final _heresdkGesturesBindingslistofSdkCoreLocalizedtextInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_gestures_bindingsListOf_sdk_core_LocalizedText_insert'));
final _heresdkGesturesBindingslistofSdkCoreLocalizedtextIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_gestures_bindingsListOf_sdk_core_LocalizedText_iterator'));
final _heresdkGesturesBindingslistofSdkCoreLocalizedtextIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_gestures_bindingsListOf_sdk_core_LocalizedText_iterator_release_handle'));
final _heresdkGesturesBindingslistofSdkCoreLocalizedtextIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_gestures_bindingsListOf_sdk_core_LocalizedText_iterator_is_valid'));
final _heresdkGesturesBindingslistofSdkCoreLocalizedtextIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_gestures_bindingsListOf_sdk_core_LocalizedText_iterator_increment'));
final _heresdkGesturesBindingslistofSdkCoreLocalizedtextIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_gestures_bindingsListOf_sdk_core_LocalizedText_iterator_get'));

Pointer<Void> heresdkGesturesBindingslistofSdkCoreLocalizedtextToFfi(List<LocalizedText> value) {
  final _result = _heresdkGesturesBindingslistofSdkCoreLocalizedtextCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreLocalizedtextToFfi(element);
    _heresdkGesturesBindingslistofSdkCoreLocalizedtextInsert(_result, _elementHandle);
    sdkCoreLocalizedtextReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<LocalizedText> heresdkGesturesBindingslistofSdkCoreLocalizedtextFromFfi(Pointer<Void> handle) {
  final result = List<LocalizedText>.empty(growable: true);
  final _iteratorHandle = _heresdkGesturesBindingslistofSdkCoreLocalizedtextIterator(handle);
  while (_heresdkGesturesBindingslistofSdkCoreLocalizedtextIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkGesturesBindingslistofSdkCoreLocalizedtextIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreLocalizedtextFromFfi(_elementHandle));
    } finally {
      sdkCoreLocalizedtextReleaseFfiHandle(_elementHandle);
    }
    _heresdkGesturesBindingslistofSdkCoreLocalizedtextIteratorIncrement(_iteratorHandle);
  }
  _heresdkGesturesBindingslistofSdkCoreLocalizedtextIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkGesturesBindingslistofSdkCoreLocalizedtextReleaseFfiHandle(Pointer<Void> handle) => _heresdkGesturesBindingslistofSdkCoreLocalizedtextReleaseHandle(handle);

final _heresdkGesturesBindingslistofSdkCoreLocalizedtextCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_gestures_bindingsListOf_sdk_core_LocalizedText_create_handle_nullable'));
final _heresdkGesturesBindingslistofSdkCoreLocalizedtextReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_gestures_bindingsListOf_sdk_core_LocalizedText_release_handle_nullable'));
final _heresdkGesturesBindingslistofSdkCoreLocalizedtextGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_gestures_bindingsListOf_sdk_core_LocalizedText_get_value_nullable'));

Pointer<Void> heresdkGesturesBindingslistofSdkCoreLocalizedtextToFfiNullable(List<LocalizedText>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkGesturesBindingslistofSdkCoreLocalizedtextToFfi(value);
  final result = _heresdkGesturesBindingslistofSdkCoreLocalizedtextCreateHandleNullable(_handle);
  heresdkGesturesBindingslistofSdkCoreLocalizedtextReleaseFfiHandle(_handle);
  return result;
}

List<LocalizedText>? heresdkGesturesBindingslistofSdkCoreLocalizedtextFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkGesturesBindingslistofSdkCoreLocalizedtextGetValueNullable(handle);
  final result = heresdkGesturesBindingslistofSdkCoreLocalizedtextFromFfi(_handle);
  heresdkGesturesBindingslistofSdkCoreLocalizedtextReleaseFfiHandle(_handle);
  return result;
}

void heresdkGesturesBindingslistofSdkCoreLocalizedtextReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkGesturesBindingslistofSdkCoreLocalizedtextReleaseHandleNullable(handle);


// Copyright (c) 2018-2021 HERE Global B.V. and its affiliate(s).
// All rights reserved.
//
// This software and other materials contain proprietary information
// controlled by HERE and are protected by applicable copyright legislation.
// Any use and utilization of this software and other materials and
// disclosure to any third parties is conditional upon having a separate
// agreement with HERE for the access, use, utilization or disclosure of this
// software. In the absence of such agreement, the use of the software is not
// allowed.
//










final _heresdkMapviewCommonBindingslistofLocaleCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_mapview_common_bindingsListOf_Locale_create_handle'));
final _heresdkMapviewCommonBindingslistofLocaleReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_Locale_release_handle'));
final _heresdkMapviewCommonBindingslistofLocaleInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_Locale_insert'));
final _heresdkMapviewCommonBindingslistofLocaleIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_Locale_iterator'));
final _heresdkMapviewCommonBindingslistofLocaleIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_Locale_iterator_release_handle'));
final _heresdkMapviewCommonBindingslistofLocaleIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_Locale_iterator_is_valid'));
final _heresdkMapviewCommonBindingslistofLocaleIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_Locale_iterator_increment'));
final _heresdkMapviewCommonBindingslistofLocaleIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_Locale_iterator_get'));

Pointer<Void> heresdkMapviewCommonBindingslistofLocaleToFfi(List<Locale> value) {
  final _result = _heresdkMapviewCommonBindingslistofLocaleCreateHandle();
  for (final element in value) {
    final _elementHandle = localeToFfi(element);
    _heresdkMapviewCommonBindingslistofLocaleInsert(_result, _elementHandle);
    localeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Locale> heresdkMapviewCommonBindingslistofLocaleFromFfi(Pointer<Void> handle) {
  final result = List<Locale>.empty(growable: true);
  final _iteratorHandle = _heresdkMapviewCommonBindingslistofLocaleIterator(handle);
  while (_heresdkMapviewCommonBindingslistofLocaleIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkMapviewCommonBindingslistofLocaleIteratorGet(_iteratorHandle);
    try {
      result.add(localeFromFfi(_elementHandle));
    } finally {
      localeReleaseFfiHandle(_elementHandle);
    }
    _heresdkMapviewCommonBindingslistofLocaleIteratorIncrement(_iteratorHandle);
  }
  _heresdkMapviewCommonBindingslistofLocaleIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkMapviewCommonBindingslistofLocaleReleaseFfiHandle(Pointer<Void> handle) => _heresdkMapviewCommonBindingslistofLocaleReleaseHandle(handle);

final _heresdkMapviewCommonBindingslistofLocaleCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_Locale_create_handle_nullable'));
final _heresdkMapviewCommonBindingslistofLocaleReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_Locale_release_handle_nullable'));
final _heresdkMapviewCommonBindingslistofLocaleGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_Locale_get_value_nullable'));

Pointer<Void> heresdkMapviewCommonBindingslistofLocaleToFfiNullable(List<Locale>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkMapviewCommonBindingslistofLocaleToFfi(value);
  final result = _heresdkMapviewCommonBindingslistofLocaleCreateHandleNullable(_handle);
  heresdkMapviewCommonBindingslistofLocaleReleaseFfiHandle(_handle);
  return result;
}

List<Locale>? heresdkMapviewCommonBindingslistofLocaleFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkMapviewCommonBindingslistofLocaleGetValueNullable(handle);
  final result = heresdkMapviewCommonBindingslistofLocaleFromFfi(_handle);
  heresdkMapviewCommonBindingslistofLocaleReleaseFfiHandle(_handle);
  return result;
}

void heresdkMapviewCommonBindingslistofLocaleReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkMapviewCommonBindingslistofLocaleReleaseHandleNullable(handle);

final _heresdkMapviewCommonBindingslistofStringCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_mapview_common_bindingsListOf_String_create_handle'));
final _heresdkMapviewCommonBindingslistofStringReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_String_release_handle'));
final _heresdkMapviewCommonBindingslistofStringInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_String_insert'));
final _heresdkMapviewCommonBindingslistofStringIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_String_iterator'));
final _heresdkMapviewCommonBindingslistofStringIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_String_iterator_release_handle'));
final _heresdkMapviewCommonBindingslistofStringIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_String_iterator_is_valid'));
final _heresdkMapviewCommonBindingslistofStringIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_String_iterator_increment'));
final _heresdkMapviewCommonBindingslistofStringIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_String_iterator_get'));

Pointer<Void> heresdkMapviewCommonBindingslistofStringToFfi(List<String> value) {
  final _result = _heresdkMapviewCommonBindingslistofStringCreateHandle();
  for (final element in value) {
    final _elementHandle = stringToFfi(element);
    _heresdkMapviewCommonBindingslistofStringInsert(_result, _elementHandle);
    stringReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<String> heresdkMapviewCommonBindingslistofStringFromFfi(Pointer<Void> handle) {
  final result = List<String>.empty(growable: true);
  final _iteratorHandle = _heresdkMapviewCommonBindingslistofStringIterator(handle);
  while (_heresdkMapviewCommonBindingslistofStringIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkMapviewCommonBindingslistofStringIteratorGet(_iteratorHandle);
    try {
      result.add(stringFromFfi(_elementHandle));
    } finally {
      stringReleaseFfiHandle(_elementHandle);
    }
    _heresdkMapviewCommonBindingslistofStringIteratorIncrement(_iteratorHandle);
  }
  _heresdkMapviewCommonBindingslistofStringIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkMapviewCommonBindingslistofStringReleaseFfiHandle(Pointer<Void> handle) => _heresdkMapviewCommonBindingslistofStringReleaseHandle(handle);

final _heresdkMapviewCommonBindingslistofStringCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_String_create_handle_nullable'));
final _heresdkMapviewCommonBindingslistofStringReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_String_release_handle_nullable'));
final _heresdkMapviewCommonBindingslistofStringGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_String_get_value_nullable'));

Pointer<Void> heresdkMapviewCommonBindingslistofStringToFfiNullable(List<String>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkMapviewCommonBindingslistofStringToFfi(value);
  final result = _heresdkMapviewCommonBindingslistofStringCreateHandleNullable(_handle);
  heresdkMapviewCommonBindingslistofStringReleaseFfiHandle(_handle);
  return result;
}

List<String>? heresdkMapviewCommonBindingslistofStringFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkMapviewCommonBindingslistofStringGetValueNullable(handle);
  final result = heresdkMapviewCommonBindingslistofStringFromFfi(_handle);
  heresdkMapviewCommonBindingslistofStringReleaseFfiHandle(_handle);
  return result;
}

void heresdkMapviewCommonBindingslistofStringReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkMapviewCommonBindingslistofStringReleaseHandleNullable(handle);

final _heresdkMapviewCommonBindingslistofSdkCoreGeocoordinatesCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_core_GeoCoordinates_create_handle'));
final _heresdkMapviewCommonBindingslistofSdkCoreGeocoordinatesReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_core_GeoCoordinates_release_handle'));
final _heresdkMapviewCommonBindingslistofSdkCoreGeocoordinatesInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_core_GeoCoordinates_insert'));
final _heresdkMapviewCommonBindingslistofSdkCoreGeocoordinatesIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_core_GeoCoordinates_iterator'));
final _heresdkMapviewCommonBindingslistofSdkCoreGeocoordinatesIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_core_GeoCoordinates_iterator_release_handle'));
final _heresdkMapviewCommonBindingslistofSdkCoreGeocoordinatesIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_core_GeoCoordinates_iterator_is_valid'));
final _heresdkMapviewCommonBindingslistofSdkCoreGeocoordinatesIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_core_GeoCoordinates_iterator_increment'));
final _heresdkMapviewCommonBindingslistofSdkCoreGeocoordinatesIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_core_GeoCoordinates_iterator_get'));

Pointer<Void> heresdkMapviewCommonBindingslistofSdkCoreGeocoordinatesToFfi(List<GeoCoordinates> value) {
  final _result = _heresdkMapviewCommonBindingslistofSdkCoreGeocoordinatesCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreGeocoordinatesToFfi(element);
    _heresdkMapviewCommonBindingslistofSdkCoreGeocoordinatesInsert(_result, _elementHandle);
    sdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoCoordinates> heresdkMapviewCommonBindingslistofSdkCoreGeocoordinatesFromFfi(Pointer<Void> handle) {
  final result = List<GeoCoordinates>.empty(growable: true);
  final _iteratorHandle = _heresdkMapviewCommonBindingslistofSdkCoreGeocoordinatesIterator(handle);
  while (_heresdkMapviewCommonBindingslistofSdkCoreGeocoordinatesIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkMapviewCommonBindingslistofSdkCoreGeocoordinatesIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreGeocoordinatesFromFfi(_elementHandle));
    } finally {
      sdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
    }
    _heresdkMapviewCommonBindingslistofSdkCoreGeocoordinatesIteratorIncrement(_iteratorHandle);
  }
  _heresdkMapviewCommonBindingslistofSdkCoreGeocoordinatesIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkMapviewCommonBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(Pointer<Void> handle) => _heresdkMapviewCommonBindingslistofSdkCoreGeocoordinatesReleaseHandle(handle);

final _heresdkMapviewCommonBindingslistofSdkCoreGeocoordinatesCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_core_GeoCoordinates_create_handle_nullable'));
final _heresdkMapviewCommonBindingslistofSdkCoreGeocoordinatesReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_core_GeoCoordinates_release_handle_nullable'));
final _heresdkMapviewCommonBindingslistofSdkCoreGeocoordinatesGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_core_GeoCoordinates_get_value_nullable'));

Pointer<Void> heresdkMapviewCommonBindingslistofSdkCoreGeocoordinatesToFfiNullable(List<GeoCoordinates>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkMapviewCommonBindingslistofSdkCoreGeocoordinatesToFfi(value);
  final result = _heresdkMapviewCommonBindingslistofSdkCoreGeocoordinatesCreateHandleNullable(_handle);
  heresdkMapviewCommonBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

List<GeoCoordinates>? heresdkMapviewCommonBindingslistofSdkCoreGeocoordinatesFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkMapviewCommonBindingslistofSdkCoreGeocoordinatesGetValueNullable(handle);
  final result = heresdkMapviewCommonBindingslistofSdkCoreGeocoordinatesFromFfi(_handle);
  heresdkMapviewCommonBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

void heresdkMapviewCommonBindingslistofSdkCoreGeocoordinatesReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkMapviewCommonBindingslistofSdkCoreGeocoordinatesReleaseHandleNullable(handle);

final _heresdkMapviewCommonBindingslistofSdkCoreLocalizedtextCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_core_LocalizedText_create_handle'));
final _heresdkMapviewCommonBindingslistofSdkCoreLocalizedtextReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_core_LocalizedText_release_handle'));
final _heresdkMapviewCommonBindingslistofSdkCoreLocalizedtextInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_core_LocalizedText_insert'));
final _heresdkMapviewCommonBindingslistofSdkCoreLocalizedtextIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_core_LocalizedText_iterator'));
final _heresdkMapviewCommonBindingslistofSdkCoreLocalizedtextIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_core_LocalizedText_iterator_release_handle'));
final _heresdkMapviewCommonBindingslistofSdkCoreLocalizedtextIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_core_LocalizedText_iterator_is_valid'));
final _heresdkMapviewCommonBindingslistofSdkCoreLocalizedtextIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_core_LocalizedText_iterator_increment'));
final _heresdkMapviewCommonBindingslistofSdkCoreLocalizedtextIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_core_LocalizedText_iterator_get'));

Pointer<Void> heresdkMapviewCommonBindingslistofSdkCoreLocalizedtextToFfi(List<LocalizedText> value) {
  final _result = _heresdkMapviewCommonBindingslistofSdkCoreLocalizedtextCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreLocalizedtextToFfi(element);
    _heresdkMapviewCommonBindingslistofSdkCoreLocalizedtextInsert(_result, _elementHandle);
    sdkCoreLocalizedtextReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<LocalizedText> heresdkMapviewCommonBindingslistofSdkCoreLocalizedtextFromFfi(Pointer<Void> handle) {
  final result = List<LocalizedText>.empty(growable: true);
  final _iteratorHandle = _heresdkMapviewCommonBindingslistofSdkCoreLocalizedtextIterator(handle);
  while (_heresdkMapviewCommonBindingslistofSdkCoreLocalizedtextIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkMapviewCommonBindingslistofSdkCoreLocalizedtextIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreLocalizedtextFromFfi(_elementHandle));
    } finally {
      sdkCoreLocalizedtextReleaseFfiHandle(_elementHandle);
    }
    _heresdkMapviewCommonBindingslistofSdkCoreLocalizedtextIteratorIncrement(_iteratorHandle);
  }
  _heresdkMapviewCommonBindingslistofSdkCoreLocalizedtextIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkMapviewCommonBindingslistofSdkCoreLocalizedtextReleaseFfiHandle(Pointer<Void> handle) => _heresdkMapviewCommonBindingslistofSdkCoreLocalizedtextReleaseHandle(handle);

final _heresdkMapviewCommonBindingslistofSdkCoreLocalizedtextCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_core_LocalizedText_create_handle_nullable'));
final _heresdkMapviewCommonBindingslistofSdkCoreLocalizedtextReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_core_LocalizedText_release_handle_nullable'));
final _heresdkMapviewCommonBindingslistofSdkCoreLocalizedtextGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_core_LocalizedText_get_value_nullable'));

Pointer<Void> heresdkMapviewCommonBindingslistofSdkCoreLocalizedtextToFfiNullable(List<LocalizedText>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkMapviewCommonBindingslistofSdkCoreLocalizedtextToFfi(value);
  final result = _heresdkMapviewCommonBindingslistofSdkCoreLocalizedtextCreateHandleNullable(_handle);
  heresdkMapviewCommonBindingslistofSdkCoreLocalizedtextReleaseFfiHandle(_handle);
  return result;
}

List<LocalizedText>? heresdkMapviewCommonBindingslistofSdkCoreLocalizedtextFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkMapviewCommonBindingslistofSdkCoreLocalizedtextGetValueNullable(handle);
  final result = heresdkMapviewCommonBindingslistofSdkCoreLocalizedtextFromFfi(_handle);
  heresdkMapviewCommonBindingslistofSdkCoreLocalizedtextReleaseFfiHandle(_handle);
  return result;
}

void heresdkMapviewCommonBindingslistofSdkCoreLocalizedtextReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkMapviewCommonBindingslistofSdkCoreLocalizedtextReleaseHandleNullable(handle);


// Copyright (c) 2018-2021 HERE Global B.V. and its affiliate(s).
// All rights reserved.
//
// This software and other materials contain proprietary information
// controlled by HERE and are protected by applicable copyright legislation.
// Any use and utilization of this software and other materials and
// disclosure to any third parties is conditional upon having a separate
// agreement with HERE for the access, use, utilization or disclosure of this
// software. In the absence of such agreement, the use of the software is not
// allowed.
//


















final _heresdkMapviewHarpBindingslistofLocaleCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_Locale_create_handle'));
final _heresdkMapviewHarpBindingslistofLocaleReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_Locale_release_handle'));
final _heresdkMapviewHarpBindingslistofLocaleInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_Locale_insert'));
final _heresdkMapviewHarpBindingslistofLocaleIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_Locale_iterator'));
final _heresdkMapviewHarpBindingslistofLocaleIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_Locale_iterator_release_handle'));
final _heresdkMapviewHarpBindingslistofLocaleIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_Locale_iterator_is_valid'));
final _heresdkMapviewHarpBindingslistofLocaleIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_Locale_iterator_increment'));
final _heresdkMapviewHarpBindingslistofLocaleIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_Locale_iterator_get'));

Pointer<Void> heresdkMapviewHarpBindingslistofLocaleToFfi(List<Locale> value) {
  final _result = _heresdkMapviewHarpBindingslistofLocaleCreateHandle();
  for (final element in value) {
    final _elementHandle = localeToFfi(element);
    _heresdkMapviewHarpBindingslistofLocaleInsert(_result, _elementHandle);
    localeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Locale> heresdkMapviewHarpBindingslistofLocaleFromFfi(Pointer<Void> handle) {
  final result = List<Locale>.empty(growable: true);
  final _iteratorHandle = _heresdkMapviewHarpBindingslistofLocaleIterator(handle);
  while (_heresdkMapviewHarpBindingslistofLocaleIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkMapviewHarpBindingslistofLocaleIteratorGet(_iteratorHandle);
    try {
      result.add(localeFromFfi(_elementHandle));
    } finally {
      localeReleaseFfiHandle(_elementHandle);
    }
    _heresdkMapviewHarpBindingslistofLocaleIteratorIncrement(_iteratorHandle);
  }
  _heresdkMapviewHarpBindingslistofLocaleIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkMapviewHarpBindingslistofLocaleReleaseFfiHandle(Pointer<Void> handle) => _heresdkMapviewHarpBindingslistofLocaleReleaseHandle(handle);

final _heresdkMapviewHarpBindingslistofLocaleCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_Locale_create_handle_nullable'));
final _heresdkMapviewHarpBindingslistofLocaleReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_Locale_release_handle_nullable'));
final _heresdkMapviewHarpBindingslistofLocaleGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_Locale_get_value_nullable'));

Pointer<Void> heresdkMapviewHarpBindingslistofLocaleToFfiNullable(List<Locale>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkMapviewHarpBindingslistofLocaleToFfi(value);
  final result = _heresdkMapviewHarpBindingslistofLocaleCreateHandleNullable(_handle);
  heresdkMapviewHarpBindingslistofLocaleReleaseFfiHandle(_handle);
  return result;
}

List<Locale>? heresdkMapviewHarpBindingslistofLocaleFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkMapviewHarpBindingslistofLocaleGetValueNullable(handle);
  final result = heresdkMapviewHarpBindingslistofLocaleFromFfi(_handle);
  heresdkMapviewHarpBindingslistofLocaleReleaseFfiHandle(_handle);
  return result;
}

void heresdkMapviewHarpBindingslistofLocaleReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkMapviewHarpBindingslistofLocaleReleaseHandleNullable(handle);

final _heresdkMapviewHarpBindingslistofStringCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_String_create_handle'));
final _heresdkMapviewHarpBindingslistofStringReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_String_release_handle'));
final _heresdkMapviewHarpBindingslistofStringInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_String_insert'));
final _heresdkMapviewHarpBindingslistofStringIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_String_iterator'));
final _heresdkMapviewHarpBindingslistofStringIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_String_iterator_release_handle'));
final _heresdkMapviewHarpBindingslistofStringIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_String_iterator_is_valid'));
final _heresdkMapviewHarpBindingslistofStringIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_String_iterator_increment'));
final _heresdkMapviewHarpBindingslistofStringIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_String_iterator_get'));

Pointer<Void> heresdkMapviewHarpBindingslistofStringToFfi(List<String> value) {
  final _result = _heresdkMapviewHarpBindingslistofStringCreateHandle();
  for (final element in value) {
    final _elementHandle = stringToFfi(element);
    _heresdkMapviewHarpBindingslistofStringInsert(_result, _elementHandle);
    stringReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<String> heresdkMapviewHarpBindingslistofStringFromFfi(Pointer<Void> handle) {
  final result = List<String>.empty(growable: true);
  final _iteratorHandle = _heresdkMapviewHarpBindingslistofStringIterator(handle);
  while (_heresdkMapviewHarpBindingslistofStringIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkMapviewHarpBindingslistofStringIteratorGet(_iteratorHandle);
    try {
      result.add(stringFromFfi(_elementHandle));
    } finally {
      stringReleaseFfiHandle(_elementHandle);
    }
    _heresdkMapviewHarpBindingslistofStringIteratorIncrement(_iteratorHandle);
  }
  _heresdkMapviewHarpBindingslistofStringIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkMapviewHarpBindingslistofStringReleaseFfiHandle(Pointer<Void> handle) => _heresdkMapviewHarpBindingslistofStringReleaseHandle(handle);

final _heresdkMapviewHarpBindingslistofStringCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_String_create_handle_nullable'));
final _heresdkMapviewHarpBindingslistofStringReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_String_release_handle_nullable'));
final _heresdkMapviewHarpBindingslistofStringGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_String_get_value_nullable'));

Pointer<Void> heresdkMapviewHarpBindingslistofStringToFfiNullable(List<String>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkMapviewHarpBindingslistofStringToFfi(value);
  final result = _heresdkMapviewHarpBindingslistofStringCreateHandleNullable(_handle);
  heresdkMapviewHarpBindingslistofStringReleaseFfiHandle(_handle);
  return result;
}

List<String>? heresdkMapviewHarpBindingslistofStringFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkMapviewHarpBindingslistofStringGetValueNullable(handle);
  final result = heresdkMapviewHarpBindingslistofStringFromFfi(_handle);
  heresdkMapviewHarpBindingslistofStringReleaseFfiHandle(_handle);
  return result;
}

void heresdkMapviewHarpBindingslistofStringReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkMapviewHarpBindingslistofStringReleaseHandleNullable(handle);

final _heresdkMapviewHarpBindingslistofSdkAnimationGeocoordinateskeyframeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_create_handle'));
final _heresdkMapviewHarpBindingslistofSdkAnimationGeocoordinateskeyframeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_release_handle'));
final _heresdkMapviewHarpBindingslistofSdkAnimationGeocoordinateskeyframeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_insert'));
final _heresdkMapviewHarpBindingslistofSdkAnimationGeocoordinateskeyframeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_iterator'));
final _heresdkMapviewHarpBindingslistofSdkAnimationGeocoordinateskeyframeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_iterator_release_handle'));
final _heresdkMapviewHarpBindingslistofSdkAnimationGeocoordinateskeyframeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_iterator_is_valid'));
final _heresdkMapviewHarpBindingslistofSdkAnimationGeocoordinateskeyframeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_iterator_increment'));
final _heresdkMapviewHarpBindingslistofSdkAnimationGeocoordinateskeyframeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_iterator_get'));

Pointer<Void> heresdkMapviewHarpBindingslistofSdkAnimationGeocoordinateskeyframeToFfi(List<GeoCoordinatesKeyframe> value) {
  final _result = _heresdkMapviewHarpBindingslistofSdkAnimationGeocoordinateskeyframeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkAnimationGeocoordinateskeyframeToFfi(element);
    _heresdkMapviewHarpBindingslistofSdkAnimationGeocoordinateskeyframeInsert(_result, _elementHandle);
    sdkAnimationGeocoordinateskeyframeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoCoordinatesKeyframe> heresdkMapviewHarpBindingslistofSdkAnimationGeocoordinateskeyframeFromFfi(Pointer<Void> handle) {
  final result = List<GeoCoordinatesKeyframe>.empty(growable: true);
  final _iteratorHandle = _heresdkMapviewHarpBindingslistofSdkAnimationGeocoordinateskeyframeIterator(handle);
  while (_heresdkMapviewHarpBindingslistofSdkAnimationGeocoordinateskeyframeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkMapviewHarpBindingslistofSdkAnimationGeocoordinateskeyframeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkAnimationGeocoordinateskeyframeFromFfi(_elementHandle));
    } finally {
      sdkAnimationGeocoordinateskeyframeReleaseFfiHandle(_elementHandle);
    }
    _heresdkMapviewHarpBindingslistofSdkAnimationGeocoordinateskeyframeIteratorIncrement(_iteratorHandle);
  }
  _heresdkMapviewHarpBindingslistofSdkAnimationGeocoordinateskeyframeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkMapviewHarpBindingslistofSdkAnimationGeocoordinateskeyframeReleaseFfiHandle(Pointer<Void> handle) => _heresdkMapviewHarpBindingslistofSdkAnimationGeocoordinateskeyframeReleaseHandle(handle);

final _heresdkMapviewHarpBindingslistofSdkAnimationGeocoordinateskeyframeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_create_handle_nullable'));
final _heresdkMapviewHarpBindingslistofSdkAnimationGeocoordinateskeyframeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_release_handle_nullable'));
final _heresdkMapviewHarpBindingslistofSdkAnimationGeocoordinateskeyframeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_get_value_nullable'));

Pointer<Void> heresdkMapviewHarpBindingslistofSdkAnimationGeocoordinateskeyframeToFfiNullable(List<GeoCoordinatesKeyframe>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkMapviewHarpBindingslistofSdkAnimationGeocoordinateskeyframeToFfi(value);
  final result = _heresdkMapviewHarpBindingslistofSdkAnimationGeocoordinateskeyframeCreateHandleNullable(_handle);
  heresdkMapviewHarpBindingslistofSdkAnimationGeocoordinateskeyframeReleaseFfiHandle(_handle);
  return result;
}

List<GeoCoordinatesKeyframe>? heresdkMapviewHarpBindingslistofSdkAnimationGeocoordinateskeyframeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkMapviewHarpBindingslistofSdkAnimationGeocoordinateskeyframeGetValueNullable(handle);
  final result = heresdkMapviewHarpBindingslistofSdkAnimationGeocoordinateskeyframeFromFfi(_handle);
  heresdkMapviewHarpBindingslistofSdkAnimationGeocoordinateskeyframeReleaseFfiHandle(_handle);
  return result;
}

void heresdkMapviewHarpBindingslistofSdkAnimationGeocoordinateskeyframeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkMapviewHarpBindingslistofSdkAnimationGeocoordinateskeyframeReleaseHandleNullable(handle);

final _heresdkMapviewHarpBindingslistofSdkAnimationGeoorientationkeyframeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_animation_GeoOrientationKeyframe_create_handle'));
final _heresdkMapviewHarpBindingslistofSdkAnimationGeoorientationkeyframeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_animation_GeoOrientationKeyframe_release_handle'));
final _heresdkMapviewHarpBindingslistofSdkAnimationGeoorientationkeyframeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_animation_GeoOrientationKeyframe_insert'));
final _heresdkMapviewHarpBindingslistofSdkAnimationGeoorientationkeyframeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_animation_GeoOrientationKeyframe_iterator'));
final _heresdkMapviewHarpBindingslistofSdkAnimationGeoorientationkeyframeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_animation_GeoOrientationKeyframe_iterator_release_handle'));
final _heresdkMapviewHarpBindingslistofSdkAnimationGeoorientationkeyframeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_animation_GeoOrientationKeyframe_iterator_is_valid'));
final _heresdkMapviewHarpBindingslistofSdkAnimationGeoorientationkeyframeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_animation_GeoOrientationKeyframe_iterator_increment'));
final _heresdkMapviewHarpBindingslistofSdkAnimationGeoorientationkeyframeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_animation_GeoOrientationKeyframe_iterator_get'));

Pointer<Void> heresdkMapviewHarpBindingslistofSdkAnimationGeoorientationkeyframeToFfi(List<GeoOrientationKeyframe> value) {
  final _result = _heresdkMapviewHarpBindingslistofSdkAnimationGeoorientationkeyframeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkAnimationGeoorientationkeyframeToFfi(element);
    _heresdkMapviewHarpBindingslistofSdkAnimationGeoorientationkeyframeInsert(_result, _elementHandle);
    sdkAnimationGeoorientationkeyframeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoOrientationKeyframe> heresdkMapviewHarpBindingslistofSdkAnimationGeoorientationkeyframeFromFfi(Pointer<Void> handle) {
  final result = List<GeoOrientationKeyframe>.empty(growable: true);
  final _iteratorHandle = _heresdkMapviewHarpBindingslistofSdkAnimationGeoorientationkeyframeIterator(handle);
  while (_heresdkMapviewHarpBindingslistofSdkAnimationGeoorientationkeyframeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkMapviewHarpBindingslistofSdkAnimationGeoorientationkeyframeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkAnimationGeoorientationkeyframeFromFfi(_elementHandle));
    } finally {
      sdkAnimationGeoorientationkeyframeReleaseFfiHandle(_elementHandle);
    }
    _heresdkMapviewHarpBindingslistofSdkAnimationGeoorientationkeyframeIteratorIncrement(_iteratorHandle);
  }
  _heresdkMapviewHarpBindingslistofSdkAnimationGeoorientationkeyframeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkMapviewHarpBindingslistofSdkAnimationGeoorientationkeyframeReleaseFfiHandle(Pointer<Void> handle) => _heresdkMapviewHarpBindingslistofSdkAnimationGeoorientationkeyframeReleaseHandle(handle);

final _heresdkMapviewHarpBindingslistofSdkAnimationGeoorientationkeyframeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_animation_GeoOrientationKeyframe_create_handle_nullable'));
final _heresdkMapviewHarpBindingslistofSdkAnimationGeoorientationkeyframeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_animation_GeoOrientationKeyframe_release_handle_nullable'));
final _heresdkMapviewHarpBindingslistofSdkAnimationGeoorientationkeyframeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_animation_GeoOrientationKeyframe_get_value_nullable'));

Pointer<Void> heresdkMapviewHarpBindingslistofSdkAnimationGeoorientationkeyframeToFfiNullable(List<GeoOrientationKeyframe>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkMapviewHarpBindingslistofSdkAnimationGeoorientationkeyframeToFfi(value);
  final result = _heresdkMapviewHarpBindingslistofSdkAnimationGeoorientationkeyframeCreateHandleNullable(_handle);
  heresdkMapviewHarpBindingslistofSdkAnimationGeoorientationkeyframeReleaseFfiHandle(_handle);
  return result;
}

List<GeoOrientationKeyframe>? heresdkMapviewHarpBindingslistofSdkAnimationGeoorientationkeyframeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkMapviewHarpBindingslistofSdkAnimationGeoorientationkeyframeGetValueNullable(handle);
  final result = heresdkMapviewHarpBindingslistofSdkAnimationGeoorientationkeyframeFromFfi(_handle);
  heresdkMapviewHarpBindingslistofSdkAnimationGeoorientationkeyframeReleaseFfiHandle(_handle);
  return result;
}

void heresdkMapviewHarpBindingslistofSdkAnimationGeoorientationkeyframeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkMapviewHarpBindingslistofSdkAnimationGeoorientationkeyframeReleaseHandleNullable(handle);

final _heresdkMapviewHarpBindingslistofSdkAnimationPoint2dkeyframeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_animation_Point2DKeyframe_create_handle'));
final _heresdkMapviewHarpBindingslistofSdkAnimationPoint2dkeyframeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_animation_Point2DKeyframe_release_handle'));
final _heresdkMapviewHarpBindingslistofSdkAnimationPoint2dkeyframeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_animation_Point2DKeyframe_insert'));
final _heresdkMapviewHarpBindingslistofSdkAnimationPoint2dkeyframeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_animation_Point2DKeyframe_iterator'));
final _heresdkMapviewHarpBindingslistofSdkAnimationPoint2dkeyframeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_animation_Point2DKeyframe_iterator_release_handle'));
final _heresdkMapviewHarpBindingslistofSdkAnimationPoint2dkeyframeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_animation_Point2DKeyframe_iterator_is_valid'));
final _heresdkMapviewHarpBindingslistofSdkAnimationPoint2dkeyframeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_animation_Point2DKeyframe_iterator_increment'));
final _heresdkMapviewHarpBindingslistofSdkAnimationPoint2dkeyframeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_animation_Point2DKeyframe_iterator_get'));

Pointer<Void> heresdkMapviewHarpBindingslistofSdkAnimationPoint2dkeyframeToFfi(List<Point2DKeyframe> value) {
  final _result = _heresdkMapviewHarpBindingslistofSdkAnimationPoint2dkeyframeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkAnimationPoint2dkeyframeToFfi(element);
    _heresdkMapviewHarpBindingslistofSdkAnimationPoint2dkeyframeInsert(_result, _elementHandle);
    sdkAnimationPoint2dkeyframeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Point2DKeyframe> heresdkMapviewHarpBindingslistofSdkAnimationPoint2dkeyframeFromFfi(Pointer<Void> handle) {
  final result = List<Point2DKeyframe>.empty(growable: true);
  final _iteratorHandle = _heresdkMapviewHarpBindingslistofSdkAnimationPoint2dkeyframeIterator(handle);
  while (_heresdkMapviewHarpBindingslistofSdkAnimationPoint2dkeyframeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkMapviewHarpBindingslistofSdkAnimationPoint2dkeyframeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkAnimationPoint2dkeyframeFromFfi(_elementHandle));
    } finally {
      sdkAnimationPoint2dkeyframeReleaseFfiHandle(_elementHandle);
    }
    _heresdkMapviewHarpBindingslistofSdkAnimationPoint2dkeyframeIteratorIncrement(_iteratorHandle);
  }
  _heresdkMapviewHarpBindingslistofSdkAnimationPoint2dkeyframeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkMapviewHarpBindingslistofSdkAnimationPoint2dkeyframeReleaseFfiHandle(Pointer<Void> handle) => _heresdkMapviewHarpBindingslistofSdkAnimationPoint2dkeyframeReleaseHandle(handle);

final _heresdkMapviewHarpBindingslistofSdkAnimationPoint2dkeyframeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_animation_Point2DKeyframe_create_handle_nullable'));
final _heresdkMapviewHarpBindingslistofSdkAnimationPoint2dkeyframeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_animation_Point2DKeyframe_release_handle_nullable'));
final _heresdkMapviewHarpBindingslistofSdkAnimationPoint2dkeyframeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_animation_Point2DKeyframe_get_value_nullable'));

Pointer<Void> heresdkMapviewHarpBindingslistofSdkAnimationPoint2dkeyframeToFfiNullable(List<Point2DKeyframe>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkMapviewHarpBindingslistofSdkAnimationPoint2dkeyframeToFfi(value);
  final result = _heresdkMapviewHarpBindingslistofSdkAnimationPoint2dkeyframeCreateHandleNullable(_handle);
  heresdkMapviewHarpBindingslistofSdkAnimationPoint2dkeyframeReleaseFfiHandle(_handle);
  return result;
}

List<Point2DKeyframe>? heresdkMapviewHarpBindingslistofSdkAnimationPoint2dkeyframeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkMapviewHarpBindingslistofSdkAnimationPoint2dkeyframeGetValueNullable(handle);
  final result = heresdkMapviewHarpBindingslistofSdkAnimationPoint2dkeyframeFromFfi(_handle);
  heresdkMapviewHarpBindingslistofSdkAnimationPoint2dkeyframeReleaseFfiHandle(_handle);
  return result;
}

void heresdkMapviewHarpBindingslistofSdkAnimationPoint2dkeyframeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkMapviewHarpBindingslistofSdkAnimationPoint2dkeyframeReleaseHandleNullable(handle);

final _heresdkMapviewHarpBindingslistofSdkAnimationScalarkeyframeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_animation_ScalarKeyframe_create_handle'));
final _heresdkMapviewHarpBindingslistofSdkAnimationScalarkeyframeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_animation_ScalarKeyframe_release_handle'));
final _heresdkMapviewHarpBindingslistofSdkAnimationScalarkeyframeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_animation_ScalarKeyframe_insert'));
final _heresdkMapviewHarpBindingslistofSdkAnimationScalarkeyframeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_animation_ScalarKeyframe_iterator'));
final _heresdkMapviewHarpBindingslistofSdkAnimationScalarkeyframeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_animation_ScalarKeyframe_iterator_release_handle'));
final _heresdkMapviewHarpBindingslistofSdkAnimationScalarkeyframeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_animation_ScalarKeyframe_iterator_is_valid'));
final _heresdkMapviewHarpBindingslistofSdkAnimationScalarkeyframeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_animation_ScalarKeyframe_iterator_increment'));
final _heresdkMapviewHarpBindingslistofSdkAnimationScalarkeyframeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_animation_ScalarKeyframe_iterator_get'));

Pointer<Void> heresdkMapviewHarpBindingslistofSdkAnimationScalarkeyframeToFfi(List<ScalarKeyframe> value) {
  final _result = _heresdkMapviewHarpBindingslistofSdkAnimationScalarkeyframeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkAnimationScalarkeyframeToFfi(element);
    _heresdkMapviewHarpBindingslistofSdkAnimationScalarkeyframeInsert(_result, _elementHandle);
    sdkAnimationScalarkeyframeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<ScalarKeyframe> heresdkMapviewHarpBindingslistofSdkAnimationScalarkeyframeFromFfi(Pointer<Void> handle) {
  final result = List<ScalarKeyframe>.empty(growable: true);
  final _iteratorHandle = _heresdkMapviewHarpBindingslistofSdkAnimationScalarkeyframeIterator(handle);
  while (_heresdkMapviewHarpBindingslistofSdkAnimationScalarkeyframeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkMapviewHarpBindingslistofSdkAnimationScalarkeyframeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkAnimationScalarkeyframeFromFfi(_elementHandle));
    } finally {
      sdkAnimationScalarkeyframeReleaseFfiHandle(_elementHandle);
    }
    _heresdkMapviewHarpBindingslistofSdkAnimationScalarkeyframeIteratorIncrement(_iteratorHandle);
  }
  _heresdkMapviewHarpBindingslistofSdkAnimationScalarkeyframeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkMapviewHarpBindingslistofSdkAnimationScalarkeyframeReleaseFfiHandle(Pointer<Void> handle) => _heresdkMapviewHarpBindingslistofSdkAnimationScalarkeyframeReleaseHandle(handle);

final _heresdkMapviewHarpBindingslistofSdkAnimationScalarkeyframeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_animation_ScalarKeyframe_create_handle_nullable'));
final _heresdkMapviewHarpBindingslistofSdkAnimationScalarkeyframeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_animation_ScalarKeyframe_release_handle_nullable'));
final _heresdkMapviewHarpBindingslistofSdkAnimationScalarkeyframeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_animation_ScalarKeyframe_get_value_nullable'));

Pointer<Void> heresdkMapviewHarpBindingslistofSdkAnimationScalarkeyframeToFfiNullable(List<ScalarKeyframe>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkMapviewHarpBindingslistofSdkAnimationScalarkeyframeToFfi(value);
  final result = _heresdkMapviewHarpBindingslistofSdkAnimationScalarkeyframeCreateHandleNullable(_handle);
  heresdkMapviewHarpBindingslistofSdkAnimationScalarkeyframeReleaseFfiHandle(_handle);
  return result;
}

List<ScalarKeyframe>? heresdkMapviewHarpBindingslistofSdkAnimationScalarkeyframeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkMapviewHarpBindingslistofSdkAnimationScalarkeyframeGetValueNullable(handle);
  final result = heresdkMapviewHarpBindingslistofSdkAnimationScalarkeyframeFromFfi(_handle);
  heresdkMapviewHarpBindingslistofSdkAnimationScalarkeyframeReleaseFfiHandle(_handle);
  return result;
}

void heresdkMapviewHarpBindingslistofSdkAnimationScalarkeyframeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkMapviewHarpBindingslistofSdkAnimationScalarkeyframeReleaseHandleNullable(handle);

final _heresdkMapviewHarpBindingslistofSdkCoreGeocoordinatesCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_GeoCoordinates_create_handle'));
final _heresdkMapviewHarpBindingslistofSdkCoreGeocoordinatesReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_GeoCoordinates_release_handle'));
final _heresdkMapviewHarpBindingslistofSdkCoreGeocoordinatesInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_GeoCoordinates_insert'));
final _heresdkMapviewHarpBindingslistofSdkCoreGeocoordinatesIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_GeoCoordinates_iterator'));
final _heresdkMapviewHarpBindingslistofSdkCoreGeocoordinatesIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_GeoCoordinates_iterator_release_handle'));
final _heresdkMapviewHarpBindingslistofSdkCoreGeocoordinatesIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_GeoCoordinates_iterator_is_valid'));
final _heresdkMapviewHarpBindingslistofSdkCoreGeocoordinatesIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_GeoCoordinates_iterator_increment'));
final _heresdkMapviewHarpBindingslistofSdkCoreGeocoordinatesIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_GeoCoordinates_iterator_get'));

Pointer<Void> heresdkMapviewHarpBindingslistofSdkCoreGeocoordinatesToFfi(List<GeoCoordinates> value) {
  final _result = _heresdkMapviewHarpBindingslistofSdkCoreGeocoordinatesCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreGeocoordinatesToFfi(element);
    _heresdkMapviewHarpBindingslistofSdkCoreGeocoordinatesInsert(_result, _elementHandle);
    sdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoCoordinates> heresdkMapviewHarpBindingslistofSdkCoreGeocoordinatesFromFfi(Pointer<Void> handle) {
  final result = List<GeoCoordinates>.empty(growable: true);
  final _iteratorHandle = _heresdkMapviewHarpBindingslistofSdkCoreGeocoordinatesIterator(handle);
  while (_heresdkMapviewHarpBindingslistofSdkCoreGeocoordinatesIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkMapviewHarpBindingslistofSdkCoreGeocoordinatesIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreGeocoordinatesFromFfi(_elementHandle));
    } finally {
      sdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
    }
    _heresdkMapviewHarpBindingslistofSdkCoreGeocoordinatesIteratorIncrement(_iteratorHandle);
  }
  _heresdkMapviewHarpBindingslistofSdkCoreGeocoordinatesIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkMapviewHarpBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(Pointer<Void> handle) => _heresdkMapviewHarpBindingslistofSdkCoreGeocoordinatesReleaseHandle(handle);

final _heresdkMapviewHarpBindingslistofSdkCoreGeocoordinatesCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_GeoCoordinates_create_handle_nullable'));
final _heresdkMapviewHarpBindingslistofSdkCoreGeocoordinatesReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_GeoCoordinates_release_handle_nullable'));
final _heresdkMapviewHarpBindingslistofSdkCoreGeocoordinatesGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_GeoCoordinates_get_value_nullable'));

Pointer<Void> heresdkMapviewHarpBindingslistofSdkCoreGeocoordinatesToFfiNullable(List<GeoCoordinates>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkMapviewHarpBindingslistofSdkCoreGeocoordinatesToFfi(value);
  final result = _heresdkMapviewHarpBindingslistofSdkCoreGeocoordinatesCreateHandleNullable(_handle);
  heresdkMapviewHarpBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

List<GeoCoordinates>? heresdkMapviewHarpBindingslistofSdkCoreGeocoordinatesFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkMapviewHarpBindingslistofSdkCoreGeocoordinatesGetValueNullable(handle);
  final result = heresdkMapviewHarpBindingslistofSdkCoreGeocoordinatesFromFfi(_handle);
  heresdkMapviewHarpBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

void heresdkMapviewHarpBindingslistofSdkCoreGeocoordinatesReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkMapviewHarpBindingslistofSdkCoreGeocoordinatesReleaseHandleNullable(handle);

final _heresdkMapviewHarpBindingslistofSdkCoreLocalizedtextCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_LocalizedText_create_handle'));
final _heresdkMapviewHarpBindingslistofSdkCoreLocalizedtextReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_LocalizedText_release_handle'));
final _heresdkMapviewHarpBindingslistofSdkCoreLocalizedtextInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_LocalizedText_insert'));
final _heresdkMapviewHarpBindingslistofSdkCoreLocalizedtextIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_LocalizedText_iterator'));
final _heresdkMapviewHarpBindingslistofSdkCoreLocalizedtextIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_LocalizedText_iterator_release_handle'));
final _heresdkMapviewHarpBindingslistofSdkCoreLocalizedtextIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_LocalizedText_iterator_is_valid'));
final _heresdkMapviewHarpBindingslistofSdkCoreLocalizedtextIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_LocalizedText_iterator_increment'));
final _heresdkMapviewHarpBindingslistofSdkCoreLocalizedtextIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_LocalizedText_iterator_get'));

Pointer<Void> heresdkMapviewHarpBindingslistofSdkCoreLocalizedtextToFfi(List<LocalizedText> value) {
  final _result = _heresdkMapviewHarpBindingslistofSdkCoreLocalizedtextCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreLocalizedtextToFfi(element);
    _heresdkMapviewHarpBindingslistofSdkCoreLocalizedtextInsert(_result, _elementHandle);
    sdkCoreLocalizedtextReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<LocalizedText> heresdkMapviewHarpBindingslistofSdkCoreLocalizedtextFromFfi(Pointer<Void> handle) {
  final result = List<LocalizedText>.empty(growable: true);
  final _iteratorHandle = _heresdkMapviewHarpBindingslistofSdkCoreLocalizedtextIterator(handle);
  while (_heresdkMapviewHarpBindingslistofSdkCoreLocalizedtextIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkMapviewHarpBindingslistofSdkCoreLocalizedtextIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreLocalizedtextFromFfi(_elementHandle));
    } finally {
      sdkCoreLocalizedtextReleaseFfiHandle(_elementHandle);
    }
    _heresdkMapviewHarpBindingslistofSdkCoreLocalizedtextIteratorIncrement(_iteratorHandle);
  }
  _heresdkMapviewHarpBindingslistofSdkCoreLocalizedtextIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkMapviewHarpBindingslistofSdkCoreLocalizedtextReleaseFfiHandle(Pointer<Void> handle) => _heresdkMapviewHarpBindingslistofSdkCoreLocalizedtextReleaseHandle(handle);

final _heresdkMapviewHarpBindingslistofSdkCoreLocalizedtextCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_LocalizedText_create_handle_nullable'));
final _heresdkMapviewHarpBindingslistofSdkCoreLocalizedtextReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_LocalizedText_release_handle_nullable'));
final _heresdkMapviewHarpBindingslistofSdkCoreLocalizedtextGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_LocalizedText_get_value_nullable'));

Pointer<Void> heresdkMapviewHarpBindingslistofSdkCoreLocalizedtextToFfiNullable(List<LocalizedText>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkMapviewHarpBindingslistofSdkCoreLocalizedtextToFfi(value);
  final result = _heresdkMapviewHarpBindingslistofSdkCoreLocalizedtextCreateHandleNullable(_handle);
  heresdkMapviewHarpBindingslistofSdkCoreLocalizedtextReleaseFfiHandle(_handle);
  return result;
}

List<LocalizedText>? heresdkMapviewHarpBindingslistofSdkCoreLocalizedtextFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkMapviewHarpBindingslistofSdkCoreLocalizedtextGetValueNullable(handle);
  final result = heresdkMapviewHarpBindingslistofSdkCoreLocalizedtextFromFfi(_handle);
  heresdkMapviewHarpBindingslistofSdkCoreLocalizedtextReleaseFfiHandle(_handle);
  return result;
}

void heresdkMapviewHarpBindingslistofSdkCoreLocalizedtextReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkMapviewHarpBindingslistofSdkCoreLocalizedtextReleaseHandleNullable(handle);

final _heresdkMapviewHarpBindingslistofSdkMapviewMapcamerakeyframetrackCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_create_handle'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMapcamerakeyframetrackReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_release_handle'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMapcamerakeyframetrackInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_insert'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMapcamerakeyframetrackIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_iterator'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMapcamerakeyframetrackIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_iterator_release_handle'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMapcamerakeyframetrackIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_iterator_is_valid'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMapcamerakeyframetrackIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_iterator_increment'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMapcamerakeyframetrackIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_iterator_get'));

Pointer<Void> heresdkMapviewHarpBindingslistofSdkMapviewMapcamerakeyframetrackToFfi(List<MapCameraKeyframeTrack> value) {
  final _result = _heresdkMapviewHarpBindingslistofSdkMapviewMapcamerakeyframetrackCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkMapviewMapcamerakeyframetrackToFfi(element);
    _heresdkMapviewHarpBindingslistofSdkMapviewMapcamerakeyframetrackInsert(_result, _elementHandle);
    sdkMapviewMapcamerakeyframetrackReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<MapCameraKeyframeTrack> heresdkMapviewHarpBindingslistofSdkMapviewMapcamerakeyframetrackFromFfi(Pointer<Void> handle) {
  final result = List<MapCameraKeyframeTrack>.empty(growable: true);
  final _iteratorHandle = _heresdkMapviewHarpBindingslistofSdkMapviewMapcamerakeyframetrackIterator(handle);
  while (_heresdkMapviewHarpBindingslistofSdkMapviewMapcamerakeyframetrackIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkMapviewHarpBindingslistofSdkMapviewMapcamerakeyframetrackIteratorGet(_iteratorHandle);
    try {
      result.add(sdkMapviewMapcamerakeyframetrackFromFfi(_elementHandle));
    } finally {
      sdkMapviewMapcamerakeyframetrackReleaseFfiHandle(_elementHandle);
    }
    _heresdkMapviewHarpBindingslistofSdkMapviewMapcamerakeyframetrackIteratorIncrement(_iteratorHandle);
  }
  _heresdkMapviewHarpBindingslistofSdkMapviewMapcamerakeyframetrackIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkMapviewHarpBindingslistofSdkMapviewMapcamerakeyframetrackReleaseFfiHandle(Pointer<Void> handle) => _heresdkMapviewHarpBindingslistofSdkMapviewMapcamerakeyframetrackReleaseHandle(handle);

final _heresdkMapviewHarpBindingslistofSdkMapviewMapcamerakeyframetrackCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_create_handle_nullable'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMapcamerakeyframetrackReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_release_handle_nullable'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMapcamerakeyframetrackGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_get_value_nullable'));

Pointer<Void> heresdkMapviewHarpBindingslistofSdkMapviewMapcamerakeyframetrackToFfiNullable(List<MapCameraKeyframeTrack>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkMapviewHarpBindingslistofSdkMapviewMapcamerakeyframetrackToFfi(value);
  final result = _heresdkMapviewHarpBindingslistofSdkMapviewMapcamerakeyframetrackCreateHandleNullable(_handle);
  heresdkMapviewHarpBindingslistofSdkMapviewMapcamerakeyframetrackReleaseFfiHandle(_handle);
  return result;
}

List<MapCameraKeyframeTrack>? heresdkMapviewHarpBindingslistofSdkMapviewMapcamerakeyframetrackFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkMapviewHarpBindingslistofSdkMapviewMapcamerakeyframetrackGetValueNullable(handle);
  final result = heresdkMapviewHarpBindingslistofSdkMapviewMapcamerakeyframetrackFromFfi(_handle);
  heresdkMapviewHarpBindingslistofSdkMapviewMapcamerakeyframetrackReleaseFfiHandle(_handle);
  return result;
}

void heresdkMapviewHarpBindingslistofSdkMapviewMapcamerakeyframetrackReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkMapviewHarpBindingslistofSdkMapviewMapcamerakeyframetrackReleaseHandleNullable(handle);

final _heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapMarker_create_handle'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapMarker_release_handle'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapMarker_insert'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapMarker_iterator'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapMarker_iterator_release_handle'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapMarker_iterator_is_valid'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapMarker_iterator_increment'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapMarker_iterator_get'));

Pointer<Void> heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerToFfi(List<MapMarker> value) {
  final _result = _heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkMapviewMapmarkerToFfi(element);
    _heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerInsert(_result, _elementHandle);
    sdkMapviewMapmarkerReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<MapMarker> heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerFromFfi(Pointer<Void> handle) {
  final result = List<MapMarker>.empty(growable: true);
  final _iteratorHandle = _heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerIterator(handle);
  while (_heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerIteratorGet(_iteratorHandle);
    try {
      result.add(sdkMapviewMapmarkerFromFfi(_elementHandle));
    } finally {
      sdkMapviewMapmarkerReleaseFfiHandle(_elementHandle);
    }
    _heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerIteratorIncrement(_iteratorHandle);
  }
  _heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerReleaseFfiHandle(Pointer<Void> handle) => _heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerReleaseHandle(handle);

final _heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapMarker_create_handle_nullable'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapMarker_release_handle_nullable'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapMarker_get_value_nullable'));

Pointer<Void> heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerToFfiNullable(List<MapMarker>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerToFfi(value);
  final result = _heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerCreateHandleNullable(_handle);
  heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerReleaseFfiHandle(_handle);
  return result;
}

List<MapMarker>? heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerGetValueNullable(handle);
  final result = heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerFromFfi(_handle);
  heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerReleaseFfiHandle(_handle);
  return result;
}

void heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerReleaseHandleNullable(handle);

final _heresdkMapviewHarpBindingslistofSdkMapviewMappolygonCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapPolygon_create_handle'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMappolygonReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapPolygon_release_handle'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMappolygonInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapPolygon_insert'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMappolygonIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapPolygon_iterator'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMappolygonIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapPolygon_iterator_release_handle'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMappolygonIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapPolygon_iterator_is_valid'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMappolygonIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapPolygon_iterator_increment'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMappolygonIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapPolygon_iterator_get'));

Pointer<Void> heresdkMapviewHarpBindingslistofSdkMapviewMappolygonToFfi(List<MapPolygon> value) {
  final _result = _heresdkMapviewHarpBindingslistofSdkMapviewMappolygonCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkMapviewMappolygonToFfi(element);
    _heresdkMapviewHarpBindingslistofSdkMapviewMappolygonInsert(_result, _elementHandle);
    sdkMapviewMappolygonReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<MapPolygon> heresdkMapviewHarpBindingslistofSdkMapviewMappolygonFromFfi(Pointer<Void> handle) {
  final result = List<MapPolygon>.empty(growable: true);
  final _iteratorHandle = _heresdkMapviewHarpBindingslistofSdkMapviewMappolygonIterator(handle);
  while (_heresdkMapviewHarpBindingslistofSdkMapviewMappolygonIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkMapviewHarpBindingslistofSdkMapviewMappolygonIteratorGet(_iteratorHandle);
    try {
      result.add(sdkMapviewMappolygonFromFfi(_elementHandle));
    } finally {
      sdkMapviewMappolygonReleaseFfiHandle(_elementHandle);
    }
    _heresdkMapviewHarpBindingslistofSdkMapviewMappolygonIteratorIncrement(_iteratorHandle);
  }
  _heresdkMapviewHarpBindingslistofSdkMapviewMappolygonIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkMapviewHarpBindingslistofSdkMapviewMappolygonReleaseFfiHandle(Pointer<Void> handle) => _heresdkMapviewHarpBindingslistofSdkMapviewMappolygonReleaseHandle(handle);

final _heresdkMapviewHarpBindingslistofSdkMapviewMappolygonCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapPolygon_create_handle_nullable'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMappolygonReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapPolygon_release_handle_nullable'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMappolygonGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapPolygon_get_value_nullable'));

Pointer<Void> heresdkMapviewHarpBindingslistofSdkMapviewMappolygonToFfiNullable(List<MapPolygon>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkMapviewHarpBindingslistofSdkMapviewMappolygonToFfi(value);
  final result = _heresdkMapviewHarpBindingslistofSdkMapviewMappolygonCreateHandleNullable(_handle);
  heresdkMapviewHarpBindingslistofSdkMapviewMappolygonReleaseFfiHandle(_handle);
  return result;
}

List<MapPolygon>? heresdkMapviewHarpBindingslistofSdkMapviewMappolygonFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkMapviewHarpBindingslistofSdkMapviewMappolygonGetValueNullable(handle);
  final result = heresdkMapviewHarpBindingslistofSdkMapviewMappolygonFromFfi(_handle);
  heresdkMapviewHarpBindingslistofSdkMapviewMappolygonReleaseFfiHandle(_handle);
  return result;
}

void heresdkMapviewHarpBindingslistofSdkMapviewMappolygonReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkMapviewHarpBindingslistofSdkMapviewMappolygonReleaseHandleNullable(handle);

final _heresdkMapviewHarpBindingslistofSdkMapviewMappolylineCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapPolyline_create_handle'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMappolylineReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapPolyline_release_handle'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMappolylineInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapPolyline_insert'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMappolylineIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapPolyline_iterator'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMappolylineIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapPolyline_iterator_release_handle'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMappolylineIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapPolyline_iterator_is_valid'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMappolylineIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapPolyline_iterator_increment'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMappolylineIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapPolyline_iterator_get'));

Pointer<Void> heresdkMapviewHarpBindingslistofSdkMapviewMappolylineToFfi(List<MapPolyline> value) {
  final _result = _heresdkMapviewHarpBindingslistofSdkMapviewMappolylineCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkMapviewMappolylineToFfi(element);
    _heresdkMapviewHarpBindingslistofSdkMapviewMappolylineInsert(_result, _elementHandle);
    sdkMapviewMappolylineReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<MapPolyline> heresdkMapviewHarpBindingslistofSdkMapviewMappolylineFromFfi(Pointer<Void> handle) {
  final result = List<MapPolyline>.empty(growable: true);
  final _iteratorHandle = _heresdkMapviewHarpBindingslistofSdkMapviewMappolylineIterator(handle);
  while (_heresdkMapviewHarpBindingslistofSdkMapviewMappolylineIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkMapviewHarpBindingslistofSdkMapviewMappolylineIteratorGet(_iteratorHandle);
    try {
      result.add(sdkMapviewMappolylineFromFfi(_elementHandle));
    } finally {
      sdkMapviewMappolylineReleaseFfiHandle(_elementHandle);
    }
    _heresdkMapviewHarpBindingslistofSdkMapviewMappolylineIteratorIncrement(_iteratorHandle);
  }
  _heresdkMapviewHarpBindingslistofSdkMapviewMappolylineIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkMapviewHarpBindingslistofSdkMapviewMappolylineReleaseFfiHandle(Pointer<Void> handle) => _heresdkMapviewHarpBindingslistofSdkMapviewMappolylineReleaseHandle(handle);

final _heresdkMapviewHarpBindingslistofSdkMapviewMappolylineCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapPolyline_create_handle_nullable'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMappolylineReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapPolyline_release_handle_nullable'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMappolylineGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapPolyline_get_value_nullable'));

Pointer<Void> heresdkMapviewHarpBindingslistofSdkMapviewMappolylineToFfiNullable(List<MapPolyline>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkMapviewHarpBindingslistofSdkMapviewMappolylineToFfi(value);
  final result = _heresdkMapviewHarpBindingslistofSdkMapviewMappolylineCreateHandleNullable(_handle);
  heresdkMapviewHarpBindingslistofSdkMapviewMappolylineReleaseFfiHandle(_handle);
  return result;
}

List<MapPolyline>? heresdkMapviewHarpBindingslistofSdkMapviewMappolylineFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkMapviewHarpBindingslistofSdkMapviewMappolylineGetValueNullable(handle);
  final result = heresdkMapviewHarpBindingslistofSdkMapviewMappolylineFromFfi(_handle);
  heresdkMapviewHarpBindingslistofSdkMapviewMappolylineReleaseFfiHandle(_handle);
  return result;
}

void heresdkMapviewHarpBindingslistofSdkMapviewMappolylineReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkMapviewHarpBindingslistofSdkMapviewMappolylineReleaseHandleNullable(handle);


// Copyright (c) 2018-2021 HERE Global B.V. and its affiliate(s).
// All rights reserved.
//
// This software and other materials contain proprietary information
// controlled by HERE and are protected by applicable copyright legislation.
// Any use and utilization of this software and other materials and
// disclosure to any third parties is conditional upon having a separate
// agreement with HERE for the access, use, utilization or disclosure of this
// software. In the absence of such agreement, the use of the software is not
// allowed.
//






































final _heresdkRoutingBindingslistofIntCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindingsListOf_Int_create_handle'));
final _heresdkRoutingBindingslistofIntReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_Int_release_handle'));
final _heresdkRoutingBindingslistofIntInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Int32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_bindingsListOf_Int_insert'));
final _heresdkRoutingBindingslistofIntIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_Int_iterator'));
final _heresdkRoutingBindingslistofIntIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_Int_iterator_release_handle'));
final _heresdkRoutingBindingslistofIntIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_Int_iterator_is_valid'));
final _heresdkRoutingBindingslistofIntIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_Int_iterator_increment'));
final _heresdkRoutingBindingslistofIntIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_Int_iterator_get'));

Pointer<Void> heresdkRoutingBindingslistofIntToFfi(List<int> value) {
  final _result = _heresdkRoutingBindingslistofIntCreateHandle();
  for (final element in value) {
    final _elementHandle = (element);
    _heresdkRoutingBindingslistofIntInsert(_result, _elementHandle);
    
  }
  return _result;
}

List<int> heresdkRoutingBindingslistofIntFromFfi(Pointer<Void> handle) {
  final result = List<int>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingBindingslistofIntIterator(handle);
  while (_heresdkRoutingBindingslistofIntIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingBindingslistofIntIteratorGet(_iteratorHandle);
    try {
      result.add((_elementHandle));
    } finally {
      
    }
    _heresdkRoutingBindingslistofIntIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingslistofIntIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingslistofIntReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingslistofIntReleaseHandle(handle);

final _heresdkRoutingBindingslistofIntCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_Int_create_handle_nullable'));
final _heresdkRoutingBindingslistofIntReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_Int_release_handle_nullable'));
final _heresdkRoutingBindingslistofIntGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_Int_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingslistofIntToFfiNullable(List<int>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingslistofIntToFfi(value);
  final result = _heresdkRoutingBindingslistofIntCreateHandleNullable(_handle);
  heresdkRoutingBindingslistofIntReleaseFfiHandle(_handle);
  return result;
}

List<int>? heresdkRoutingBindingslistofIntFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingBindingslistofIntGetValueNullable(handle);
  final result = heresdkRoutingBindingslistofIntFromFfi(_handle);
  heresdkRoutingBindingslistofIntReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingslistofIntReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingslistofIntReleaseHandleNullable(handle);

final _heresdkRoutingBindingslistofLocaleCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindingsListOf_Locale_create_handle'));
final _heresdkRoutingBindingslistofLocaleReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_Locale_release_handle'));
final _heresdkRoutingBindingslistofLocaleInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_Locale_insert'));
final _heresdkRoutingBindingslistofLocaleIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_Locale_iterator'));
final _heresdkRoutingBindingslistofLocaleIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_Locale_iterator_release_handle'));
final _heresdkRoutingBindingslistofLocaleIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_Locale_iterator_is_valid'));
final _heresdkRoutingBindingslistofLocaleIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_Locale_iterator_increment'));
final _heresdkRoutingBindingslistofLocaleIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_Locale_iterator_get'));

Pointer<Void> heresdkRoutingBindingslistofLocaleToFfi(List<Locale> value) {
  final _result = _heresdkRoutingBindingslistofLocaleCreateHandle();
  for (final element in value) {
    final _elementHandle = localeToFfi(element);
    _heresdkRoutingBindingslistofLocaleInsert(_result, _elementHandle);
    localeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Locale> heresdkRoutingBindingslistofLocaleFromFfi(Pointer<Void> handle) {
  final result = List<Locale>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingBindingslistofLocaleIterator(handle);
  while (_heresdkRoutingBindingslistofLocaleIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingBindingslistofLocaleIteratorGet(_iteratorHandle);
    try {
      result.add(localeFromFfi(_elementHandle));
    } finally {
      localeReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingBindingslistofLocaleIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingslistofLocaleIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingslistofLocaleReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingslistofLocaleReleaseHandle(handle);

final _heresdkRoutingBindingslistofLocaleCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_Locale_create_handle_nullable'));
final _heresdkRoutingBindingslistofLocaleReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_Locale_release_handle_nullable'));
final _heresdkRoutingBindingslistofLocaleGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_Locale_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingslistofLocaleToFfiNullable(List<Locale>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingslistofLocaleToFfi(value);
  final result = _heresdkRoutingBindingslistofLocaleCreateHandleNullable(_handle);
  heresdkRoutingBindingslistofLocaleReleaseFfiHandle(_handle);
  return result;
}

List<Locale>? heresdkRoutingBindingslistofLocaleFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingBindingslistofLocaleGetValueNullable(handle);
  final result = heresdkRoutingBindingslistofLocaleFromFfi(_handle);
  heresdkRoutingBindingslistofLocaleReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingslistofLocaleReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingslistofLocaleReleaseHandleNullable(handle);

final _heresdkRoutingBindingslistofSdkCoreCountrycodeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_core_CountryCode_create_handle'));
final _heresdkRoutingBindingslistofSdkCoreCountrycodeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_core_CountryCode_release_handle'));
final _heresdkRoutingBindingslistofSdkCoreCountrycodeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_core_CountryCode_insert'));
final _heresdkRoutingBindingslistofSdkCoreCountrycodeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_core_CountryCode_iterator'));
final _heresdkRoutingBindingslistofSdkCoreCountrycodeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_core_CountryCode_iterator_release_handle'));
final _heresdkRoutingBindingslistofSdkCoreCountrycodeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_core_CountryCode_iterator_is_valid'));
final _heresdkRoutingBindingslistofSdkCoreCountrycodeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_core_CountryCode_iterator_increment'));
final _heresdkRoutingBindingslistofSdkCoreCountrycodeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_core_CountryCode_iterator_get'));

Pointer<Void> heresdkRoutingBindingslistofSdkCoreCountrycodeToFfi(List<CountryCode> value) {
  final _result = _heresdkRoutingBindingslistofSdkCoreCountrycodeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreCountrycodeToFfi(element);
    _heresdkRoutingBindingslistofSdkCoreCountrycodeInsert(_result, _elementHandle);
    sdkCoreCountrycodeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<CountryCode> heresdkRoutingBindingslistofSdkCoreCountrycodeFromFfi(Pointer<Void> handle) {
  final result = List<CountryCode>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingBindingslistofSdkCoreCountrycodeIterator(handle);
  while (_heresdkRoutingBindingslistofSdkCoreCountrycodeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingBindingslistofSdkCoreCountrycodeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreCountrycodeFromFfi(_elementHandle));
    } finally {
      sdkCoreCountrycodeReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingBindingslistofSdkCoreCountrycodeIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingslistofSdkCoreCountrycodeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingslistofSdkCoreCountrycodeReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingslistofSdkCoreCountrycodeReleaseHandle(handle);

final _heresdkRoutingBindingslistofSdkCoreCountrycodeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_core_CountryCode_create_handle_nullable'));
final _heresdkRoutingBindingslistofSdkCoreCountrycodeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_core_CountryCode_release_handle_nullable'));
final _heresdkRoutingBindingslistofSdkCoreCountrycodeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_core_CountryCode_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingslistofSdkCoreCountrycodeToFfiNullable(List<CountryCode>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingslistofSdkCoreCountrycodeToFfi(value);
  final result = _heresdkRoutingBindingslistofSdkCoreCountrycodeCreateHandleNullable(_handle);
  heresdkRoutingBindingslistofSdkCoreCountrycodeReleaseFfiHandle(_handle);
  return result;
}

List<CountryCode>? heresdkRoutingBindingslistofSdkCoreCountrycodeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingBindingslistofSdkCoreCountrycodeGetValueNullable(handle);
  final result = heresdkRoutingBindingslistofSdkCoreCountrycodeFromFfi(_handle);
  heresdkRoutingBindingslistofSdkCoreCountrycodeReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingslistofSdkCoreCountrycodeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingslistofSdkCoreCountrycodeReleaseHandleNullable(handle);

final _heresdkRoutingBindingslistofSdkCoreGeoboxCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_core_GeoBox_create_handle'));
final _heresdkRoutingBindingslistofSdkCoreGeoboxReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_core_GeoBox_release_handle'));
final _heresdkRoutingBindingslistofSdkCoreGeoboxInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_core_GeoBox_insert'));
final _heresdkRoutingBindingslistofSdkCoreGeoboxIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_core_GeoBox_iterator'));
final _heresdkRoutingBindingslistofSdkCoreGeoboxIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_core_GeoBox_iterator_release_handle'));
final _heresdkRoutingBindingslistofSdkCoreGeoboxIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_core_GeoBox_iterator_is_valid'));
final _heresdkRoutingBindingslistofSdkCoreGeoboxIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_core_GeoBox_iterator_increment'));
final _heresdkRoutingBindingslistofSdkCoreGeoboxIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_core_GeoBox_iterator_get'));

Pointer<Void> heresdkRoutingBindingslistofSdkCoreGeoboxToFfi(List<GeoBox> value) {
  final _result = _heresdkRoutingBindingslistofSdkCoreGeoboxCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreGeoboxToFfi(element);
    _heresdkRoutingBindingslistofSdkCoreGeoboxInsert(_result, _elementHandle);
    sdkCoreGeoboxReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoBox> heresdkRoutingBindingslistofSdkCoreGeoboxFromFfi(Pointer<Void> handle) {
  final result = List<GeoBox>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingBindingslistofSdkCoreGeoboxIterator(handle);
  while (_heresdkRoutingBindingslistofSdkCoreGeoboxIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingBindingslistofSdkCoreGeoboxIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreGeoboxFromFfi(_elementHandle));
    } finally {
      sdkCoreGeoboxReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingBindingslistofSdkCoreGeoboxIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingslistofSdkCoreGeoboxIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingslistofSdkCoreGeoboxReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingslistofSdkCoreGeoboxReleaseHandle(handle);

final _heresdkRoutingBindingslistofSdkCoreGeoboxCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_core_GeoBox_create_handle_nullable'));
final _heresdkRoutingBindingslistofSdkCoreGeoboxReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_core_GeoBox_release_handle_nullable'));
final _heresdkRoutingBindingslistofSdkCoreGeoboxGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_core_GeoBox_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingslistofSdkCoreGeoboxToFfiNullable(List<GeoBox>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingslistofSdkCoreGeoboxToFfi(value);
  final result = _heresdkRoutingBindingslistofSdkCoreGeoboxCreateHandleNullable(_handle);
  heresdkRoutingBindingslistofSdkCoreGeoboxReleaseFfiHandle(_handle);
  return result;
}

List<GeoBox>? heresdkRoutingBindingslistofSdkCoreGeoboxFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingBindingslistofSdkCoreGeoboxGetValueNullable(handle);
  final result = heresdkRoutingBindingslistofSdkCoreGeoboxFromFfi(_handle);
  heresdkRoutingBindingslistofSdkCoreGeoboxReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingslistofSdkCoreGeoboxReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingslistofSdkCoreGeoboxReleaseHandleNullable(handle);

final _heresdkRoutingBindingslistofSdkCoreGeocoordinatesCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_core_GeoCoordinates_create_handle'));
final _heresdkRoutingBindingslistofSdkCoreGeocoordinatesReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_core_GeoCoordinates_release_handle'));
final _heresdkRoutingBindingslistofSdkCoreGeocoordinatesInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_core_GeoCoordinates_insert'));
final _heresdkRoutingBindingslistofSdkCoreGeocoordinatesIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_core_GeoCoordinates_iterator'));
final _heresdkRoutingBindingslistofSdkCoreGeocoordinatesIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_core_GeoCoordinates_iterator_release_handle'));
final _heresdkRoutingBindingslistofSdkCoreGeocoordinatesIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_core_GeoCoordinates_iterator_is_valid'));
final _heresdkRoutingBindingslistofSdkCoreGeocoordinatesIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_core_GeoCoordinates_iterator_increment'));
final _heresdkRoutingBindingslistofSdkCoreGeocoordinatesIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_core_GeoCoordinates_iterator_get'));

Pointer<Void> heresdkRoutingBindingslistofSdkCoreGeocoordinatesToFfi(List<GeoCoordinates> value) {
  final _result = _heresdkRoutingBindingslistofSdkCoreGeocoordinatesCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreGeocoordinatesToFfi(element);
    _heresdkRoutingBindingslistofSdkCoreGeocoordinatesInsert(_result, _elementHandle);
    sdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoCoordinates> heresdkRoutingBindingslistofSdkCoreGeocoordinatesFromFfi(Pointer<Void> handle) {
  final result = List<GeoCoordinates>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingBindingslistofSdkCoreGeocoordinatesIterator(handle);
  while (_heresdkRoutingBindingslistofSdkCoreGeocoordinatesIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingBindingslistofSdkCoreGeocoordinatesIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreGeocoordinatesFromFfi(_elementHandle));
    } finally {
      sdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingBindingslistofSdkCoreGeocoordinatesIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingslistofSdkCoreGeocoordinatesIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingslistofSdkCoreGeocoordinatesReleaseHandle(handle);

final _heresdkRoutingBindingslistofSdkCoreGeocoordinatesCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_core_GeoCoordinates_create_handle_nullable'));
final _heresdkRoutingBindingslistofSdkCoreGeocoordinatesReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_core_GeoCoordinates_release_handle_nullable'));
final _heresdkRoutingBindingslistofSdkCoreGeocoordinatesGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_core_GeoCoordinates_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingslistofSdkCoreGeocoordinatesToFfiNullable(List<GeoCoordinates>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingslistofSdkCoreGeocoordinatesToFfi(value);
  final result = _heresdkRoutingBindingslistofSdkCoreGeocoordinatesCreateHandleNullable(_handle);
  heresdkRoutingBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

List<GeoCoordinates>? heresdkRoutingBindingslistofSdkCoreGeocoordinatesFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingBindingslistofSdkCoreGeocoordinatesGetValueNullable(handle);
  final result = heresdkRoutingBindingslistofSdkCoreGeocoordinatesFromFfi(_handle);
  heresdkRoutingBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingslistofSdkCoreGeocoordinatesReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingslistofSdkCoreGeocoordinatesReleaseHandleNullable(handle);

final _heresdkRoutingBindingslistofSdkCoreGeopolygonCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_core_GeoPolygon_create_handle'));
final _heresdkRoutingBindingslistofSdkCoreGeopolygonReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_core_GeoPolygon_release_handle'));
final _heresdkRoutingBindingslistofSdkCoreGeopolygonInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_core_GeoPolygon_insert'));
final _heresdkRoutingBindingslistofSdkCoreGeopolygonIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_core_GeoPolygon_iterator'));
final _heresdkRoutingBindingslistofSdkCoreGeopolygonIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_core_GeoPolygon_iterator_release_handle'));
final _heresdkRoutingBindingslistofSdkCoreGeopolygonIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_core_GeoPolygon_iterator_is_valid'));
final _heresdkRoutingBindingslistofSdkCoreGeopolygonIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_core_GeoPolygon_iterator_increment'));
final _heresdkRoutingBindingslistofSdkCoreGeopolygonIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_core_GeoPolygon_iterator_get'));

Pointer<Void> heresdkRoutingBindingslistofSdkCoreGeopolygonToFfi(List<GeoPolygon> value) {
  final _result = _heresdkRoutingBindingslistofSdkCoreGeopolygonCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreGeopolygonToFfi(element);
    _heresdkRoutingBindingslistofSdkCoreGeopolygonInsert(_result, _elementHandle);
    sdkCoreGeopolygonReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoPolygon> heresdkRoutingBindingslistofSdkCoreGeopolygonFromFfi(Pointer<Void> handle) {
  final result = List<GeoPolygon>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingBindingslistofSdkCoreGeopolygonIterator(handle);
  while (_heresdkRoutingBindingslistofSdkCoreGeopolygonIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingBindingslistofSdkCoreGeopolygonIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreGeopolygonFromFfi(_elementHandle));
    } finally {
      sdkCoreGeopolygonReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingBindingslistofSdkCoreGeopolygonIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingslistofSdkCoreGeopolygonIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingslistofSdkCoreGeopolygonReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingslistofSdkCoreGeopolygonReleaseHandle(handle);

final _heresdkRoutingBindingslistofSdkCoreGeopolygonCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_core_GeoPolygon_create_handle_nullable'));
final _heresdkRoutingBindingslistofSdkCoreGeopolygonReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_core_GeoPolygon_release_handle_nullable'));
final _heresdkRoutingBindingslistofSdkCoreGeopolygonGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_core_GeoPolygon_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingslistofSdkCoreGeopolygonToFfiNullable(List<GeoPolygon>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingslistofSdkCoreGeopolygonToFfi(value);
  final result = _heresdkRoutingBindingslistofSdkCoreGeopolygonCreateHandleNullable(_handle);
  heresdkRoutingBindingslistofSdkCoreGeopolygonReleaseFfiHandle(_handle);
  return result;
}

List<GeoPolygon>? heresdkRoutingBindingslistofSdkCoreGeopolygonFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingBindingslistofSdkCoreGeopolygonGetValueNullable(handle);
  final result = heresdkRoutingBindingslistofSdkCoreGeopolygonFromFfi(_handle);
  heresdkRoutingBindingslistofSdkCoreGeopolygonReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingslistofSdkCoreGeopolygonReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingslistofSdkCoreGeopolygonReleaseHandleNullable(handle);

final _heresdkRoutingBindingslistofSdkCoreLocalizedtextCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_core_LocalizedText_create_handle'));
final _heresdkRoutingBindingslistofSdkCoreLocalizedtextReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_core_LocalizedText_release_handle'));
final _heresdkRoutingBindingslistofSdkCoreLocalizedtextInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_core_LocalizedText_insert'));
final _heresdkRoutingBindingslistofSdkCoreLocalizedtextIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_core_LocalizedText_iterator'));
final _heresdkRoutingBindingslistofSdkCoreLocalizedtextIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_core_LocalizedText_iterator_release_handle'));
final _heresdkRoutingBindingslistofSdkCoreLocalizedtextIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_core_LocalizedText_iterator_is_valid'));
final _heresdkRoutingBindingslistofSdkCoreLocalizedtextIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_core_LocalizedText_iterator_increment'));
final _heresdkRoutingBindingslistofSdkCoreLocalizedtextIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_core_LocalizedText_iterator_get'));

Pointer<Void> heresdkRoutingBindingslistofSdkCoreLocalizedtextToFfi(List<LocalizedText> value) {
  final _result = _heresdkRoutingBindingslistofSdkCoreLocalizedtextCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreLocalizedtextToFfi(element);
    _heresdkRoutingBindingslistofSdkCoreLocalizedtextInsert(_result, _elementHandle);
    sdkCoreLocalizedtextReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<LocalizedText> heresdkRoutingBindingslistofSdkCoreLocalizedtextFromFfi(Pointer<Void> handle) {
  final result = List<LocalizedText>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingBindingslistofSdkCoreLocalizedtextIterator(handle);
  while (_heresdkRoutingBindingslistofSdkCoreLocalizedtextIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingBindingslistofSdkCoreLocalizedtextIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreLocalizedtextFromFfi(_elementHandle));
    } finally {
      sdkCoreLocalizedtextReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingBindingslistofSdkCoreLocalizedtextIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingslistofSdkCoreLocalizedtextIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingslistofSdkCoreLocalizedtextReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingslistofSdkCoreLocalizedtextReleaseHandle(handle);

final _heresdkRoutingBindingslistofSdkCoreLocalizedtextCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_core_LocalizedText_create_handle_nullable'));
final _heresdkRoutingBindingslistofSdkCoreLocalizedtextReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_core_LocalizedText_release_handle_nullable'));
final _heresdkRoutingBindingslistofSdkCoreLocalizedtextGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_core_LocalizedText_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingslistofSdkCoreLocalizedtextToFfiNullable(List<LocalizedText>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingslistofSdkCoreLocalizedtextToFfi(value);
  final result = _heresdkRoutingBindingslistofSdkCoreLocalizedtextCreateHandleNullable(_handle);
  heresdkRoutingBindingslistofSdkCoreLocalizedtextReleaseFfiHandle(_handle);
  return result;
}

List<LocalizedText>? heresdkRoutingBindingslistofSdkCoreLocalizedtextFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingBindingslistofSdkCoreLocalizedtextGetValueNullable(handle);
  final result = heresdkRoutingBindingslistofSdkCoreLocalizedtextFromFfi(_handle);
  heresdkRoutingBindingslistofSdkCoreLocalizedtextReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingslistofSdkCoreLocalizedtextReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingslistofSdkCoreLocalizedtextReleaseHandleNullable(handle);

final _heresdkRoutingBindingslistofSdkCoreLocationCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_core_Location_create_handle'));
final _heresdkRoutingBindingslistofSdkCoreLocationReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_core_Location_release_handle'));
final _heresdkRoutingBindingslistofSdkCoreLocationInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_core_Location_insert'));
final _heresdkRoutingBindingslistofSdkCoreLocationIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_core_Location_iterator'));
final _heresdkRoutingBindingslistofSdkCoreLocationIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_core_Location_iterator_release_handle'));
final _heresdkRoutingBindingslistofSdkCoreLocationIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_core_Location_iterator_is_valid'));
final _heresdkRoutingBindingslistofSdkCoreLocationIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_core_Location_iterator_increment'));
final _heresdkRoutingBindingslistofSdkCoreLocationIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_core_Location_iterator_get'));

Pointer<Void> heresdkRoutingBindingslistofSdkCoreLocationToFfi(List<location_impl.Location> value) {
  final _result = _heresdkRoutingBindingslistofSdkCoreLocationCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreLocationToFfi(element);
    _heresdkRoutingBindingslistofSdkCoreLocationInsert(_result, _elementHandle);
    sdkCoreLocationReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<location_impl.Location> heresdkRoutingBindingslistofSdkCoreLocationFromFfi(Pointer<Void> handle) {
  final result = List<location_impl.Location>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingBindingslistofSdkCoreLocationIterator(handle);
  while (_heresdkRoutingBindingslistofSdkCoreLocationIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingBindingslistofSdkCoreLocationIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreLocationFromFfi(_elementHandle));
    } finally {
      sdkCoreLocationReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingBindingslistofSdkCoreLocationIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingslistofSdkCoreLocationIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingslistofSdkCoreLocationReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingslistofSdkCoreLocationReleaseHandle(handle);

final _heresdkRoutingBindingslistofSdkCoreLocationCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_core_Location_create_handle_nullable'));
final _heresdkRoutingBindingslistofSdkCoreLocationReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_core_Location_release_handle_nullable'));
final _heresdkRoutingBindingslistofSdkCoreLocationGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_core_Location_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingslistofSdkCoreLocationToFfiNullable(List<location_impl.Location>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingslistofSdkCoreLocationToFfi(value);
  final result = _heresdkRoutingBindingslistofSdkCoreLocationCreateHandleNullable(_handle);
  heresdkRoutingBindingslistofSdkCoreLocationReleaseFfiHandle(_handle);
  return result;
}

List<location_impl.Location>? heresdkRoutingBindingslistofSdkCoreLocationFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingBindingslistofSdkCoreLocationGetValueNullable(handle);
  final result = heresdkRoutingBindingslistofSdkCoreLocationFromFfi(_handle);
  heresdkRoutingBindingslistofSdkCoreLocationReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingslistofSdkCoreLocationReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingslistofSdkCoreLocationReleaseHandleNullable(handle);

final _heresdkRoutingBindingslistofSdkRoutingAttributionCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Attribution_create_handle'));
final _heresdkRoutingBindingslistofSdkRoutingAttributionReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Attribution_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingAttributionInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Attribution_insert'));
final _heresdkRoutingBindingslistofSdkRoutingAttributionIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Attribution_iterator'));
final _heresdkRoutingBindingslistofSdkRoutingAttributionIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Attribution_iterator_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingAttributionIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Attribution_iterator_is_valid'));
final _heresdkRoutingBindingslistofSdkRoutingAttributionIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Attribution_iterator_increment'));
final _heresdkRoutingBindingslistofSdkRoutingAttributionIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Attribution_iterator_get'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingAttributionToFfi(List<Attribution> value) {
  final _result = _heresdkRoutingBindingslistofSdkRoutingAttributionCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingAttributionToFfi(element);
    _heresdkRoutingBindingslistofSdkRoutingAttributionInsert(_result, _elementHandle);
    sdkRoutingAttributionReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Attribution> heresdkRoutingBindingslistofSdkRoutingAttributionFromFfi(Pointer<Void> handle) {
  final result = List<Attribution>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingBindingslistofSdkRoutingAttributionIterator(handle);
  while (_heresdkRoutingBindingslistofSdkRoutingAttributionIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingBindingslistofSdkRoutingAttributionIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingAttributionFromFfi(_elementHandle));
    } finally {
      sdkRoutingAttributionReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingBindingslistofSdkRoutingAttributionIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingslistofSdkRoutingAttributionIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingAttributionReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingslistofSdkRoutingAttributionReleaseHandle(handle);

final _heresdkRoutingBindingslistofSdkRoutingAttributionCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Attribution_create_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingAttributionReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Attribution_release_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingAttributionGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Attribution_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingAttributionToFfiNullable(List<Attribution>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingslistofSdkRoutingAttributionToFfi(value);
  final result = _heresdkRoutingBindingslistofSdkRoutingAttributionCreateHandleNullable(_handle);
  heresdkRoutingBindingslistofSdkRoutingAttributionReleaseFfiHandle(_handle);
  return result;
}

List<Attribution>? heresdkRoutingBindingslistofSdkRoutingAttributionFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingBindingslistofSdkRoutingAttributionGetValueNullable(handle);
  final result = heresdkRoutingBindingslistofSdkRoutingAttributionFromFfi(_handle);
  heresdkRoutingBindingslistofSdkRoutingAttributionReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingAttributionReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingslistofSdkRoutingAttributionReleaseHandleNullable(handle);

final _heresdkRoutingBindingslistofSdkRoutingChargingconnectortypeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_ChargingConnectorType_create_handle'));
final _heresdkRoutingBindingslistofSdkRoutingChargingconnectortypeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_ChargingConnectorType_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingChargingconnectortypeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_ChargingConnectorType_insert'));
final _heresdkRoutingBindingslistofSdkRoutingChargingconnectortypeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_ChargingConnectorType_iterator'));
final _heresdkRoutingBindingslistofSdkRoutingChargingconnectortypeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_ChargingConnectorType_iterator_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingChargingconnectortypeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_ChargingConnectorType_iterator_is_valid'));
final _heresdkRoutingBindingslistofSdkRoutingChargingconnectortypeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_ChargingConnectorType_iterator_increment'));
final _heresdkRoutingBindingslistofSdkRoutingChargingconnectortypeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_ChargingConnectorType_iterator_get'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingChargingconnectortypeToFfi(List<ChargingConnectorType> value) {
  final _result = _heresdkRoutingBindingslistofSdkRoutingChargingconnectortypeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingChargingconnectortypeToFfi(element);
    _heresdkRoutingBindingslistofSdkRoutingChargingconnectortypeInsert(_result, _elementHandle);
    sdkRoutingChargingconnectortypeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<ChargingConnectorType> heresdkRoutingBindingslistofSdkRoutingChargingconnectortypeFromFfi(Pointer<Void> handle) {
  final result = List<ChargingConnectorType>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingBindingslistofSdkRoutingChargingconnectortypeIterator(handle);
  while (_heresdkRoutingBindingslistofSdkRoutingChargingconnectortypeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingBindingslistofSdkRoutingChargingconnectortypeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingChargingconnectortypeFromFfi(_elementHandle));
    } finally {
      sdkRoutingChargingconnectortypeReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingBindingslistofSdkRoutingChargingconnectortypeIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingslistofSdkRoutingChargingconnectortypeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingChargingconnectortypeReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingslistofSdkRoutingChargingconnectortypeReleaseHandle(handle);

final _heresdkRoutingBindingslistofSdkRoutingChargingconnectortypeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_ChargingConnectorType_create_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingChargingconnectortypeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_ChargingConnectorType_release_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingChargingconnectortypeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_ChargingConnectorType_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingChargingconnectortypeToFfiNullable(List<ChargingConnectorType>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingslistofSdkRoutingChargingconnectortypeToFfi(value);
  final result = _heresdkRoutingBindingslistofSdkRoutingChargingconnectortypeCreateHandleNullable(_handle);
  heresdkRoutingBindingslistofSdkRoutingChargingconnectortypeReleaseFfiHandle(_handle);
  return result;
}

List<ChargingConnectorType>? heresdkRoutingBindingslistofSdkRoutingChargingconnectortypeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingBindingslistofSdkRoutingChargingconnectortypeGetValueNullable(handle);
  final result = heresdkRoutingBindingslistofSdkRoutingChargingconnectortypeFromFfi(_handle);
  heresdkRoutingBindingslistofSdkRoutingChargingconnectortypeReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingChargingconnectortypeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingslistofSdkRoutingChargingconnectortypeReleaseHandleNullable(handle);

final _heresdkRoutingBindingslistofSdkRoutingFareCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Fare_create_handle'));
final _heresdkRoutingBindingslistofSdkRoutingFareReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Fare_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingFareInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Fare_insert'));
final _heresdkRoutingBindingslistofSdkRoutingFareIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Fare_iterator'));
final _heresdkRoutingBindingslistofSdkRoutingFareIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Fare_iterator_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingFareIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Fare_iterator_is_valid'));
final _heresdkRoutingBindingslistofSdkRoutingFareIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Fare_iterator_increment'));
final _heresdkRoutingBindingslistofSdkRoutingFareIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Fare_iterator_get'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingFareToFfi(List<Fare> value) {
  final _result = _heresdkRoutingBindingslistofSdkRoutingFareCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingFareToFfi(element);
    _heresdkRoutingBindingslistofSdkRoutingFareInsert(_result, _elementHandle);
    sdkRoutingFareReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Fare> heresdkRoutingBindingslistofSdkRoutingFareFromFfi(Pointer<Void> handle) {
  final result = List<Fare>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingBindingslistofSdkRoutingFareIterator(handle);
  while (_heresdkRoutingBindingslistofSdkRoutingFareIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingBindingslistofSdkRoutingFareIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingFareFromFfi(_elementHandle));
    } finally {
      sdkRoutingFareReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingBindingslistofSdkRoutingFareIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingslistofSdkRoutingFareIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingFareReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingslistofSdkRoutingFareReleaseHandle(handle);

final _heresdkRoutingBindingslistofSdkRoutingFareCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Fare_create_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingFareReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Fare_release_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingFareGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Fare_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingFareToFfiNullable(List<Fare>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingslistofSdkRoutingFareToFfi(value);
  final result = _heresdkRoutingBindingslistofSdkRoutingFareCreateHandleNullable(_handle);
  heresdkRoutingBindingslistofSdkRoutingFareReleaseFfiHandle(_handle);
  return result;
}

List<Fare>? heresdkRoutingBindingslistofSdkRoutingFareFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingBindingslistofSdkRoutingFareGetValueNullable(handle);
  final result = heresdkRoutingBindingslistofSdkRoutingFareFromFfi(_handle);
  heresdkRoutingBindingslistofSdkRoutingFareReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingFareReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingslistofSdkRoutingFareReleaseHandleNullable(handle);

final _heresdkRoutingBindingslistofSdkRoutingHazardousgoodCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_HazardousGood_create_handle'));
final _heresdkRoutingBindingslistofSdkRoutingHazardousgoodReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_HazardousGood_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingHazardousgoodInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_HazardousGood_insert'));
final _heresdkRoutingBindingslistofSdkRoutingHazardousgoodIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_HazardousGood_iterator'));
final _heresdkRoutingBindingslistofSdkRoutingHazardousgoodIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_HazardousGood_iterator_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingHazardousgoodIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_HazardousGood_iterator_is_valid'));
final _heresdkRoutingBindingslistofSdkRoutingHazardousgoodIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_HazardousGood_iterator_increment'));
final _heresdkRoutingBindingslistofSdkRoutingHazardousgoodIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_HazardousGood_iterator_get'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingHazardousgoodToFfi(List<HazardousGood> value) {
  final _result = _heresdkRoutingBindingslistofSdkRoutingHazardousgoodCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingHazardousgoodToFfi(element);
    _heresdkRoutingBindingslistofSdkRoutingHazardousgoodInsert(_result, _elementHandle);
    sdkRoutingHazardousgoodReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<HazardousGood> heresdkRoutingBindingslistofSdkRoutingHazardousgoodFromFfi(Pointer<Void> handle) {
  final result = List<HazardousGood>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingBindingslistofSdkRoutingHazardousgoodIterator(handle);
  while (_heresdkRoutingBindingslistofSdkRoutingHazardousgoodIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingBindingslistofSdkRoutingHazardousgoodIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingHazardousgoodFromFfi(_elementHandle));
    } finally {
      sdkRoutingHazardousgoodReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingBindingslistofSdkRoutingHazardousgoodIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingslistofSdkRoutingHazardousgoodIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingHazardousgoodReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingslistofSdkRoutingHazardousgoodReleaseHandle(handle);

final _heresdkRoutingBindingslistofSdkRoutingHazardousgoodCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_HazardousGood_create_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingHazardousgoodReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_HazardousGood_release_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingHazardousgoodGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_HazardousGood_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingHazardousgoodToFfiNullable(List<HazardousGood>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingslistofSdkRoutingHazardousgoodToFfi(value);
  final result = _heresdkRoutingBindingslistofSdkRoutingHazardousgoodCreateHandleNullable(_handle);
  heresdkRoutingBindingslistofSdkRoutingHazardousgoodReleaseFfiHandle(_handle);
  return result;
}

List<HazardousGood>? heresdkRoutingBindingslistofSdkRoutingHazardousgoodFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingBindingslistofSdkRoutingHazardousgoodGetValueNullable(handle);
  final result = heresdkRoutingBindingslistofSdkRoutingHazardousgoodFromFfi(_handle);
  heresdkRoutingBindingslistofSdkRoutingHazardousgoodReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingHazardousgoodReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingslistofSdkRoutingHazardousgoodReleaseHandleNullable(handle);

final _heresdkRoutingBindingslistofSdkRoutingIsolineCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Isoline_create_handle'));
final _heresdkRoutingBindingslistofSdkRoutingIsolineReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Isoline_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingIsolineInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Isoline_insert'));
final _heresdkRoutingBindingslistofSdkRoutingIsolineIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Isoline_iterator'));
final _heresdkRoutingBindingslistofSdkRoutingIsolineIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Isoline_iterator_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingIsolineIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Isoline_iterator_is_valid'));
final _heresdkRoutingBindingslistofSdkRoutingIsolineIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Isoline_iterator_increment'));
final _heresdkRoutingBindingslistofSdkRoutingIsolineIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Isoline_iterator_get'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingIsolineToFfi(List<Isoline> value) {
  final _result = _heresdkRoutingBindingslistofSdkRoutingIsolineCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingIsolineToFfi(element);
    _heresdkRoutingBindingslistofSdkRoutingIsolineInsert(_result, _elementHandle);
    sdkRoutingIsolineReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Isoline> heresdkRoutingBindingslistofSdkRoutingIsolineFromFfi(Pointer<Void> handle) {
  final result = List<Isoline>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingBindingslistofSdkRoutingIsolineIterator(handle);
  while (_heresdkRoutingBindingslistofSdkRoutingIsolineIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingBindingslistofSdkRoutingIsolineIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingIsolineFromFfi(_elementHandle));
    } finally {
      sdkRoutingIsolineReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingBindingslistofSdkRoutingIsolineIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingslistofSdkRoutingIsolineIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingIsolineReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingslistofSdkRoutingIsolineReleaseHandle(handle);

final _heresdkRoutingBindingslistofSdkRoutingIsolineCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Isoline_create_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingIsolineReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Isoline_release_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingIsolineGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Isoline_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingIsolineToFfiNullable(List<Isoline>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingslistofSdkRoutingIsolineToFfi(value);
  final result = _heresdkRoutingBindingslistofSdkRoutingIsolineCreateHandleNullable(_handle);
  heresdkRoutingBindingslistofSdkRoutingIsolineReleaseFfiHandle(_handle);
  return result;
}

List<Isoline>? heresdkRoutingBindingslistofSdkRoutingIsolineFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingBindingslistofSdkRoutingIsolineGetValueNullable(handle);
  final result = heresdkRoutingBindingslistofSdkRoutingIsolineFromFfi(_handle);
  heresdkRoutingBindingslistofSdkRoutingIsolineReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingIsolineReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingslistofSdkRoutingIsolineReleaseHandleNullable(handle);

final _heresdkRoutingBindingslistofSdkRoutingManeuverCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Maneuver_create_handle'));
final _heresdkRoutingBindingslistofSdkRoutingManeuverReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Maneuver_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingManeuverInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Maneuver_insert'));
final _heresdkRoutingBindingslistofSdkRoutingManeuverIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Maneuver_iterator'));
final _heresdkRoutingBindingslistofSdkRoutingManeuverIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Maneuver_iterator_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingManeuverIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Maneuver_iterator_is_valid'));
final _heresdkRoutingBindingslistofSdkRoutingManeuverIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Maneuver_iterator_increment'));
final _heresdkRoutingBindingslistofSdkRoutingManeuverIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Maneuver_iterator_get'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingManeuverToFfi(List<Maneuver> value) {
  final _result = _heresdkRoutingBindingslistofSdkRoutingManeuverCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingManeuverToFfi(element);
    _heresdkRoutingBindingslistofSdkRoutingManeuverInsert(_result, _elementHandle);
    sdkRoutingManeuverReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Maneuver> heresdkRoutingBindingslistofSdkRoutingManeuverFromFfi(Pointer<Void> handle) {
  final result = List<Maneuver>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingBindingslistofSdkRoutingManeuverIterator(handle);
  while (_heresdkRoutingBindingslistofSdkRoutingManeuverIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingBindingslistofSdkRoutingManeuverIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingManeuverFromFfi(_elementHandle));
    } finally {
      sdkRoutingManeuverReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingBindingslistofSdkRoutingManeuverIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingslistofSdkRoutingManeuverIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingManeuverReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingslistofSdkRoutingManeuverReleaseHandle(handle);

final _heresdkRoutingBindingslistofSdkRoutingManeuverCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Maneuver_create_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingManeuverReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Maneuver_release_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingManeuverGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Maneuver_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingManeuverToFfiNullable(List<Maneuver>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingslistofSdkRoutingManeuverToFfi(value);
  final result = _heresdkRoutingBindingslistofSdkRoutingManeuverCreateHandleNullable(_handle);
  heresdkRoutingBindingslistofSdkRoutingManeuverReleaseFfiHandle(_handle);
  return result;
}

List<Maneuver>? heresdkRoutingBindingslistofSdkRoutingManeuverFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingBindingslistofSdkRoutingManeuverGetValueNullable(handle);
  final result = heresdkRoutingBindingslistofSdkRoutingManeuverFromFfi(_handle);
  heresdkRoutingBindingslistofSdkRoutingManeuverReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingManeuverReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingslistofSdkRoutingManeuverReleaseHandleNullable(handle);

final _heresdkRoutingBindingslistofSdkRoutingPaymentmethodCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_PaymentMethod_create_handle'));
final _heresdkRoutingBindingslistofSdkRoutingPaymentmethodReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_PaymentMethod_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingPaymentmethodInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_PaymentMethod_insert'));
final _heresdkRoutingBindingslistofSdkRoutingPaymentmethodIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_PaymentMethod_iterator'));
final _heresdkRoutingBindingslistofSdkRoutingPaymentmethodIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_PaymentMethod_iterator_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingPaymentmethodIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_PaymentMethod_iterator_is_valid'));
final _heresdkRoutingBindingslistofSdkRoutingPaymentmethodIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_PaymentMethod_iterator_increment'));
final _heresdkRoutingBindingslistofSdkRoutingPaymentmethodIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_PaymentMethod_iterator_get'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingPaymentmethodToFfi(List<PaymentMethod> value) {
  final _result = _heresdkRoutingBindingslistofSdkRoutingPaymentmethodCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingPaymentmethodToFfi(element);
    _heresdkRoutingBindingslistofSdkRoutingPaymentmethodInsert(_result, _elementHandle);
    sdkRoutingPaymentmethodReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<PaymentMethod> heresdkRoutingBindingslistofSdkRoutingPaymentmethodFromFfi(Pointer<Void> handle) {
  final result = List<PaymentMethod>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingBindingslistofSdkRoutingPaymentmethodIterator(handle);
  while (_heresdkRoutingBindingslistofSdkRoutingPaymentmethodIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingBindingslistofSdkRoutingPaymentmethodIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingPaymentmethodFromFfi(_elementHandle));
    } finally {
      sdkRoutingPaymentmethodReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingBindingslistofSdkRoutingPaymentmethodIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingslistofSdkRoutingPaymentmethodIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingPaymentmethodReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingslistofSdkRoutingPaymentmethodReleaseHandle(handle);

final _heresdkRoutingBindingslistofSdkRoutingPaymentmethodCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_PaymentMethod_create_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingPaymentmethodReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_PaymentMethod_release_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingPaymentmethodGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_PaymentMethod_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingPaymentmethodToFfiNullable(List<PaymentMethod>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingslistofSdkRoutingPaymentmethodToFfi(value);
  final result = _heresdkRoutingBindingslistofSdkRoutingPaymentmethodCreateHandleNullable(_handle);
  heresdkRoutingBindingslistofSdkRoutingPaymentmethodReleaseFfiHandle(_handle);
  return result;
}

List<PaymentMethod>? heresdkRoutingBindingslistofSdkRoutingPaymentmethodFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingBindingslistofSdkRoutingPaymentmethodGetValueNullable(handle);
  final result = heresdkRoutingBindingslistofSdkRoutingPaymentmethodFromFfi(_handle);
  heresdkRoutingBindingslistofSdkRoutingPaymentmethodReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingPaymentmethodReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingslistofSdkRoutingPaymentmethodReleaseHandleNullable(handle);

final _heresdkRoutingBindingslistofSdkRoutingPostactionCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_PostAction_create_handle'));
final _heresdkRoutingBindingslistofSdkRoutingPostactionReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_PostAction_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingPostactionInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_PostAction_insert'));
final _heresdkRoutingBindingslistofSdkRoutingPostactionIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_PostAction_iterator'));
final _heresdkRoutingBindingslistofSdkRoutingPostactionIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_PostAction_iterator_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingPostactionIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_PostAction_iterator_is_valid'));
final _heresdkRoutingBindingslistofSdkRoutingPostactionIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_PostAction_iterator_increment'));
final _heresdkRoutingBindingslistofSdkRoutingPostactionIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_PostAction_iterator_get'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingPostactionToFfi(List<PostAction> value) {
  final _result = _heresdkRoutingBindingslistofSdkRoutingPostactionCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingPostactionToFfi(element);
    _heresdkRoutingBindingslistofSdkRoutingPostactionInsert(_result, _elementHandle);
    sdkRoutingPostactionReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<PostAction> heresdkRoutingBindingslistofSdkRoutingPostactionFromFfi(Pointer<Void> handle) {
  final result = List<PostAction>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingBindingslistofSdkRoutingPostactionIterator(handle);
  while (_heresdkRoutingBindingslistofSdkRoutingPostactionIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingBindingslistofSdkRoutingPostactionIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingPostactionFromFfi(_elementHandle));
    } finally {
      sdkRoutingPostactionReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingBindingslistofSdkRoutingPostactionIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingslistofSdkRoutingPostactionIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingPostactionReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingslistofSdkRoutingPostactionReleaseHandle(handle);

final _heresdkRoutingBindingslistofSdkRoutingPostactionCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_PostAction_create_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingPostactionReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_PostAction_release_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingPostactionGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_PostAction_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingPostactionToFfiNullable(List<PostAction>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingslistofSdkRoutingPostactionToFfi(value);
  final result = _heresdkRoutingBindingslistofSdkRoutingPostactionCreateHandleNullable(_handle);
  heresdkRoutingBindingslistofSdkRoutingPostactionReleaseFfiHandle(_handle);
  return result;
}

List<PostAction>? heresdkRoutingBindingslistofSdkRoutingPostactionFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingBindingslistofSdkRoutingPostactionGetValueNullable(handle);
  final result = heresdkRoutingBindingslistofSdkRoutingPostactionFromFfi(_handle);
  heresdkRoutingBindingslistofSdkRoutingPostactionReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingPostactionReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingslistofSdkRoutingPostactionReleaseHandleNullable(handle);

final _heresdkRoutingBindingslistofSdkRoutingPreactionCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_PreAction_create_handle'));
final _heresdkRoutingBindingslistofSdkRoutingPreactionReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_PreAction_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingPreactionInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_PreAction_insert'));
final _heresdkRoutingBindingslistofSdkRoutingPreactionIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_PreAction_iterator'));
final _heresdkRoutingBindingslistofSdkRoutingPreactionIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_PreAction_iterator_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingPreactionIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_PreAction_iterator_is_valid'));
final _heresdkRoutingBindingslistofSdkRoutingPreactionIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_PreAction_iterator_increment'));
final _heresdkRoutingBindingslistofSdkRoutingPreactionIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_PreAction_iterator_get'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingPreactionToFfi(List<PreAction> value) {
  final _result = _heresdkRoutingBindingslistofSdkRoutingPreactionCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingPreactionToFfi(element);
    _heresdkRoutingBindingslistofSdkRoutingPreactionInsert(_result, _elementHandle);
    sdkRoutingPreactionReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<PreAction> heresdkRoutingBindingslistofSdkRoutingPreactionFromFfi(Pointer<Void> handle) {
  final result = List<PreAction>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingBindingslistofSdkRoutingPreactionIterator(handle);
  while (_heresdkRoutingBindingslistofSdkRoutingPreactionIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingBindingslistofSdkRoutingPreactionIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingPreactionFromFfi(_elementHandle));
    } finally {
      sdkRoutingPreactionReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingBindingslistofSdkRoutingPreactionIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingslistofSdkRoutingPreactionIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingPreactionReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingslistofSdkRoutingPreactionReleaseHandle(handle);

final _heresdkRoutingBindingslistofSdkRoutingPreactionCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_PreAction_create_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingPreactionReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_PreAction_release_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingPreactionGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_PreAction_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingPreactionToFfiNullable(List<PreAction>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingslistofSdkRoutingPreactionToFfi(value);
  final result = _heresdkRoutingBindingslistofSdkRoutingPreactionCreateHandleNullable(_handle);
  heresdkRoutingBindingslistofSdkRoutingPreactionReleaseFfiHandle(_handle);
  return result;
}

List<PreAction>? heresdkRoutingBindingslistofSdkRoutingPreactionFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingBindingslistofSdkRoutingPreactionGetValueNullable(handle);
  final result = heresdkRoutingBindingslistofSdkRoutingPreactionFromFfi(_handle);
  heresdkRoutingBindingslistofSdkRoutingPreactionReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingPreactionReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingslistofSdkRoutingPreactionReleaseHandleNullable(handle);

final _heresdkRoutingBindingslistofSdkRoutingRoadfeaturesCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_RoadFeatures_create_handle'));
final _heresdkRoutingBindingslistofSdkRoutingRoadfeaturesReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_RoadFeatures_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingRoadfeaturesInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_RoadFeatures_insert'));
final _heresdkRoutingBindingslistofSdkRoutingRoadfeaturesIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_RoadFeatures_iterator'));
final _heresdkRoutingBindingslistofSdkRoutingRoadfeaturesIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_RoadFeatures_iterator_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingRoadfeaturesIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_RoadFeatures_iterator_is_valid'));
final _heresdkRoutingBindingslistofSdkRoutingRoadfeaturesIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_RoadFeatures_iterator_increment'));
final _heresdkRoutingBindingslistofSdkRoutingRoadfeaturesIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_RoadFeatures_iterator_get'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingRoadfeaturesToFfi(List<RoadFeatures> value) {
  final _result = _heresdkRoutingBindingslistofSdkRoutingRoadfeaturesCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingRoadfeaturesToFfi(element);
    _heresdkRoutingBindingslistofSdkRoutingRoadfeaturesInsert(_result, _elementHandle);
    sdkRoutingRoadfeaturesReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<RoadFeatures> heresdkRoutingBindingslistofSdkRoutingRoadfeaturesFromFfi(Pointer<Void> handle) {
  final result = List<RoadFeatures>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingBindingslistofSdkRoutingRoadfeaturesIterator(handle);
  while (_heresdkRoutingBindingslistofSdkRoutingRoadfeaturesIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingBindingslistofSdkRoutingRoadfeaturesIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingRoadfeaturesFromFfi(_elementHandle));
    } finally {
      sdkRoutingRoadfeaturesReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingBindingslistofSdkRoutingRoadfeaturesIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingslistofSdkRoutingRoadfeaturesIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingRoadfeaturesReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingslistofSdkRoutingRoadfeaturesReleaseHandle(handle);

final _heresdkRoutingBindingslistofSdkRoutingRoadfeaturesCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_RoadFeatures_create_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingRoadfeaturesReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_RoadFeatures_release_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingRoadfeaturesGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_RoadFeatures_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingRoadfeaturesToFfiNullable(List<RoadFeatures>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingslistofSdkRoutingRoadfeaturesToFfi(value);
  final result = _heresdkRoutingBindingslistofSdkRoutingRoadfeaturesCreateHandleNullable(_handle);
  heresdkRoutingBindingslistofSdkRoutingRoadfeaturesReleaseFfiHandle(_handle);
  return result;
}

List<RoadFeatures>? heresdkRoutingBindingslistofSdkRoutingRoadfeaturesFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingBindingslistofSdkRoutingRoadfeaturesGetValueNullable(handle);
  final result = heresdkRoutingBindingslistofSdkRoutingRoadfeaturesFromFfi(_handle);
  heresdkRoutingBindingslistofSdkRoutingRoadfeaturesReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingRoadfeaturesReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingslistofSdkRoutingRoadfeaturesReleaseHandleNullable(handle);

final _heresdkRoutingBindingslistofSdkRoutingRouteCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Route_create_handle'));
final _heresdkRoutingBindingslistofSdkRoutingRouteReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Route_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingRouteInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Route_insert'));
final _heresdkRoutingBindingslistofSdkRoutingRouteIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Route_iterator'));
final _heresdkRoutingBindingslistofSdkRoutingRouteIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Route_iterator_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingRouteIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Route_iterator_is_valid'));
final _heresdkRoutingBindingslistofSdkRoutingRouteIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Route_iterator_increment'));
final _heresdkRoutingBindingslistofSdkRoutingRouteIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Route_iterator_get'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingRouteToFfi(List<Route> value) {
  final _result = _heresdkRoutingBindingslistofSdkRoutingRouteCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingRouteToFfi(element);
    _heresdkRoutingBindingslistofSdkRoutingRouteInsert(_result, _elementHandle);
    sdkRoutingRouteReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Route> heresdkRoutingBindingslistofSdkRoutingRouteFromFfi(Pointer<Void> handle) {
  final result = List<Route>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingBindingslistofSdkRoutingRouteIterator(handle);
  while (_heresdkRoutingBindingslistofSdkRoutingRouteIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingBindingslistofSdkRoutingRouteIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingRouteFromFfi(_elementHandle));
    } finally {
      sdkRoutingRouteReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingBindingslistofSdkRoutingRouteIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingslistofSdkRoutingRouteIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingRouteReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingslistofSdkRoutingRouteReleaseHandle(handle);

final _heresdkRoutingBindingslistofSdkRoutingRouteCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Route_create_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingRouteReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Route_release_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingRouteGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Route_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingRouteToFfiNullable(List<Route>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingslistofSdkRoutingRouteToFfi(value);
  final result = _heresdkRoutingBindingslistofSdkRoutingRouteCreateHandleNullable(_handle);
  heresdkRoutingBindingslistofSdkRoutingRouteReleaseFfiHandle(_handle);
  return result;
}

List<Route>? heresdkRoutingBindingslistofSdkRoutingRouteFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingBindingslistofSdkRoutingRouteGetValueNullable(handle);
  final result = heresdkRoutingBindingslistofSdkRoutingRouteFromFfi(_handle);
  heresdkRoutingBindingslistofSdkRoutingRouteReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingRouteReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingslistofSdkRoutingRouteReleaseHandleNullable(handle);

final _heresdkRoutingBindingslistofSdkRoutingSectionCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Section_create_handle'));
final _heresdkRoutingBindingslistofSdkRoutingSectionReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Section_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingSectionInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Section_insert'));
final _heresdkRoutingBindingslistofSdkRoutingSectionIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Section_iterator'));
final _heresdkRoutingBindingslistofSdkRoutingSectionIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Section_iterator_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingSectionIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Section_iterator_is_valid'));
final _heresdkRoutingBindingslistofSdkRoutingSectionIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Section_iterator_increment'));
final _heresdkRoutingBindingslistofSdkRoutingSectionIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Section_iterator_get'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingSectionToFfi(List<Section> value) {
  final _result = _heresdkRoutingBindingslistofSdkRoutingSectionCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingSectionToFfi(element);
    _heresdkRoutingBindingslistofSdkRoutingSectionInsert(_result, _elementHandle);
    sdkRoutingSectionReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Section> heresdkRoutingBindingslistofSdkRoutingSectionFromFfi(Pointer<Void> handle) {
  final result = List<Section>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingBindingslistofSdkRoutingSectionIterator(handle);
  while (_heresdkRoutingBindingslistofSdkRoutingSectionIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingBindingslistofSdkRoutingSectionIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingSectionFromFfi(_elementHandle));
    } finally {
      sdkRoutingSectionReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingBindingslistofSdkRoutingSectionIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingslistofSdkRoutingSectionIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingSectionReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingslistofSdkRoutingSectionReleaseHandle(handle);

final _heresdkRoutingBindingslistofSdkRoutingSectionCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Section_create_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingSectionReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Section_release_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingSectionGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Section_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingSectionToFfiNullable(List<Section>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingslistofSdkRoutingSectionToFfi(value);
  final result = _heresdkRoutingBindingslistofSdkRoutingSectionCreateHandleNullable(_handle);
  heresdkRoutingBindingslistofSdkRoutingSectionReleaseFfiHandle(_handle);
  return result;
}

List<Section>? heresdkRoutingBindingslistofSdkRoutingSectionFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingBindingslistofSdkRoutingSectionGetValueNullable(handle);
  final result = heresdkRoutingBindingslistofSdkRoutingSectionFromFfi(_handle);
  heresdkRoutingBindingslistofSdkRoutingSectionReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingSectionReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingslistofSdkRoutingSectionReleaseHandleNullable(handle);

final _heresdkRoutingBindingslistofSdkRoutingSectionnoticeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_SectionNotice_create_handle'));
final _heresdkRoutingBindingslistofSdkRoutingSectionnoticeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_SectionNotice_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingSectionnoticeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_SectionNotice_insert'));
final _heresdkRoutingBindingslistofSdkRoutingSectionnoticeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_SectionNotice_iterator'));
final _heresdkRoutingBindingslistofSdkRoutingSectionnoticeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_SectionNotice_iterator_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingSectionnoticeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_SectionNotice_iterator_is_valid'));
final _heresdkRoutingBindingslistofSdkRoutingSectionnoticeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_SectionNotice_iterator_increment'));
final _heresdkRoutingBindingslistofSdkRoutingSectionnoticeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_SectionNotice_iterator_get'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingSectionnoticeToFfi(List<SectionNotice> value) {
  final _result = _heresdkRoutingBindingslistofSdkRoutingSectionnoticeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingSectionnoticeToFfi(element);
    _heresdkRoutingBindingslistofSdkRoutingSectionnoticeInsert(_result, _elementHandle);
    sdkRoutingSectionnoticeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<SectionNotice> heresdkRoutingBindingslistofSdkRoutingSectionnoticeFromFfi(Pointer<Void> handle) {
  final result = List<SectionNotice>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingBindingslistofSdkRoutingSectionnoticeIterator(handle);
  while (_heresdkRoutingBindingslistofSdkRoutingSectionnoticeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingBindingslistofSdkRoutingSectionnoticeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingSectionnoticeFromFfi(_elementHandle));
    } finally {
      sdkRoutingSectionnoticeReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingBindingslistofSdkRoutingSectionnoticeIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingslistofSdkRoutingSectionnoticeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingSectionnoticeReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingslistofSdkRoutingSectionnoticeReleaseHandle(handle);

final _heresdkRoutingBindingslistofSdkRoutingSectionnoticeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_SectionNotice_create_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingSectionnoticeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_SectionNotice_release_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingSectionnoticeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_SectionNotice_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingSectionnoticeToFfiNullable(List<SectionNotice>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingslistofSdkRoutingSectionnoticeToFfi(value);
  final result = _heresdkRoutingBindingslistofSdkRoutingSectionnoticeCreateHandleNullable(_handle);
  heresdkRoutingBindingslistofSdkRoutingSectionnoticeReleaseFfiHandle(_handle);
  return result;
}

List<SectionNotice>? heresdkRoutingBindingslistofSdkRoutingSectionnoticeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingBindingslistofSdkRoutingSectionnoticeGetValueNullable(handle);
  final result = heresdkRoutingBindingslistofSdkRoutingSectionnoticeFromFfi(_handle);
  heresdkRoutingBindingslistofSdkRoutingSectionnoticeReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingSectionnoticeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingslistofSdkRoutingSectionnoticeReleaseHandleNullable(handle);

final _heresdkRoutingBindingslistofSdkRoutingSegmentreferenceCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_SegmentReference_create_handle'));
final _heresdkRoutingBindingslistofSdkRoutingSegmentreferenceReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_SegmentReference_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingSegmentreferenceInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_SegmentReference_insert'));
final _heresdkRoutingBindingslistofSdkRoutingSegmentreferenceIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_SegmentReference_iterator'));
final _heresdkRoutingBindingslistofSdkRoutingSegmentreferenceIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_SegmentReference_iterator_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingSegmentreferenceIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_SegmentReference_iterator_is_valid'));
final _heresdkRoutingBindingslistofSdkRoutingSegmentreferenceIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_SegmentReference_iterator_increment'));
final _heresdkRoutingBindingslistofSdkRoutingSegmentreferenceIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_SegmentReference_iterator_get'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingSegmentreferenceToFfi(List<SegmentReference> value) {
  final _result = _heresdkRoutingBindingslistofSdkRoutingSegmentreferenceCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingSegmentreferenceToFfi(element);
    _heresdkRoutingBindingslistofSdkRoutingSegmentreferenceInsert(_result, _elementHandle);
    sdkRoutingSegmentreferenceReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<SegmentReference> heresdkRoutingBindingslistofSdkRoutingSegmentreferenceFromFfi(Pointer<Void> handle) {
  final result = List<SegmentReference>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingBindingslistofSdkRoutingSegmentreferenceIterator(handle);
  while (_heresdkRoutingBindingslistofSdkRoutingSegmentreferenceIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingBindingslistofSdkRoutingSegmentreferenceIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingSegmentreferenceFromFfi(_elementHandle));
    } finally {
      sdkRoutingSegmentreferenceReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingBindingslistofSdkRoutingSegmentreferenceIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingslistofSdkRoutingSegmentreferenceIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingSegmentreferenceReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingslistofSdkRoutingSegmentreferenceReleaseHandle(handle);

final _heresdkRoutingBindingslistofSdkRoutingSegmentreferenceCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_SegmentReference_create_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingSegmentreferenceReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_SegmentReference_release_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingSegmentreferenceGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_SegmentReference_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingSegmentreferenceToFfiNullable(List<SegmentReference>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingslistofSdkRoutingSegmentreferenceToFfi(value);
  final result = _heresdkRoutingBindingslistofSdkRoutingSegmentreferenceCreateHandleNullable(_handle);
  heresdkRoutingBindingslistofSdkRoutingSegmentreferenceReleaseFfiHandle(_handle);
  return result;
}

List<SegmentReference>? heresdkRoutingBindingslistofSdkRoutingSegmentreferenceFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingBindingslistofSdkRoutingSegmentreferenceGetValueNullable(handle);
  final result = heresdkRoutingBindingslistofSdkRoutingSegmentreferenceFromFfi(_handle);
  heresdkRoutingBindingslistofSdkRoutingSegmentreferenceReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingSegmentreferenceReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingslistofSdkRoutingSegmentreferenceReleaseHandleNullable(handle);

final _heresdkRoutingBindingslistofSdkRoutingSpanCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Span_create_handle'));
final _heresdkRoutingBindingslistofSdkRoutingSpanReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Span_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingSpanInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Span_insert'));
final _heresdkRoutingBindingslistofSdkRoutingSpanIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Span_iterator'));
final _heresdkRoutingBindingslistofSdkRoutingSpanIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Span_iterator_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingSpanIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Span_iterator_is_valid'));
final _heresdkRoutingBindingslistofSdkRoutingSpanIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Span_iterator_increment'));
final _heresdkRoutingBindingslistofSdkRoutingSpanIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Span_iterator_get'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingSpanToFfi(List<Span> value) {
  final _result = _heresdkRoutingBindingslistofSdkRoutingSpanCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingSpanToFfi(element);
    _heresdkRoutingBindingslistofSdkRoutingSpanInsert(_result, _elementHandle);
    sdkRoutingSpanReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Span> heresdkRoutingBindingslistofSdkRoutingSpanFromFfi(Pointer<Void> handle) {
  final result = List<Span>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingBindingslistofSdkRoutingSpanIterator(handle);
  while (_heresdkRoutingBindingslistofSdkRoutingSpanIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingBindingslistofSdkRoutingSpanIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingSpanFromFfi(_elementHandle));
    } finally {
      sdkRoutingSpanReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingBindingslistofSdkRoutingSpanIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingslistofSdkRoutingSpanIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingSpanReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingslistofSdkRoutingSpanReleaseHandle(handle);

final _heresdkRoutingBindingslistofSdkRoutingSpanCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Span_create_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingSpanReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Span_release_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingSpanGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Span_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingSpanToFfiNullable(List<Span>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingslistofSdkRoutingSpanToFfi(value);
  final result = _heresdkRoutingBindingslistofSdkRoutingSpanCreateHandleNullable(_handle);
  heresdkRoutingBindingslistofSdkRoutingSpanReleaseFfiHandle(_handle);
  return result;
}

List<Span>? heresdkRoutingBindingslistofSdkRoutingSpanFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingBindingslistofSdkRoutingSpanGetValueNullable(handle);
  final result = heresdkRoutingBindingslistofSdkRoutingSpanFromFfi(_handle);
  heresdkRoutingBindingslistofSdkRoutingSpanReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingSpanReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingslistofSdkRoutingSpanReleaseHandleNullable(handle);

final _heresdkRoutingBindingslistofSdkRoutingTollCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Toll_create_handle'));
final _heresdkRoutingBindingslistofSdkRoutingTollReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Toll_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingTollInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Toll_insert'));
final _heresdkRoutingBindingslistofSdkRoutingTollIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Toll_iterator'));
final _heresdkRoutingBindingslistofSdkRoutingTollIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Toll_iterator_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingTollIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Toll_iterator_is_valid'));
final _heresdkRoutingBindingslistofSdkRoutingTollIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Toll_iterator_increment'));
final _heresdkRoutingBindingslistofSdkRoutingTollIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Toll_iterator_get'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingTollToFfi(List<Toll> value) {
  final _result = _heresdkRoutingBindingslistofSdkRoutingTollCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingTollToFfi(element);
    _heresdkRoutingBindingslistofSdkRoutingTollInsert(_result, _elementHandle);
    sdkRoutingTollReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Toll> heresdkRoutingBindingslistofSdkRoutingTollFromFfi(Pointer<Void> handle) {
  final result = List<Toll>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingBindingslistofSdkRoutingTollIterator(handle);
  while (_heresdkRoutingBindingslistofSdkRoutingTollIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingBindingslistofSdkRoutingTollIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingTollFromFfi(_elementHandle));
    } finally {
      sdkRoutingTollReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingBindingslistofSdkRoutingTollIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingslistofSdkRoutingTollIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingTollReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingslistofSdkRoutingTollReleaseHandle(handle);

final _heresdkRoutingBindingslistofSdkRoutingTollCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Toll_create_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingTollReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Toll_release_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingTollGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Toll_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingTollToFfiNullable(List<Toll>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingslistofSdkRoutingTollToFfi(value);
  final result = _heresdkRoutingBindingslistofSdkRoutingTollCreateHandleNullable(_handle);
  heresdkRoutingBindingslistofSdkRoutingTollReleaseFfiHandle(_handle);
  return result;
}

List<Toll>? heresdkRoutingBindingslistofSdkRoutingTollFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingBindingslistofSdkRoutingTollGetValueNullable(handle);
  final result = heresdkRoutingBindingslistofSdkRoutingTollFromFfi(_handle);
  heresdkRoutingBindingslistofSdkRoutingTollReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingTollReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingslistofSdkRoutingTollReleaseHandleNullable(handle);

final _heresdkRoutingBindingslistofSdkRoutingTollfareCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TollFare_create_handle'));
final _heresdkRoutingBindingslistofSdkRoutingTollfareReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TollFare_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingTollfareInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TollFare_insert'));
final _heresdkRoutingBindingslistofSdkRoutingTollfareIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TollFare_iterator'));
final _heresdkRoutingBindingslistofSdkRoutingTollfareIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TollFare_iterator_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingTollfareIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TollFare_iterator_is_valid'));
final _heresdkRoutingBindingslistofSdkRoutingTollfareIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TollFare_iterator_increment'));
final _heresdkRoutingBindingslistofSdkRoutingTollfareIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TollFare_iterator_get'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingTollfareToFfi(List<TollFare> value) {
  final _result = _heresdkRoutingBindingslistofSdkRoutingTollfareCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingTollfareToFfi(element);
    _heresdkRoutingBindingslistofSdkRoutingTollfareInsert(_result, _elementHandle);
    sdkRoutingTollfareReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<TollFare> heresdkRoutingBindingslistofSdkRoutingTollfareFromFfi(Pointer<Void> handle) {
  final result = List<TollFare>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingBindingslistofSdkRoutingTollfareIterator(handle);
  while (_heresdkRoutingBindingslistofSdkRoutingTollfareIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingBindingslistofSdkRoutingTollfareIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingTollfareFromFfi(_elementHandle));
    } finally {
      sdkRoutingTollfareReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingBindingslistofSdkRoutingTollfareIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingslistofSdkRoutingTollfareIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingTollfareReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingslistofSdkRoutingTollfareReleaseHandle(handle);

final _heresdkRoutingBindingslistofSdkRoutingTollfareCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TollFare_create_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingTollfareReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TollFare_release_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingTollfareGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TollFare_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingTollfareToFfiNullable(List<TollFare>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingslistofSdkRoutingTollfareToFfi(value);
  final result = _heresdkRoutingBindingslistofSdkRoutingTollfareCreateHandleNullable(_handle);
  heresdkRoutingBindingslistofSdkRoutingTollfareReleaseFfiHandle(_handle);
  return result;
}

List<TollFare>? heresdkRoutingBindingslistofSdkRoutingTollfareFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingBindingslistofSdkRoutingTollfareGetValueNullable(handle);
  final result = heresdkRoutingBindingslistofSdkRoutingTollfareFromFfi(_handle);
  heresdkRoutingBindingslistofSdkRoutingTollfareReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingTollfareReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingslistofSdkRoutingTollfareReleaseHandleNullable(handle);

final _heresdkRoutingBindingslistofSdkRoutingTrafficspeedCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TrafficSpeed_create_handle'));
final _heresdkRoutingBindingslistofSdkRoutingTrafficspeedReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TrafficSpeed_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingTrafficspeedInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TrafficSpeed_insert'));
final _heresdkRoutingBindingslistofSdkRoutingTrafficspeedIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TrafficSpeed_iterator'));
final _heresdkRoutingBindingslistofSdkRoutingTrafficspeedIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TrafficSpeed_iterator_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingTrafficspeedIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TrafficSpeed_iterator_is_valid'));
final _heresdkRoutingBindingslistofSdkRoutingTrafficspeedIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TrafficSpeed_iterator_increment'));
final _heresdkRoutingBindingslistofSdkRoutingTrafficspeedIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TrafficSpeed_iterator_get'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingTrafficspeedToFfi(List<TrafficSpeed> value) {
  final _result = _heresdkRoutingBindingslistofSdkRoutingTrafficspeedCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingTrafficspeedToFfi(element);
    _heresdkRoutingBindingslistofSdkRoutingTrafficspeedInsert(_result, _elementHandle);
    sdkRoutingTrafficspeedReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<TrafficSpeed> heresdkRoutingBindingslistofSdkRoutingTrafficspeedFromFfi(Pointer<Void> handle) {
  final result = List<TrafficSpeed>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingBindingslistofSdkRoutingTrafficspeedIterator(handle);
  while (_heresdkRoutingBindingslistofSdkRoutingTrafficspeedIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingBindingslistofSdkRoutingTrafficspeedIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingTrafficspeedFromFfi(_elementHandle));
    } finally {
      sdkRoutingTrafficspeedReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingBindingslistofSdkRoutingTrafficspeedIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingslistofSdkRoutingTrafficspeedIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingTrafficspeedReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingslistofSdkRoutingTrafficspeedReleaseHandle(handle);

final _heresdkRoutingBindingslistofSdkRoutingTrafficspeedCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TrafficSpeed_create_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingTrafficspeedReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TrafficSpeed_release_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingTrafficspeedGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TrafficSpeed_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingTrafficspeedToFfiNullable(List<TrafficSpeed>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingslistofSdkRoutingTrafficspeedToFfi(value);
  final result = _heresdkRoutingBindingslistofSdkRoutingTrafficspeedCreateHandleNullable(_handle);
  heresdkRoutingBindingslistofSdkRoutingTrafficspeedReleaseFfiHandle(_handle);
  return result;
}

List<TrafficSpeed>? heresdkRoutingBindingslistofSdkRoutingTrafficspeedFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingBindingslistofSdkRoutingTrafficspeedGetValueNullable(handle);
  final result = heresdkRoutingBindingslistofSdkRoutingTrafficspeedFromFfi(_handle);
  heresdkRoutingBindingslistofSdkRoutingTrafficspeedReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingTrafficspeedReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingslistofSdkRoutingTrafficspeedReleaseHandleNullable(handle);

final _heresdkRoutingBindingslistofSdkRoutingTransitincidentCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TransitIncident_create_handle'));
final _heresdkRoutingBindingslistofSdkRoutingTransitincidentReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TransitIncident_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingTransitincidentInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TransitIncident_insert'));
final _heresdkRoutingBindingslistofSdkRoutingTransitincidentIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TransitIncident_iterator'));
final _heresdkRoutingBindingslistofSdkRoutingTransitincidentIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TransitIncident_iterator_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingTransitincidentIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TransitIncident_iterator_is_valid'));
final _heresdkRoutingBindingslistofSdkRoutingTransitincidentIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TransitIncident_iterator_increment'));
final _heresdkRoutingBindingslistofSdkRoutingTransitincidentIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TransitIncident_iterator_get'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingTransitincidentToFfi(List<TransitIncident> value) {
  final _result = _heresdkRoutingBindingslistofSdkRoutingTransitincidentCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingTransitincidentToFfi(element);
    _heresdkRoutingBindingslistofSdkRoutingTransitincidentInsert(_result, _elementHandle);
    sdkRoutingTransitincidentReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<TransitIncident> heresdkRoutingBindingslistofSdkRoutingTransitincidentFromFfi(Pointer<Void> handle) {
  final result = List<TransitIncident>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingBindingslistofSdkRoutingTransitincidentIterator(handle);
  while (_heresdkRoutingBindingslistofSdkRoutingTransitincidentIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingBindingslistofSdkRoutingTransitincidentIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingTransitincidentFromFfi(_elementHandle));
    } finally {
      sdkRoutingTransitincidentReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingBindingslistofSdkRoutingTransitincidentIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingslistofSdkRoutingTransitincidentIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingTransitincidentReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingslistofSdkRoutingTransitincidentReleaseHandle(handle);

final _heresdkRoutingBindingslistofSdkRoutingTransitincidentCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TransitIncident_create_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingTransitincidentReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TransitIncident_release_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingTransitincidentGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TransitIncident_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingTransitincidentToFfiNullable(List<TransitIncident>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingslistofSdkRoutingTransitincidentToFfi(value);
  final result = _heresdkRoutingBindingslistofSdkRoutingTransitincidentCreateHandleNullable(_handle);
  heresdkRoutingBindingslistofSdkRoutingTransitincidentReleaseFfiHandle(_handle);
  return result;
}

List<TransitIncident>? heresdkRoutingBindingslistofSdkRoutingTransitincidentFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingBindingslistofSdkRoutingTransitincidentGetValueNullable(handle);
  final result = heresdkRoutingBindingslistofSdkRoutingTransitincidentFromFfi(_handle);
  heresdkRoutingBindingslistofSdkRoutingTransitincidentReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingTransitincidentReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingslistofSdkRoutingTransitincidentReleaseHandleNullable(handle);

final _heresdkRoutingBindingslistofSdkRoutingTransitmodeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TransitMode_create_handle'));
final _heresdkRoutingBindingslistofSdkRoutingTransitmodeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TransitMode_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingTransitmodeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TransitMode_insert'));
final _heresdkRoutingBindingslistofSdkRoutingTransitmodeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TransitMode_iterator'));
final _heresdkRoutingBindingslistofSdkRoutingTransitmodeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TransitMode_iterator_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingTransitmodeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TransitMode_iterator_is_valid'));
final _heresdkRoutingBindingslistofSdkRoutingTransitmodeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TransitMode_iterator_increment'));
final _heresdkRoutingBindingslistofSdkRoutingTransitmodeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TransitMode_iterator_get'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingTransitmodeToFfi(List<TransitMode> value) {
  final _result = _heresdkRoutingBindingslistofSdkRoutingTransitmodeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingTransitmodeToFfi(element);
    _heresdkRoutingBindingslistofSdkRoutingTransitmodeInsert(_result, _elementHandle);
    sdkRoutingTransitmodeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<TransitMode> heresdkRoutingBindingslistofSdkRoutingTransitmodeFromFfi(Pointer<Void> handle) {
  final result = List<TransitMode>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingBindingslistofSdkRoutingTransitmodeIterator(handle);
  while (_heresdkRoutingBindingslistofSdkRoutingTransitmodeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingBindingslistofSdkRoutingTransitmodeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingTransitmodeFromFfi(_elementHandle));
    } finally {
      sdkRoutingTransitmodeReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingBindingslistofSdkRoutingTransitmodeIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingslistofSdkRoutingTransitmodeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingTransitmodeReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingslistofSdkRoutingTransitmodeReleaseHandle(handle);

final _heresdkRoutingBindingslistofSdkRoutingTransitmodeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TransitMode_create_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingTransitmodeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TransitMode_release_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingTransitmodeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TransitMode_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingTransitmodeToFfiNullable(List<TransitMode>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingslistofSdkRoutingTransitmodeToFfi(value);
  final result = _heresdkRoutingBindingslistofSdkRoutingTransitmodeCreateHandleNullable(_handle);
  heresdkRoutingBindingslistofSdkRoutingTransitmodeReleaseFfiHandle(_handle);
  return result;
}

List<TransitMode>? heresdkRoutingBindingslistofSdkRoutingTransitmodeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingBindingslistofSdkRoutingTransitmodeGetValueNullable(handle);
  final result = heresdkRoutingBindingslistofSdkRoutingTransitmodeFromFfi(_handle);
  heresdkRoutingBindingslistofSdkRoutingTransitmodeReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingTransitmodeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingslistofSdkRoutingTransitmodeReleaseHandleNullable(handle);

final _heresdkRoutingBindingslistofSdkRoutingTransitstopCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TransitStop_create_handle'));
final _heresdkRoutingBindingslistofSdkRoutingTransitstopReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TransitStop_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingTransitstopInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TransitStop_insert'));
final _heresdkRoutingBindingslistofSdkRoutingTransitstopIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TransitStop_iterator'));
final _heresdkRoutingBindingslistofSdkRoutingTransitstopIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TransitStop_iterator_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingTransitstopIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TransitStop_iterator_is_valid'));
final _heresdkRoutingBindingslistofSdkRoutingTransitstopIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TransitStop_iterator_increment'));
final _heresdkRoutingBindingslistofSdkRoutingTransitstopIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TransitStop_iterator_get'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingTransitstopToFfi(List<TransitStop> value) {
  final _result = _heresdkRoutingBindingslistofSdkRoutingTransitstopCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingTransitstopToFfi(element);
    _heresdkRoutingBindingslistofSdkRoutingTransitstopInsert(_result, _elementHandle);
    sdkRoutingTransitstopReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<TransitStop> heresdkRoutingBindingslistofSdkRoutingTransitstopFromFfi(Pointer<Void> handle) {
  final result = List<TransitStop>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingBindingslistofSdkRoutingTransitstopIterator(handle);
  while (_heresdkRoutingBindingslistofSdkRoutingTransitstopIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingBindingslistofSdkRoutingTransitstopIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingTransitstopFromFfi(_elementHandle));
    } finally {
      sdkRoutingTransitstopReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingBindingslistofSdkRoutingTransitstopIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingslistofSdkRoutingTransitstopIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingTransitstopReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingslistofSdkRoutingTransitstopReleaseHandle(handle);

final _heresdkRoutingBindingslistofSdkRoutingTransitstopCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TransitStop_create_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingTransitstopReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TransitStop_release_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingTransitstopGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TransitStop_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingTransitstopToFfiNullable(List<TransitStop>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingslistofSdkRoutingTransitstopToFfi(value);
  final result = _heresdkRoutingBindingslistofSdkRoutingTransitstopCreateHandleNullable(_handle);
  heresdkRoutingBindingslistofSdkRoutingTransitstopReleaseFfiHandle(_handle);
  return result;
}

List<TransitStop>? heresdkRoutingBindingslistofSdkRoutingTransitstopFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingBindingslistofSdkRoutingTransitstopGetValueNullable(handle);
  final result = heresdkRoutingBindingslistofSdkRoutingTransitstopFromFfi(_handle);
  heresdkRoutingBindingslistofSdkRoutingTransitstopReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingTransitstopReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingslistofSdkRoutingTransitstopReleaseHandleNullable(handle);

final _heresdkRoutingBindingslistofSdkRoutingWaypointCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Waypoint_create_handle'));
final _heresdkRoutingBindingslistofSdkRoutingWaypointReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Waypoint_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingWaypointInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Waypoint_insert'));
final _heresdkRoutingBindingslistofSdkRoutingWaypointIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Waypoint_iterator'));
final _heresdkRoutingBindingslistofSdkRoutingWaypointIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Waypoint_iterator_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingWaypointIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Waypoint_iterator_is_valid'));
final _heresdkRoutingBindingslistofSdkRoutingWaypointIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Waypoint_iterator_increment'));
final _heresdkRoutingBindingslistofSdkRoutingWaypointIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Waypoint_iterator_get'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingWaypointToFfi(List<Waypoint> value) {
  final _result = _heresdkRoutingBindingslistofSdkRoutingWaypointCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingWaypointToFfi(element);
    _heresdkRoutingBindingslistofSdkRoutingWaypointInsert(_result, _elementHandle);
    sdkRoutingWaypointReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Waypoint> heresdkRoutingBindingslistofSdkRoutingWaypointFromFfi(Pointer<Void> handle) {
  final result = List<Waypoint>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingBindingslistofSdkRoutingWaypointIterator(handle);
  while (_heresdkRoutingBindingslistofSdkRoutingWaypointIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingBindingslistofSdkRoutingWaypointIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingWaypointFromFfi(_elementHandle));
    } finally {
      sdkRoutingWaypointReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingBindingslistofSdkRoutingWaypointIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingslistofSdkRoutingWaypointIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingWaypointReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingslistofSdkRoutingWaypointReleaseHandle(handle);

final _heresdkRoutingBindingslistofSdkRoutingWaypointCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Waypoint_create_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingWaypointReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Waypoint_release_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingWaypointGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Waypoint_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingWaypointToFfiNullable(List<Waypoint>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingslistofSdkRoutingWaypointToFfi(value);
  final result = _heresdkRoutingBindingslistofSdkRoutingWaypointCreateHandleNullable(_handle);
  heresdkRoutingBindingslistofSdkRoutingWaypointReleaseFfiHandle(_handle);
  return result;
}

List<Waypoint>? heresdkRoutingBindingslistofSdkRoutingWaypointFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingBindingslistofSdkRoutingWaypointGetValueNullable(handle);
  final result = heresdkRoutingBindingslistofSdkRoutingWaypointFromFfi(_handle);
  heresdkRoutingBindingslistofSdkRoutingWaypointReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingWaypointReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingslistofSdkRoutingWaypointReleaseHandleNullable(handle);

final _heresdkRoutingBindingslistofSdkRoutingZonecategoryCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_ZoneCategory_create_handle'));
final _heresdkRoutingBindingslistofSdkRoutingZonecategoryReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_ZoneCategory_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingZonecategoryInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_ZoneCategory_insert'));
final _heresdkRoutingBindingslistofSdkRoutingZonecategoryIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_ZoneCategory_iterator'));
final _heresdkRoutingBindingslistofSdkRoutingZonecategoryIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_ZoneCategory_iterator_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingZonecategoryIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_ZoneCategory_iterator_is_valid'));
final _heresdkRoutingBindingslistofSdkRoutingZonecategoryIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_ZoneCategory_iterator_increment'));
final _heresdkRoutingBindingslistofSdkRoutingZonecategoryIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_ZoneCategory_iterator_get'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingZonecategoryToFfi(List<ZoneCategory> value) {
  final _result = _heresdkRoutingBindingslistofSdkRoutingZonecategoryCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingZonecategoryToFfi(element);
    _heresdkRoutingBindingslistofSdkRoutingZonecategoryInsert(_result, _elementHandle);
    sdkRoutingZonecategoryReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<ZoneCategory> heresdkRoutingBindingslistofSdkRoutingZonecategoryFromFfi(Pointer<Void> handle) {
  final result = List<ZoneCategory>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingBindingslistofSdkRoutingZonecategoryIterator(handle);
  while (_heresdkRoutingBindingslistofSdkRoutingZonecategoryIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingBindingslistofSdkRoutingZonecategoryIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingZonecategoryFromFfi(_elementHandle));
    } finally {
      sdkRoutingZonecategoryReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingBindingslistofSdkRoutingZonecategoryIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingslistofSdkRoutingZonecategoryIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingZonecategoryReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingslistofSdkRoutingZonecategoryReleaseHandle(handle);

final _heresdkRoutingBindingslistofSdkRoutingZonecategoryCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_ZoneCategory_create_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingZonecategoryReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_ZoneCategory_release_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingZonecategoryGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_ZoneCategory_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingZonecategoryToFfiNullable(List<ZoneCategory>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingslistofSdkRoutingZonecategoryToFfi(value);
  final result = _heresdkRoutingBindingslistofSdkRoutingZonecategoryCreateHandleNullable(_handle);
  heresdkRoutingBindingslistofSdkRoutingZonecategoryReleaseFfiHandle(_handle);
  return result;
}

List<ZoneCategory>? heresdkRoutingBindingslistofSdkRoutingZonecategoryFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingBindingslistofSdkRoutingZonecategoryGetValueNullable(handle);
  final result = heresdkRoutingBindingslistofSdkRoutingZonecategoryFromFfi(_handle);
  heresdkRoutingBindingslistofSdkRoutingZonecategoryReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingZonecategoryReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingslistofSdkRoutingZonecategoryReleaseHandleNullable(handle);

final _heresdkRoutingBindingsmapofDoubleToDoubleCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindingsMapOf_Double_to_Double_create_handle'));
final _heresdkRoutingBindingsmapofDoubleToDoubleReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsMapOf_Double_to_Double_release_handle'));
final _heresdkRoutingBindingsmapofDoubleToDoublePut = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Double, Double),
    void Function(Pointer<Void>, double, double)
  >('here_sdk_heresdk_routing_bindingsMapOf_Double_to_Double_put'));
final _heresdkRoutingBindingsmapofDoubleToDoubleIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsMapOf_Double_to_Double_iterator'));
final _heresdkRoutingBindingsmapofDoubleToDoubleIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsMapOf_Double_to_Double_iterator_release_handle'));
final _heresdkRoutingBindingsmapofDoubleToDoubleIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsMapOf_Double_to_Double_iterator_is_valid'));
final _heresdkRoutingBindingsmapofDoubleToDoubleIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsMapOf_Double_to_Double_iterator_increment'));
final _heresdkRoutingBindingsmapofDoubleToDoubleIteratorGetKey = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Double Function(Pointer<Void>),
    double Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsMapOf_Double_to_Double_iterator_get_key'));
final _heresdkRoutingBindingsmapofDoubleToDoubleIteratorGetValue = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Double Function(Pointer<Void>),
    double Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsMapOf_Double_to_Double_iterator_get_value'));

Pointer<Void> heresdkRoutingBindingsmapofDoubleToDoubleToFfi(Map<double, double> value) {
  final _result = _heresdkRoutingBindingsmapofDoubleToDoubleCreateHandle();
  for (final entry in value.entries) {
    final _keyHandle = (entry.key);
    final _valueHandle = (entry.value);
    _heresdkRoutingBindingsmapofDoubleToDoublePut(_result, _keyHandle, _valueHandle);
    
    
  }
  return _result;
}

Map<double, double> heresdkRoutingBindingsmapofDoubleToDoubleFromFfi(Pointer<Void> handle) {
  final result = Map<double, double>();
  final _iteratorHandle = _heresdkRoutingBindingsmapofDoubleToDoubleIterator(handle);
  while (_heresdkRoutingBindingsmapofDoubleToDoubleIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _keyHandle = _heresdkRoutingBindingsmapofDoubleToDoubleIteratorGetKey(_iteratorHandle);
    final _valueHandle = _heresdkRoutingBindingsmapofDoubleToDoubleIteratorGetValue(_iteratorHandle);
    try {
      result[(_keyHandle)] =
        (_valueHandle);
    } finally {
      
      
    }
    _heresdkRoutingBindingsmapofDoubleToDoubleIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingsmapofDoubleToDoubleIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingsmapofDoubleToDoubleReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingsmapofDoubleToDoubleReleaseHandle(handle);

final _heresdkRoutingBindingsmapofDoubleToDoubleCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsMapOf_Double_to_Double_create_handle_nullable'));
final _heresdkRoutingBindingsmapofDoubleToDoubleReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsMapOf_Double_to_Double_release_handle_nullable'));
final _heresdkRoutingBindingsmapofDoubleToDoubleGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsMapOf_Double_to_Double_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingsmapofDoubleToDoubleToFfiNullable(Map<double, double>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingsmapofDoubleToDoubleToFfi(value);
  final result = _heresdkRoutingBindingsmapofDoubleToDoubleCreateHandleNullable(_handle);
  heresdkRoutingBindingsmapofDoubleToDoubleReleaseFfiHandle(_handle);
  return result;
}

Map<double, double>? heresdkRoutingBindingsmapofDoubleToDoubleFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingBindingsmapofDoubleToDoubleGetValueNullable(handle);
  final result = heresdkRoutingBindingsmapofDoubleToDoubleFromFfi(_handle);
  heresdkRoutingBindingsmapofDoubleToDoubleReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingsmapofDoubleToDoubleReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingsmapofDoubleToDoubleReleaseHandleNullable(handle);

final _heresdkRoutingBindingsmapofIntToDoubleCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindingsMapOf_Int_to_Double_create_handle'));
final _heresdkRoutingBindingsmapofIntToDoubleReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsMapOf_Int_to_Double_release_handle'));
final _heresdkRoutingBindingsmapofIntToDoublePut = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Int32, Double),
    void Function(Pointer<Void>, int, double)
  >('here_sdk_heresdk_routing_bindingsMapOf_Int_to_Double_put'));
final _heresdkRoutingBindingsmapofIntToDoubleIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsMapOf_Int_to_Double_iterator'));
final _heresdkRoutingBindingsmapofIntToDoubleIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsMapOf_Int_to_Double_iterator_release_handle'));
final _heresdkRoutingBindingsmapofIntToDoubleIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsMapOf_Int_to_Double_iterator_is_valid'));
final _heresdkRoutingBindingsmapofIntToDoubleIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsMapOf_Int_to_Double_iterator_increment'));
final _heresdkRoutingBindingsmapofIntToDoubleIteratorGetKey = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsMapOf_Int_to_Double_iterator_get_key'));
final _heresdkRoutingBindingsmapofIntToDoubleIteratorGetValue = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Double Function(Pointer<Void>),
    double Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsMapOf_Int_to_Double_iterator_get_value'));

Pointer<Void> heresdkRoutingBindingsmapofIntToDoubleToFfi(Map<int, double> value) {
  final _result = _heresdkRoutingBindingsmapofIntToDoubleCreateHandle();
  for (final entry in value.entries) {
    final _keyHandle = (entry.key);
    final _valueHandle = (entry.value);
    _heresdkRoutingBindingsmapofIntToDoublePut(_result, _keyHandle, _valueHandle);
    
    
  }
  return _result;
}

Map<int, double> heresdkRoutingBindingsmapofIntToDoubleFromFfi(Pointer<Void> handle) {
  final result = Map<int, double>();
  final _iteratorHandle = _heresdkRoutingBindingsmapofIntToDoubleIterator(handle);
  while (_heresdkRoutingBindingsmapofIntToDoubleIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _keyHandle = _heresdkRoutingBindingsmapofIntToDoubleIteratorGetKey(_iteratorHandle);
    final _valueHandle = _heresdkRoutingBindingsmapofIntToDoubleIteratorGetValue(_iteratorHandle);
    try {
      result[(_keyHandle)] =
        (_valueHandle);
    } finally {
      
      
    }
    _heresdkRoutingBindingsmapofIntToDoubleIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingsmapofIntToDoubleIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingsmapofIntToDoubleReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingsmapofIntToDoubleReleaseHandle(handle);

final _heresdkRoutingBindingsmapofIntToDoubleCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsMapOf_Int_to_Double_create_handle_nullable'));
final _heresdkRoutingBindingsmapofIntToDoubleReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsMapOf_Int_to_Double_release_handle_nullable'));
final _heresdkRoutingBindingsmapofIntToDoubleGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsMapOf_Int_to_Double_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingsmapofIntToDoubleToFfiNullable(Map<int, double>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingsmapofIntToDoubleToFfi(value);
  final result = _heresdkRoutingBindingsmapofIntToDoubleCreateHandleNullable(_handle);
  heresdkRoutingBindingsmapofIntToDoubleReleaseFfiHandle(_handle);
  return result;
}

Map<int, double>? heresdkRoutingBindingsmapofIntToDoubleFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingBindingsmapofIntToDoubleGetValueNullable(handle);
  final result = heresdkRoutingBindingsmapofIntToDoubleFromFfi(_handle);
  heresdkRoutingBindingsmapofIntToDoubleReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingsmapofIntToDoubleReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingsmapofIntToDoubleReleaseHandleNullable(handle);


// Copyright (c) 2018-2021 HERE Global B.V. and its affiliate(s).
// All rights reserved.
//
// This software and other materials contain proprietary information
// controlled by HERE and are protected by applicable copyright legislation.
// Any use and utilization of this software and other materials and
// disclosure to any third parties is conditional upon having a separate
// agreement with HERE for the access, use, utilization or disclosure of this
// software. In the absence of such agreement, the use of the software is not
// allowed.
//


































final _heresdkRoutingCommonBindingslistofIntCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_common_bindingsListOf_Int_create_handle'));
final _heresdkRoutingCommonBindingslistofIntReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_Int_release_handle'));
final _heresdkRoutingCommonBindingslistofIntInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Int32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_common_bindingsListOf_Int_insert'));
final _heresdkRoutingCommonBindingslistofIntIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_Int_iterator'));
final _heresdkRoutingCommonBindingslistofIntIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_Int_iterator_release_handle'));
final _heresdkRoutingCommonBindingslistofIntIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_Int_iterator_is_valid'));
final _heresdkRoutingCommonBindingslistofIntIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_Int_iterator_increment'));
final _heresdkRoutingCommonBindingslistofIntIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_Int_iterator_get'));

Pointer<Void> heresdkRoutingCommonBindingslistofIntToFfi(List<int> value) {
  final _result = _heresdkRoutingCommonBindingslistofIntCreateHandle();
  for (final element in value) {
    final _elementHandle = (element);
    _heresdkRoutingCommonBindingslistofIntInsert(_result, _elementHandle);
    
  }
  return _result;
}

List<int> heresdkRoutingCommonBindingslistofIntFromFfi(Pointer<Void> handle) {
  final result = List<int>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingCommonBindingslistofIntIterator(handle);
  while (_heresdkRoutingCommonBindingslistofIntIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingCommonBindingslistofIntIteratorGet(_iteratorHandle);
    try {
      result.add((_elementHandle));
    } finally {
      
    }
    _heresdkRoutingCommonBindingslistofIntIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingCommonBindingslistofIntIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingCommonBindingslistofIntReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingCommonBindingslistofIntReleaseHandle(handle);

final _heresdkRoutingCommonBindingslistofIntCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_Int_create_handle_nullable'));
final _heresdkRoutingCommonBindingslistofIntReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_Int_release_handle_nullable'));
final _heresdkRoutingCommonBindingslistofIntGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_Int_get_value_nullable'));

Pointer<Void> heresdkRoutingCommonBindingslistofIntToFfiNullable(List<int>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingCommonBindingslistofIntToFfi(value);
  final result = _heresdkRoutingCommonBindingslistofIntCreateHandleNullable(_handle);
  heresdkRoutingCommonBindingslistofIntReleaseFfiHandle(_handle);
  return result;
}

List<int>? heresdkRoutingCommonBindingslistofIntFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingCommonBindingslistofIntGetValueNullable(handle);
  final result = heresdkRoutingCommonBindingslistofIntFromFfi(_handle);
  heresdkRoutingCommonBindingslistofIntReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingCommonBindingslistofIntReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingCommonBindingslistofIntReleaseHandleNullable(handle);

final _heresdkRoutingCommonBindingslistofLocaleCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_common_bindingsListOf_Locale_create_handle'));
final _heresdkRoutingCommonBindingslistofLocaleReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_Locale_release_handle'));
final _heresdkRoutingCommonBindingslistofLocaleInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_Locale_insert'));
final _heresdkRoutingCommonBindingslistofLocaleIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_Locale_iterator'));
final _heresdkRoutingCommonBindingslistofLocaleIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_Locale_iterator_release_handle'));
final _heresdkRoutingCommonBindingslistofLocaleIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_Locale_iterator_is_valid'));
final _heresdkRoutingCommonBindingslistofLocaleIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_Locale_iterator_increment'));
final _heresdkRoutingCommonBindingslistofLocaleIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_Locale_iterator_get'));

Pointer<Void> heresdkRoutingCommonBindingslistofLocaleToFfi(List<Locale> value) {
  final _result = _heresdkRoutingCommonBindingslistofLocaleCreateHandle();
  for (final element in value) {
    final _elementHandle = localeToFfi(element);
    _heresdkRoutingCommonBindingslistofLocaleInsert(_result, _elementHandle);
    localeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Locale> heresdkRoutingCommonBindingslistofLocaleFromFfi(Pointer<Void> handle) {
  final result = List<Locale>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingCommonBindingslistofLocaleIterator(handle);
  while (_heresdkRoutingCommonBindingslistofLocaleIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingCommonBindingslistofLocaleIteratorGet(_iteratorHandle);
    try {
      result.add(localeFromFfi(_elementHandle));
    } finally {
      localeReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingCommonBindingslistofLocaleIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingCommonBindingslistofLocaleIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingCommonBindingslistofLocaleReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingCommonBindingslistofLocaleReleaseHandle(handle);

final _heresdkRoutingCommonBindingslistofLocaleCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_Locale_create_handle_nullable'));
final _heresdkRoutingCommonBindingslistofLocaleReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_Locale_release_handle_nullable'));
final _heresdkRoutingCommonBindingslistofLocaleGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_Locale_get_value_nullable'));

Pointer<Void> heresdkRoutingCommonBindingslistofLocaleToFfiNullable(List<Locale>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingCommonBindingslistofLocaleToFfi(value);
  final result = _heresdkRoutingCommonBindingslistofLocaleCreateHandleNullable(_handle);
  heresdkRoutingCommonBindingslistofLocaleReleaseFfiHandle(_handle);
  return result;
}

List<Locale>? heresdkRoutingCommonBindingslistofLocaleFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingCommonBindingslistofLocaleGetValueNullable(handle);
  final result = heresdkRoutingCommonBindingslistofLocaleFromFfi(_handle);
  heresdkRoutingCommonBindingslistofLocaleReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingCommonBindingslistofLocaleReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingCommonBindingslistofLocaleReleaseHandleNullable(handle);

final _heresdkRoutingCommonBindingslistofSdkCoreCountrycodeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_CountryCode_create_handle'));
final _heresdkRoutingCommonBindingslistofSdkCoreCountrycodeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_CountryCode_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkCoreCountrycodeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_CountryCode_insert'));
final _heresdkRoutingCommonBindingslistofSdkCoreCountrycodeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_CountryCode_iterator'));
final _heresdkRoutingCommonBindingslistofSdkCoreCountrycodeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_CountryCode_iterator_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkCoreCountrycodeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_CountryCode_iterator_is_valid'));
final _heresdkRoutingCommonBindingslistofSdkCoreCountrycodeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_CountryCode_iterator_increment'));
final _heresdkRoutingCommonBindingslistofSdkCoreCountrycodeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_CountryCode_iterator_get'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkCoreCountrycodeToFfi(List<CountryCode> value) {
  final _result = _heresdkRoutingCommonBindingslistofSdkCoreCountrycodeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreCountrycodeToFfi(element);
    _heresdkRoutingCommonBindingslistofSdkCoreCountrycodeInsert(_result, _elementHandle);
    sdkCoreCountrycodeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<CountryCode> heresdkRoutingCommonBindingslistofSdkCoreCountrycodeFromFfi(Pointer<Void> handle) {
  final result = List<CountryCode>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingCommonBindingslistofSdkCoreCountrycodeIterator(handle);
  while (_heresdkRoutingCommonBindingslistofSdkCoreCountrycodeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingCommonBindingslistofSdkCoreCountrycodeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreCountrycodeFromFfi(_elementHandle));
    } finally {
      sdkCoreCountrycodeReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingCommonBindingslistofSdkCoreCountrycodeIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingCommonBindingslistofSdkCoreCountrycodeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkCoreCountrycodeReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingCommonBindingslistofSdkCoreCountrycodeReleaseHandle(handle);

final _heresdkRoutingCommonBindingslistofSdkCoreCountrycodeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_CountryCode_create_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkCoreCountrycodeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_CountryCode_release_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkCoreCountrycodeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_CountryCode_get_value_nullable'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkCoreCountrycodeToFfiNullable(List<CountryCode>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingCommonBindingslistofSdkCoreCountrycodeToFfi(value);
  final result = _heresdkRoutingCommonBindingslistofSdkCoreCountrycodeCreateHandleNullable(_handle);
  heresdkRoutingCommonBindingslistofSdkCoreCountrycodeReleaseFfiHandle(_handle);
  return result;
}

List<CountryCode>? heresdkRoutingCommonBindingslistofSdkCoreCountrycodeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingCommonBindingslistofSdkCoreCountrycodeGetValueNullable(handle);
  final result = heresdkRoutingCommonBindingslistofSdkCoreCountrycodeFromFfi(_handle);
  heresdkRoutingCommonBindingslistofSdkCoreCountrycodeReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkCoreCountrycodeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingCommonBindingslistofSdkCoreCountrycodeReleaseHandleNullable(handle);

final _heresdkRoutingCommonBindingslistofSdkCoreGeoboxCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_GeoBox_create_handle'));
final _heresdkRoutingCommonBindingslistofSdkCoreGeoboxReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_GeoBox_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkCoreGeoboxInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_GeoBox_insert'));
final _heresdkRoutingCommonBindingslistofSdkCoreGeoboxIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_GeoBox_iterator'));
final _heresdkRoutingCommonBindingslistofSdkCoreGeoboxIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_GeoBox_iterator_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkCoreGeoboxIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_GeoBox_iterator_is_valid'));
final _heresdkRoutingCommonBindingslistofSdkCoreGeoboxIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_GeoBox_iterator_increment'));
final _heresdkRoutingCommonBindingslistofSdkCoreGeoboxIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_GeoBox_iterator_get'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkCoreGeoboxToFfi(List<GeoBox> value) {
  final _result = _heresdkRoutingCommonBindingslistofSdkCoreGeoboxCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreGeoboxToFfi(element);
    _heresdkRoutingCommonBindingslistofSdkCoreGeoboxInsert(_result, _elementHandle);
    sdkCoreGeoboxReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoBox> heresdkRoutingCommonBindingslistofSdkCoreGeoboxFromFfi(Pointer<Void> handle) {
  final result = List<GeoBox>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingCommonBindingslistofSdkCoreGeoboxIterator(handle);
  while (_heresdkRoutingCommonBindingslistofSdkCoreGeoboxIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingCommonBindingslistofSdkCoreGeoboxIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreGeoboxFromFfi(_elementHandle));
    } finally {
      sdkCoreGeoboxReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingCommonBindingslistofSdkCoreGeoboxIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingCommonBindingslistofSdkCoreGeoboxIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkCoreGeoboxReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingCommonBindingslistofSdkCoreGeoboxReleaseHandle(handle);

final _heresdkRoutingCommonBindingslistofSdkCoreGeoboxCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_GeoBox_create_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkCoreGeoboxReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_GeoBox_release_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkCoreGeoboxGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_GeoBox_get_value_nullable'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkCoreGeoboxToFfiNullable(List<GeoBox>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingCommonBindingslistofSdkCoreGeoboxToFfi(value);
  final result = _heresdkRoutingCommonBindingslistofSdkCoreGeoboxCreateHandleNullable(_handle);
  heresdkRoutingCommonBindingslistofSdkCoreGeoboxReleaseFfiHandle(_handle);
  return result;
}

List<GeoBox>? heresdkRoutingCommonBindingslistofSdkCoreGeoboxFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingCommonBindingslistofSdkCoreGeoboxGetValueNullable(handle);
  final result = heresdkRoutingCommonBindingslistofSdkCoreGeoboxFromFfi(_handle);
  heresdkRoutingCommonBindingslistofSdkCoreGeoboxReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkCoreGeoboxReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingCommonBindingslistofSdkCoreGeoboxReleaseHandleNullable(handle);

final _heresdkRoutingCommonBindingslistofSdkCoreGeocoordinatesCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_GeoCoordinates_create_handle'));
final _heresdkRoutingCommonBindingslistofSdkCoreGeocoordinatesReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_GeoCoordinates_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkCoreGeocoordinatesInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_GeoCoordinates_insert'));
final _heresdkRoutingCommonBindingslistofSdkCoreGeocoordinatesIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_GeoCoordinates_iterator'));
final _heresdkRoutingCommonBindingslistofSdkCoreGeocoordinatesIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_GeoCoordinates_iterator_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkCoreGeocoordinatesIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_GeoCoordinates_iterator_is_valid'));
final _heresdkRoutingCommonBindingslistofSdkCoreGeocoordinatesIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_GeoCoordinates_iterator_increment'));
final _heresdkRoutingCommonBindingslistofSdkCoreGeocoordinatesIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_GeoCoordinates_iterator_get'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkCoreGeocoordinatesToFfi(List<GeoCoordinates> value) {
  final _result = _heresdkRoutingCommonBindingslistofSdkCoreGeocoordinatesCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreGeocoordinatesToFfi(element);
    _heresdkRoutingCommonBindingslistofSdkCoreGeocoordinatesInsert(_result, _elementHandle);
    sdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoCoordinates> heresdkRoutingCommonBindingslistofSdkCoreGeocoordinatesFromFfi(Pointer<Void> handle) {
  final result = List<GeoCoordinates>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingCommonBindingslistofSdkCoreGeocoordinatesIterator(handle);
  while (_heresdkRoutingCommonBindingslistofSdkCoreGeocoordinatesIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingCommonBindingslistofSdkCoreGeocoordinatesIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreGeocoordinatesFromFfi(_elementHandle));
    } finally {
      sdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingCommonBindingslistofSdkCoreGeocoordinatesIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingCommonBindingslistofSdkCoreGeocoordinatesIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingCommonBindingslistofSdkCoreGeocoordinatesReleaseHandle(handle);

final _heresdkRoutingCommonBindingslistofSdkCoreGeocoordinatesCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_GeoCoordinates_create_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkCoreGeocoordinatesReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_GeoCoordinates_release_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkCoreGeocoordinatesGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_GeoCoordinates_get_value_nullable'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkCoreGeocoordinatesToFfiNullable(List<GeoCoordinates>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingCommonBindingslistofSdkCoreGeocoordinatesToFfi(value);
  final result = _heresdkRoutingCommonBindingslistofSdkCoreGeocoordinatesCreateHandleNullable(_handle);
  heresdkRoutingCommonBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

List<GeoCoordinates>? heresdkRoutingCommonBindingslistofSdkCoreGeocoordinatesFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingCommonBindingslistofSdkCoreGeocoordinatesGetValueNullable(handle);
  final result = heresdkRoutingCommonBindingslistofSdkCoreGeocoordinatesFromFfi(_handle);
  heresdkRoutingCommonBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkCoreGeocoordinatesReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingCommonBindingslistofSdkCoreGeocoordinatesReleaseHandleNullable(handle);

final _heresdkRoutingCommonBindingslistofSdkCoreLocalizedtextCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_LocalizedText_create_handle'));
final _heresdkRoutingCommonBindingslistofSdkCoreLocalizedtextReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_LocalizedText_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkCoreLocalizedtextInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_LocalizedText_insert'));
final _heresdkRoutingCommonBindingslistofSdkCoreLocalizedtextIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_LocalizedText_iterator'));
final _heresdkRoutingCommonBindingslistofSdkCoreLocalizedtextIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_LocalizedText_iterator_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkCoreLocalizedtextIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_LocalizedText_iterator_is_valid'));
final _heresdkRoutingCommonBindingslistofSdkCoreLocalizedtextIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_LocalizedText_iterator_increment'));
final _heresdkRoutingCommonBindingslistofSdkCoreLocalizedtextIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_LocalizedText_iterator_get'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkCoreLocalizedtextToFfi(List<LocalizedText> value) {
  final _result = _heresdkRoutingCommonBindingslistofSdkCoreLocalizedtextCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreLocalizedtextToFfi(element);
    _heresdkRoutingCommonBindingslistofSdkCoreLocalizedtextInsert(_result, _elementHandle);
    sdkCoreLocalizedtextReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<LocalizedText> heresdkRoutingCommonBindingslistofSdkCoreLocalizedtextFromFfi(Pointer<Void> handle) {
  final result = List<LocalizedText>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingCommonBindingslistofSdkCoreLocalizedtextIterator(handle);
  while (_heresdkRoutingCommonBindingslistofSdkCoreLocalizedtextIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingCommonBindingslistofSdkCoreLocalizedtextIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreLocalizedtextFromFfi(_elementHandle));
    } finally {
      sdkCoreLocalizedtextReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingCommonBindingslistofSdkCoreLocalizedtextIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingCommonBindingslistofSdkCoreLocalizedtextIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkCoreLocalizedtextReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingCommonBindingslistofSdkCoreLocalizedtextReleaseHandle(handle);

final _heresdkRoutingCommonBindingslistofSdkCoreLocalizedtextCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_LocalizedText_create_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkCoreLocalizedtextReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_LocalizedText_release_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkCoreLocalizedtextGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_LocalizedText_get_value_nullable'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkCoreLocalizedtextToFfiNullable(List<LocalizedText>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingCommonBindingslistofSdkCoreLocalizedtextToFfi(value);
  final result = _heresdkRoutingCommonBindingslistofSdkCoreLocalizedtextCreateHandleNullable(_handle);
  heresdkRoutingCommonBindingslistofSdkCoreLocalizedtextReleaseFfiHandle(_handle);
  return result;
}

List<LocalizedText>? heresdkRoutingCommonBindingslistofSdkCoreLocalizedtextFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingCommonBindingslistofSdkCoreLocalizedtextGetValueNullable(handle);
  final result = heresdkRoutingCommonBindingslistofSdkCoreLocalizedtextFromFfi(_handle);
  heresdkRoutingCommonBindingslistofSdkCoreLocalizedtextReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkCoreLocalizedtextReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingCommonBindingslistofSdkCoreLocalizedtextReleaseHandleNullable(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingAttributionCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Attribution_create_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingAttributionReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Attribution_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingAttributionInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Attribution_insert'));
final _heresdkRoutingCommonBindingslistofSdkRoutingAttributionIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Attribution_iterator'));
final _heresdkRoutingCommonBindingslistofSdkRoutingAttributionIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Attribution_iterator_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingAttributionIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Attribution_iterator_is_valid'));
final _heresdkRoutingCommonBindingslistofSdkRoutingAttributionIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Attribution_iterator_increment'));
final _heresdkRoutingCommonBindingslistofSdkRoutingAttributionIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Attribution_iterator_get'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingAttributionToFfi(List<Attribution> value) {
  final _result = _heresdkRoutingCommonBindingslistofSdkRoutingAttributionCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingAttributionToFfi(element);
    _heresdkRoutingCommonBindingslistofSdkRoutingAttributionInsert(_result, _elementHandle);
    sdkRoutingAttributionReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Attribution> heresdkRoutingCommonBindingslistofSdkRoutingAttributionFromFfi(Pointer<Void> handle) {
  final result = List<Attribution>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingCommonBindingslistofSdkRoutingAttributionIterator(handle);
  while (_heresdkRoutingCommonBindingslistofSdkRoutingAttributionIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingCommonBindingslistofSdkRoutingAttributionIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingAttributionFromFfi(_elementHandle));
    } finally {
      sdkRoutingAttributionReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingCommonBindingslistofSdkRoutingAttributionIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingCommonBindingslistofSdkRoutingAttributionIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingAttributionReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingCommonBindingslistofSdkRoutingAttributionReleaseHandle(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingAttributionCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Attribution_create_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingAttributionReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Attribution_release_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingAttributionGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Attribution_get_value_nullable'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingAttributionToFfiNullable(List<Attribution>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingCommonBindingslistofSdkRoutingAttributionToFfi(value);
  final result = _heresdkRoutingCommonBindingslistofSdkRoutingAttributionCreateHandleNullable(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingAttributionReleaseFfiHandle(_handle);
  return result;
}

List<Attribution>? heresdkRoutingCommonBindingslistofSdkRoutingAttributionFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingCommonBindingslistofSdkRoutingAttributionGetValueNullable(handle);
  final result = heresdkRoutingCommonBindingslistofSdkRoutingAttributionFromFfi(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingAttributionReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingAttributionReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingCommonBindingslistofSdkRoutingAttributionReleaseHandleNullable(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingChargingconnectortypeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_ChargingConnectorType_create_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingChargingconnectortypeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_ChargingConnectorType_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingChargingconnectortypeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_ChargingConnectorType_insert'));
final _heresdkRoutingCommonBindingslistofSdkRoutingChargingconnectortypeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_ChargingConnectorType_iterator'));
final _heresdkRoutingCommonBindingslistofSdkRoutingChargingconnectortypeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_ChargingConnectorType_iterator_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingChargingconnectortypeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_ChargingConnectorType_iterator_is_valid'));
final _heresdkRoutingCommonBindingslistofSdkRoutingChargingconnectortypeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_ChargingConnectorType_iterator_increment'));
final _heresdkRoutingCommonBindingslistofSdkRoutingChargingconnectortypeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_ChargingConnectorType_iterator_get'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingChargingconnectortypeToFfi(List<ChargingConnectorType> value) {
  final _result = _heresdkRoutingCommonBindingslistofSdkRoutingChargingconnectortypeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingChargingconnectortypeToFfi(element);
    _heresdkRoutingCommonBindingslistofSdkRoutingChargingconnectortypeInsert(_result, _elementHandle);
    sdkRoutingChargingconnectortypeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<ChargingConnectorType> heresdkRoutingCommonBindingslistofSdkRoutingChargingconnectortypeFromFfi(Pointer<Void> handle) {
  final result = List<ChargingConnectorType>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingCommonBindingslistofSdkRoutingChargingconnectortypeIterator(handle);
  while (_heresdkRoutingCommonBindingslistofSdkRoutingChargingconnectortypeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingCommonBindingslistofSdkRoutingChargingconnectortypeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingChargingconnectortypeFromFfi(_elementHandle));
    } finally {
      sdkRoutingChargingconnectortypeReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingCommonBindingslistofSdkRoutingChargingconnectortypeIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingCommonBindingslistofSdkRoutingChargingconnectortypeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingChargingconnectortypeReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingCommonBindingslistofSdkRoutingChargingconnectortypeReleaseHandle(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingChargingconnectortypeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_ChargingConnectorType_create_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingChargingconnectortypeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_ChargingConnectorType_release_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingChargingconnectortypeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_ChargingConnectorType_get_value_nullable'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingChargingconnectortypeToFfiNullable(List<ChargingConnectorType>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingCommonBindingslistofSdkRoutingChargingconnectortypeToFfi(value);
  final result = _heresdkRoutingCommonBindingslistofSdkRoutingChargingconnectortypeCreateHandleNullable(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingChargingconnectortypeReleaseFfiHandle(_handle);
  return result;
}

List<ChargingConnectorType>? heresdkRoutingCommonBindingslistofSdkRoutingChargingconnectortypeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingCommonBindingslistofSdkRoutingChargingconnectortypeGetValueNullable(handle);
  final result = heresdkRoutingCommonBindingslistofSdkRoutingChargingconnectortypeFromFfi(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingChargingconnectortypeReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingChargingconnectortypeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingCommonBindingslistofSdkRoutingChargingconnectortypeReleaseHandleNullable(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingFareCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Fare_create_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingFareReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Fare_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingFareInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Fare_insert'));
final _heresdkRoutingCommonBindingslistofSdkRoutingFareIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Fare_iterator'));
final _heresdkRoutingCommonBindingslistofSdkRoutingFareIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Fare_iterator_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingFareIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Fare_iterator_is_valid'));
final _heresdkRoutingCommonBindingslistofSdkRoutingFareIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Fare_iterator_increment'));
final _heresdkRoutingCommonBindingslistofSdkRoutingFareIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Fare_iterator_get'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingFareToFfi(List<Fare> value) {
  final _result = _heresdkRoutingCommonBindingslistofSdkRoutingFareCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingFareToFfi(element);
    _heresdkRoutingCommonBindingslistofSdkRoutingFareInsert(_result, _elementHandle);
    sdkRoutingFareReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Fare> heresdkRoutingCommonBindingslistofSdkRoutingFareFromFfi(Pointer<Void> handle) {
  final result = List<Fare>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingCommonBindingslistofSdkRoutingFareIterator(handle);
  while (_heresdkRoutingCommonBindingslistofSdkRoutingFareIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingCommonBindingslistofSdkRoutingFareIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingFareFromFfi(_elementHandle));
    } finally {
      sdkRoutingFareReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingCommonBindingslistofSdkRoutingFareIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingCommonBindingslistofSdkRoutingFareIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingFareReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingCommonBindingslistofSdkRoutingFareReleaseHandle(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingFareCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Fare_create_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingFareReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Fare_release_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingFareGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Fare_get_value_nullable'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingFareToFfiNullable(List<Fare>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingCommonBindingslistofSdkRoutingFareToFfi(value);
  final result = _heresdkRoutingCommonBindingslistofSdkRoutingFareCreateHandleNullable(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingFareReleaseFfiHandle(_handle);
  return result;
}

List<Fare>? heresdkRoutingCommonBindingslistofSdkRoutingFareFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingCommonBindingslistofSdkRoutingFareGetValueNullable(handle);
  final result = heresdkRoutingCommonBindingslistofSdkRoutingFareFromFfi(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingFareReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingFareReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingCommonBindingslistofSdkRoutingFareReleaseHandleNullable(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingHazardousgoodCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_HazardousGood_create_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingHazardousgoodReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_HazardousGood_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingHazardousgoodInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_HazardousGood_insert'));
final _heresdkRoutingCommonBindingslistofSdkRoutingHazardousgoodIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_HazardousGood_iterator'));
final _heresdkRoutingCommonBindingslistofSdkRoutingHazardousgoodIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_HazardousGood_iterator_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingHazardousgoodIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_HazardousGood_iterator_is_valid'));
final _heresdkRoutingCommonBindingslistofSdkRoutingHazardousgoodIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_HazardousGood_iterator_increment'));
final _heresdkRoutingCommonBindingslistofSdkRoutingHazardousgoodIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_HazardousGood_iterator_get'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingHazardousgoodToFfi(List<HazardousGood> value) {
  final _result = _heresdkRoutingCommonBindingslistofSdkRoutingHazardousgoodCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingHazardousgoodToFfi(element);
    _heresdkRoutingCommonBindingslistofSdkRoutingHazardousgoodInsert(_result, _elementHandle);
    sdkRoutingHazardousgoodReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<HazardousGood> heresdkRoutingCommonBindingslistofSdkRoutingHazardousgoodFromFfi(Pointer<Void> handle) {
  final result = List<HazardousGood>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingCommonBindingslistofSdkRoutingHazardousgoodIterator(handle);
  while (_heresdkRoutingCommonBindingslistofSdkRoutingHazardousgoodIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingCommonBindingslistofSdkRoutingHazardousgoodIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingHazardousgoodFromFfi(_elementHandle));
    } finally {
      sdkRoutingHazardousgoodReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingCommonBindingslistofSdkRoutingHazardousgoodIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingCommonBindingslistofSdkRoutingHazardousgoodIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingHazardousgoodReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingCommonBindingslistofSdkRoutingHazardousgoodReleaseHandle(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingHazardousgoodCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_HazardousGood_create_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingHazardousgoodReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_HazardousGood_release_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingHazardousgoodGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_HazardousGood_get_value_nullable'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingHazardousgoodToFfiNullable(List<HazardousGood>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingCommonBindingslistofSdkRoutingHazardousgoodToFfi(value);
  final result = _heresdkRoutingCommonBindingslistofSdkRoutingHazardousgoodCreateHandleNullable(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingHazardousgoodReleaseFfiHandle(_handle);
  return result;
}

List<HazardousGood>? heresdkRoutingCommonBindingslistofSdkRoutingHazardousgoodFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingCommonBindingslistofSdkRoutingHazardousgoodGetValueNullable(handle);
  final result = heresdkRoutingCommonBindingslistofSdkRoutingHazardousgoodFromFfi(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingHazardousgoodReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingHazardousgoodReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingCommonBindingslistofSdkRoutingHazardousgoodReleaseHandleNullable(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingManeuverCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Maneuver_create_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingManeuverReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Maneuver_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingManeuverInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Maneuver_insert'));
final _heresdkRoutingCommonBindingslistofSdkRoutingManeuverIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Maneuver_iterator'));
final _heresdkRoutingCommonBindingslistofSdkRoutingManeuverIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Maneuver_iterator_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingManeuverIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Maneuver_iterator_is_valid'));
final _heresdkRoutingCommonBindingslistofSdkRoutingManeuverIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Maneuver_iterator_increment'));
final _heresdkRoutingCommonBindingslistofSdkRoutingManeuverIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Maneuver_iterator_get'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingManeuverToFfi(List<Maneuver> value) {
  final _result = _heresdkRoutingCommonBindingslistofSdkRoutingManeuverCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingManeuverToFfi(element);
    _heresdkRoutingCommonBindingslistofSdkRoutingManeuverInsert(_result, _elementHandle);
    sdkRoutingManeuverReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Maneuver> heresdkRoutingCommonBindingslistofSdkRoutingManeuverFromFfi(Pointer<Void> handle) {
  final result = List<Maneuver>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingCommonBindingslistofSdkRoutingManeuverIterator(handle);
  while (_heresdkRoutingCommonBindingslistofSdkRoutingManeuverIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingCommonBindingslistofSdkRoutingManeuverIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingManeuverFromFfi(_elementHandle));
    } finally {
      sdkRoutingManeuverReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingCommonBindingslistofSdkRoutingManeuverIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingCommonBindingslistofSdkRoutingManeuverIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingManeuverReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingCommonBindingslistofSdkRoutingManeuverReleaseHandle(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingManeuverCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Maneuver_create_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingManeuverReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Maneuver_release_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingManeuverGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Maneuver_get_value_nullable'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingManeuverToFfiNullable(List<Maneuver>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingCommonBindingslistofSdkRoutingManeuverToFfi(value);
  final result = _heresdkRoutingCommonBindingslistofSdkRoutingManeuverCreateHandleNullable(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingManeuverReleaseFfiHandle(_handle);
  return result;
}

List<Maneuver>? heresdkRoutingCommonBindingslistofSdkRoutingManeuverFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingCommonBindingslistofSdkRoutingManeuverGetValueNullable(handle);
  final result = heresdkRoutingCommonBindingslistofSdkRoutingManeuverFromFfi(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingManeuverReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingManeuverReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingCommonBindingslistofSdkRoutingManeuverReleaseHandleNullable(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingPaymentmethodCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_PaymentMethod_create_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingPaymentmethodReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_PaymentMethod_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingPaymentmethodInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_PaymentMethod_insert'));
final _heresdkRoutingCommonBindingslistofSdkRoutingPaymentmethodIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_PaymentMethod_iterator'));
final _heresdkRoutingCommonBindingslistofSdkRoutingPaymentmethodIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_PaymentMethod_iterator_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingPaymentmethodIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_PaymentMethod_iterator_is_valid'));
final _heresdkRoutingCommonBindingslistofSdkRoutingPaymentmethodIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_PaymentMethod_iterator_increment'));
final _heresdkRoutingCommonBindingslistofSdkRoutingPaymentmethodIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_PaymentMethod_iterator_get'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingPaymentmethodToFfi(List<PaymentMethod> value) {
  final _result = _heresdkRoutingCommonBindingslistofSdkRoutingPaymentmethodCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingPaymentmethodToFfi(element);
    _heresdkRoutingCommonBindingslistofSdkRoutingPaymentmethodInsert(_result, _elementHandle);
    sdkRoutingPaymentmethodReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<PaymentMethod> heresdkRoutingCommonBindingslistofSdkRoutingPaymentmethodFromFfi(Pointer<Void> handle) {
  final result = List<PaymentMethod>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingCommonBindingslistofSdkRoutingPaymentmethodIterator(handle);
  while (_heresdkRoutingCommonBindingslistofSdkRoutingPaymentmethodIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingCommonBindingslistofSdkRoutingPaymentmethodIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingPaymentmethodFromFfi(_elementHandle));
    } finally {
      sdkRoutingPaymentmethodReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingCommonBindingslistofSdkRoutingPaymentmethodIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingCommonBindingslistofSdkRoutingPaymentmethodIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingPaymentmethodReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingCommonBindingslistofSdkRoutingPaymentmethodReleaseHandle(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingPaymentmethodCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_PaymentMethod_create_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingPaymentmethodReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_PaymentMethod_release_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingPaymentmethodGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_PaymentMethod_get_value_nullable'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingPaymentmethodToFfiNullable(List<PaymentMethod>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingCommonBindingslistofSdkRoutingPaymentmethodToFfi(value);
  final result = _heresdkRoutingCommonBindingslistofSdkRoutingPaymentmethodCreateHandleNullable(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingPaymentmethodReleaseFfiHandle(_handle);
  return result;
}

List<PaymentMethod>? heresdkRoutingCommonBindingslistofSdkRoutingPaymentmethodFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingCommonBindingslistofSdkRoutingPaymentmethodGetValueNullable(handle);
  final result = heresdkRoutingCommonBindingslistofSdkRoutingPaymentmethodFromFfi(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingPaymentmethodReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingPaymentmethodReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingCommonBindingslistofSdkRoutingPaymentmethodReleaseHandleNullable(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingPostactionCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_PostAction_create_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingPostactionReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_PostAction_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingPostactionInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_PostAction_insert'));
final _heresdkRoutingCommonBindingslistofSdkRoutingPostactionIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_PostAction_iterator'));
final _heresdkRoutingCommonBindingslistofSdkRoutingPostactionIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_PostAction_iterator_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingPostactionIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_PostAction_iterator_is_valid'));
final _heresdkRoutingCommonBindingslistofSdkRoutingPostactionIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_PostAction_iterator_increment'));
final _heresdkRoutingCommonBindingslistofSdkRoutingPostactionIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_PostAction_iterator_get'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingPostactionToFfi(List<PostAction> value) {
  final _result = _heresdkRoutingCommonBindingslistofSdkRoutingPostactionCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingPostactionToFfi(element);
    _heresdkRoutingCommonBindingslistofSdkRoutingPostactionInsert(_result, _elementHandle);
    sdkRoutingPostactionReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<PostAction> heresdkRoutingCommonBindingslistofSdkRoutingPostactionFromFfi(Pointer<Void> handle) {
  final result = List<PostAction>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingCommonBindingslistofSdkRoutingPostactionIterator(handle);
  while (_heresdkRoutingCommonBindingslistofSdkRoutingPostactionIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingCommonBindingslistofSdkRoutingPostactionIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingPostactionFromFfi(_elementHandle));
    } finally {
      sdkRoutingPostactionReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingCommonBindingslistofSdkRoutingPostactionIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingCommonBindingslistofSdkRoutingPostactionIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingPostactionReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingCommonBindingslistofSdkRoutingPostactionReleaseHandle(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingPostactionCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_PostAction_create_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingPostactionReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_PostAction_release_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingPostactionGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_PostAction_get_value_nullable'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingPostactionToFfiNullable(List<PostAction>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingCommonBindingslistofSdkRoutingPostactionToFfi(value);
  final result = _heresdkRoutingCommonBindingslistofSdkRoutingPostactionCreateHandleNullable(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingPostactionReleaseFfiHandle(_handle);
  return result;
}

List<PostAction>? heresdkRoutingCommonBindingslistofSdkRoutingPostactionFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingCommonBindingslistofSdkRoutingPostactionGetValueNullable(handle);
  final result = heresdkRoutingCommonBindingslistofSdkRoutingPostactionFromFfi(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingPostactionReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingPostactionReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingCommonBindingslistofSdkRoutingPostactionReleaseHandleNullable(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingPreactionCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_PreAction_create_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingPreactionReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_PreAction_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingPreactionInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_PreAction_insert'));
final _heresdkRoutingCommonBindingslistofSdkRoutingPreactionIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_PreAction_iterator'));
final _heresdkRoutingCommonBindingslistofSdkRoutingPreactionIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_PreAction_iterator_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingPreactionIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_PreAction_iterator_is_valid'));
final _heresdkRoutingCommonBindingslistofSdkRoutingPreactionIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_PreAction_iterator_increment'));
final _heresdkRoutingCommonBindingslistofSdkRoutingPreactionIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_PreAction_iterator_get'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingPreactionToFfi(List<PreAction> value) {
  final _result = _heresdkRoutingCommonBindingslistofSdkRoutingPreactionCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingPreactionToFfi(element);
    _heresdkRoutingCommonBindingslistofSdkRoutingPreactionInsert(_result, _elementHandle);
    sdkRoutingPreactionReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<PreAction> heresdkRoutingCommonBindingslistofSdkRoutingPreactionFromFfi(Pointer<Void> handle) {
  final result = List<PreAction>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingCommonBindingslistofSdkRoutingPreactionIterator(handle);
  while (_heresdkRoutingCommonBindingslistofSdkRoutingPreactionIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingCommonBindingslistofSdkRoutingPreactionIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingPreactionFromFfi(_elementHandle));
    } finally {
      sdkRoutingPreactionReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingCommonBindingslistofSdkRoutingPreactionIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingCommonBindingslistofSdkRoutingPreactionIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingPreactionReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingCommonBindingslistofSdkRoutingPreactionReleaseHandle(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingPreactionCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_PreAction_create_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingPreactionReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_PreAction_release_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingPreactionGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_PreAction_get_value_nullable'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingPreactionToFfiNullable(List<PreAction>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingCommonBindingslistofSdkRoutingPreactionToFfi(value);
  final result = _heresdkRoutingCommonBindingslistofSdkRoutingPreactionCreateHandleNullable(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingPreactionReleaseFfiHandle(_handle);
  return result;
}

List<PreAction>? heresdkRoutingCommonBindingslistofSdkRoutingPreactionFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingCommonBindingslistofSdkRoutingPreactionGetValueNullable(handle);
  final result = heresdkRoutingCommonBindingslistofSdkRoutingPreactionFromFfi(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingPreactionReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingPreactionReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingCommonBindingslistofSdkRoutingPreactionReleaseHandleNullable(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingRoadfeaturesCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_RoadFeatures_create_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingRoadfeaturesReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_RoadFeatures_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingRoadfeaturesInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_RoadFeatures_insert'));
final _heresdkRoutingCommonBindingslistofSdkRoutingRoadfeaturesIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_RoadFeatures_iterator'));
final _heresdkRoutingCommonBindingslistofSdkRoutingRoadfeaturesIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_RoadFeatures_iterator_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingRoadfeaturesIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_RoadFeatures_iterator_is_valid'));
final _heresdkRoutingCommonBindingslistofSdkRoutingRoadfeaturesIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_RoadFeatures_iterator_increment'));
final _heresdkRoutingCommonBindingslistofSdkRoutingRoadfeaturesIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_RoadFeatures_iterator_get'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingRoadfeaturesToFfi(List<RoadFeatures> value) {
  final _result = _heresdkRoutingCommonBindingslistofSdkRoutingRoadfeaturesCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingRoadfeaturesToFfi(element);
    _heresdkRoutingCommonBindingslistofSdkRoutingRoadfeaturesInsert(_result, _elementHandle);
    sdkRoutingRoadfeaturesReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<RoadFeatures> heresdkRoutingCommonBindingslistofSdkRoutingRoadfeaturesFromFfi(Pointer<Void> handle) {
  final result = List<RoadFeatures>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingCommonBindingslistofSdkRoutingRoadfeaturesIterator(handle);
  while (_heresdkRoutingCommonBindingslistofSdkRoutingRoadfeaturesIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingCommonBindingslistofSdkRoutingRoadfeaturesIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingRoadfeaturesFromFfi(_elementHandle));
    } finally {
      sdkRoutingRoadfeaturesReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingCommonBindingslistofSdkRoutingRoadfeaturesIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingCommonBindingslistofSdkRoutingRoadfeaturesIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingRoadfeaturesReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingCommonBindingslistofSdkRoutingRoadfeaturesReleaseHandle(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingRoadfeaturesCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_RoadFeatures_create_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingRoadfeaturesReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_RoadFeatures_release_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingRoadfeaturesGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_RoadFeatures_get_value_nullable'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingRoadfeaturesToFfiNullable(List<RoadFeatures>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingCommonBindingslistofSdkRoutingRoadfeaturesToFfi(value);
  final result = _heresdkRoutingCommonBindingslistofSdkRoutingRoadfeaturesCreateHandleNullable(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingRoadfeaturesReleaseFfiHandle(_handle);
  return result;
}

List<RoadFeatures>? heresdkRoutingCommonBindingslistofSdkRoutingRoadfeaturesFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingCommonBindingslistofSdkRoutingRoadfeaturesGetValueNullable(handle);
  final result = heresdkRoutingCommonBindingslistofSdkRoutingRoadfeaturesFromFfi(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingRoadfeaturesReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingRoadfeaturesReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingCommonBindingslistofSdkRoutingRoadfeaturesReleaseHandleNullable(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingRouteCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Route_create_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingRouteReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Route_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingRouteInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Route_insert'));
final _heresdkRoutingCommonBindingslistofSdkRoutingRouteIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Route_iterator'));
final _heresdkRoutingCommonBindingslistofSdkRoutingRouteIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Route_iterator_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingRouteIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Route_iterator_is_valid'));
final _heresdkRoutingCommonBindingslistofSdkRoutingRouteIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Route_iterator_increment'));
final _heresdkRoutingCommonBindingslistofSdkRoutingRouteIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Route_iterator_get'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingRouteToFfi(List<Route> value) {
  final _result = _heresdkRoutingCommonBindingslistofSdkRoutingRouteCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingRouteToFfi(element);
    _heresdkRoutingCommonBindingslistofSdkRoutingRouteInsert(_result, _elementHandle);
    sdkRoutingRouteReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Route> heresdkRoutingCommonBindingslistofSdkRoutingRouteFromFfi(Pointer<Void> handle) {
  final result = List<Route>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingCommonBindingslistofSdkRoutingRouteIterator(handle);
  while (_heresdkRoutingCommonBindingslistofSdkRoutingRouteIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingCommonBindingslistofSdkRoutingRouteIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingRouteFromFfi(_elementHandle));
    } finally {
      sdkRoutingRouteReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingCommonBindingslistofSdkRoutingRouteIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingCommonBindingslistofSdkRoutingRouteIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingRouteReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingCommonBindingslistofSdkRoutingRouteReleaseHandle(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingRouteCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Route_create_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingRouteReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Route_release_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingRouteGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Route_get_value_nullable'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingRouteToFfiNullable(List<Route>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingCommonBindingslistofSdkRoutingRouteToFfi(value);
  final result = _heresdkRoutingCommonBindingslistofSdkRoutingRouteCreateHandleNullable(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingRouteReleaseFfiHandle(_handle);
  return result;
}

List<Route>? heresdkRoutingCommonBindingslistofSdkRoutingRouteFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingCommonBindingslistofSdkRoutingRouteGetValueNullable(handle);
  final result = heresdkRoutingCommonBindingslistofSdkRoutingRouteFromFfi(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingRouteReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingRouteReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingCommonBindingslistofSdkRoutingRouteReleaseHandleNullable(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingSectionCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Section_create_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingSectionReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Section_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingSectionInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Section_insert'));
final _heresdkRoutingCommonBindingslistofSdkRoutingSectionIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Section_iterator'));
final _heresdkRoutingCommonBindingslistofSdkRoutingSectionIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Section_iterator_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingSectionIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Section_iterator_is_valid'));
final _heresdkRoutingCommonBindingslistofSdkRoutingSectionIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Section_iterator_increment'));
final _heresdkRoutingCommonBindingslistofSdkRoutingSectionIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Section_iterator_get'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingSectionToFfi(List<Section> value) {
  final _result = _heresdkRoutingCommonBindingslistofSdkRoutingSectionCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingSectionToFfi(element);
    _heresdkRoutingCommonBindingslistofSdkRoutingSectionInsert(_result, _elementHandle);
    sdkRoutingSectionReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Section> heresdkRoutingCommonBindingslistofSdkRoutingSectionFromFfi(Pointer<Void> handle) {
  final result = List<Section>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingCommonBindingslistofSdkRoutingSectionIterator(handle);
  while (_heresdkRoutingCommonBindingslistofSdkRoutingSectionIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingCommonBindingslistofSdkRoutingSectionIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingSectionFromFfi(_elementHandle));
    } finally {
      sdkRoutingSectionReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingCommonBindingslistofSdkRoutingSectionIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingCommonBindingslistofSdkRoutingSectionIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingSectionReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingCommonBindingslistofSdkRoutingSectionReleaseHandle(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingSectionCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Section_create_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingSectionReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Section_release_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingSectionGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Section_get_value_nullable'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingSectionToFfiNullable(List<Section>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingCommonBindingslistofSdkRoutingSectionToFfi(value);
  final result = _heresdkRoutingCommonBindingslistofSdkRoutingSectionCreateHandleNullable(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingSectionReleaseFfiHandle(_handle);
  return result;
}

List<Section>? heresdkRoutingCommonBindingslistofSdkRoutingSectionFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingCommonBindingslistofSdkRoutingSectionGetValueNullable(handle);
  final result = heresdkRoutingCommonBindingslistofSdkRoutingSectionFromFfi(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingSectionReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingSectionReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingCommonBindingslistofSdkRoutingSectionReleaseHandleNullable(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingSectionnoticeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_SectionNotice_create_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingSectionnoticeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_SectionNotice_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingSectionnoticeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_SectionNotice_insert'));
final _heresdkRoutingCommonBindingslistofSdkRoutingSectionnoticeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_SectionNotice_iterator'));
final _heresdkRoutingCommonBindingslistofSdkRoutingSectionnoticeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_SectionNotice_iterator_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingSectionnoticeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_SectionNotice_iterator_is_valid'));
final _heresdkRoutingCommonBindingslistofSdkRoutingSectionnoticeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_SectionNotice_iterator_increment'));
final _heresdkRoutingCommonBindingslistofSdkRoutingSectionnoticeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_SectionNotice_iterator_get'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingSectionnoticeToFfi(List<SectionNotice> value) {
  final _result = _heresdkRoutingCommonBindingslistofSdkRoutingSectionnoticeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingSectionnoticeToFfi(element);
    _heresdkRoutingCommonBindingslistofSdkRoutingSectionnoticeInsert(_result, _elementHandle);
    sdkRoutingSectionnoticeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<SectionNotice> heresdkRoutingCommonBindingslistofSdkRoutingSectionnoticeFromFfi(Pointer<Void> handle) {
  final result = List<SectionNotice>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingCommonBindingslistofSdkRoutingSectionnoticeIterator(handle);
  while (_heresdkRoutingCommonBindingslistofSdkRoutingSectionnoticeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingCommonBindingslistofSdkRoutingSectionnoticeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingSectionnoticeFromFfi(_elementHandle));
    } finally {
      sdkRoutingSectionnoticeReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingCommonBindingslistofSdkRoutingSectionnoticeIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingCommonBindingslistofSdkRoutingSectionnoticeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingSectionnoticeReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingCommonBindingslistofSdkRoutingSectionnoticeReleaseHandle(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingSectionnoticeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_SectionNotice_create_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingSectionnoticeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_SectionNotice_release_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingSectionnoticeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_SectionNotice_get_value_nullable'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingSectionnoticeToFfiNullable(List<SectionNotice>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingCommonBindingslistofSdkRoutingSectionnoticeToFfi(value);
  final result = _heresdkRoutingCommonBindingslistofSdkRoutingSectionnoticeCreateHandleNullable(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingSectionnoticeReleaseFfiHandle(_handle);
  return result;
}

List<SectionNotice>? heresdkRoutingCommonBindingslistofSdkRoutingSectionnoticeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingCommonBindingslistofSdkRoutingSectionnoticeGetValueNullable(handle);
  final result = heresdkRoutingCommonBindingslistofSdkRoutingSectionnoticeFromFfi(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingSectionnoticeReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingSectionnoticeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingCommonBindingslistofSdkRoutingSectionnoticeReleaseHandleNullable(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingSegmentreferenceCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_SegmentReference_create_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingSegmentreferenceReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_SegmentReference_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingSegmentreferenceInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_SegmentReference_insert'));
final _heresdkRoutingCommonBindingslistofSdkRoutingSegmentreferenceIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_SegmentReference_iterator'));
final _heresdkRoutingCommonBindingslistofSdkRoutingSegmentreferenceIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_SegmentReference_iterator_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingSegmentreferenceIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_SegmentReference_iterator_is_valid'));
final _heresdkRoutingCommonBindingslistofSdkRoutingSegmentreferenceIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_SegmentReference_iterator_increment'));
final _heresdkRoutingCommonBindingslistofSdkRoutingSegmentreferenceIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_SegmentReference_iterator_get'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingSegmentreferenceToFfi(List<SegmentReference> value) {
  final _result = _heresdkRoutingCommonBindingslistofSdkRoutingSegmentreferenceCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingSegmentreferenceToFfi(element);
    _heresdkRoutingCommonBindingslistofSdkRoutingSegmentreferenceInsert(_result, _elementHandle);
    sdkRoutingSegmentreferenceReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<SegmentReference> heresdkRoutingCommonBindingslistofSdkRoutingSegmentreferenceFromFfi(Pointer<Void> handle) {
  final result = List<SegmentReference>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingCommonBindingslistofSdkRoutingSegmentreferenceIterator(handle);
  while (_heresdkRoutingCommonBindingslistofSdkRoutingSegmentreferenceIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingCommonBindingslistofSdkRoutingSegmentreferenceIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingSegmentreferenceFromFfi(_elementHandle));
    } finally {
      sdkRoutingSegmentreferenceReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingCommonBindingslistofSdkRoutingSegmentreferenceIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingCommonBindingslistofSdkRoutingSegmentreferenceIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingSegmentreferenceReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingCommonBindingslistofSdkRoutingSegmentreferenceReleaseHandle(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingSegmentreferenceCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_SegmentReference_create_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingSegmentreferenceReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_SegmentReference_release_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingSegmentreferenceGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_SegmentReference_get_value_nullable'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingSegmentreferenceToFfiNullable(List<SegmentReference>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingCommonBindingslistofSdkRoutingSegmentreferenceToFfi(value);
  final result = _heresdkRoutingCommonBindingslistofSdkRoutingSegmentreferenceCreateHandleNullable(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingSegmentreferenceReleaseFfiHandle(_handle);
  return result;
}

List<SegmentReference>? heresdkRoutingCommonBindingslistofSdkRoutingSegmentreferenceFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingCommonBindingslistofSdkRoutingSegmentreferenceGetValueNullable(handle);
  final result = heresdkRoutingCommonBindingslistofSdkRoutingSegmentreferenceFromFfi(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingSegmentreferenceReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingSegmentreferenceReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingCommonBindingslistofSdkRoutingSegmentreferenceReleaseHandleNullable(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingSpanCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Span_create_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingSpanReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Span_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingSpanInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Span_insert'));
final _heresdkRoutingCommonBindingslistofSdkRoutingSpanIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Span_iterator'));
final _heresdkRoutingCommonBindingslistofSdkRoutingSpanIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Span_iterator_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingSpanIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Span_iterator_is_valid'));
final _heresdkRoutingCommonBindingslistofSdkRoutingSpanIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Span_iterator_increment'));
final _heresdkRoutingCommonBindingslistofSdkRoutingSpanIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Span_iterator_get'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingSpanToFfi(List<Span> value) {
  final _result = _heresdkRoutingCommonBindingslistofSdkRoutingSpanCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingSpanToFfi(element);
    _heresdkRoutingCommonBindingslistofSdkRoutingSpanInsert(_result, _elementHandle);
    sdkRoutingSpanReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Span> heresdkRoutingCommonBindingslistofSdkRoutingSpanFromFfi(Pointer<Void> handle) {
  final result = List<Span>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingCommonBindingslistofSdkRoutingSpanIterator(handle);
  while (_heresdkRoutingCommonBindingslistofSdkRoutingSpanIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingCommonBindingslistofSdkRoutingSpanIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingSpanFromFfi(_elementHandle));
    } finally {
      sdkRoutingSpanReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingCommonBindingslistofSdkRoutingSpanIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingCommonBindingslistofSdkRoutingSpanIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingSpanReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingCommonBindingslistofSdkRoutingSpanReleaseHandle(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingSpanCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Span_create_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingSpanReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Span_release_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingSpanGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Span_get_value_nullable'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingSpanToFfiNullable(List<Span>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingCommonBindingslistofSdkRoutingSpanToFfi(value);
  final result = _heresdkRoutingCommonBindingslistofSdkRoutingSpanCreateHandleNullable(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingSpanReleaseFfiHandle(_handle);
  return result;
}

List<Span>? heresdkRoutingCommonBindingslistofSdkRoutingSpanFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingCommonBindingslistofSdkRoutingSpanGetValueNullable(handle);
  final result = heresdkRoutingCommonBindingslistofSdkRoutingSpanFromFfi(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingSpanReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingSpanReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingCommonBindingslistofSdkRoutingSpanReleaseHandleNullable(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingTollCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Toll_create_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTollReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Toll_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTollInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Toll_insert'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTollIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Toll_iterator'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTollIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Toll_iterator_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTollIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Toll_iterator_is_valid'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTollIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Toll_iterator_increment'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTollIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Toll_iterator_get'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingTollToFfi(List<Toll> value) {
  final _result = _heresdkRoutingCommonBindingslistofSdkRoutingTollCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingTollToFfi(element);
    _heresdkRoutingCommonBindingslistofSdkRoutingTollInsert(_result, _elementHandle);
    sdkRoutingTollReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Toll> heresdkRoutingCommonBindingslistofSdkRoutingTollFromFfi(Pointer<Void> handle) {
  final result = List<Toll>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingCommonBindingslistofSdkRoutingTollIterator(handle);
  while (_heresdkRoutingCommonBindingslistofSdkRoutingTollIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingCommonBindingslistofSdkRoutingTollIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingTollFromFfi(_elementHandle));
    } finally {
      sdkRoutingTollReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingCommonBindingslistofSdkRoutingTollIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingCommonBindingslistofSdkRoutingTollIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingTollReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingCommonBindingslistofSdkRoutingTollReleaseHandle(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingTollCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Toll_create_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTollReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Toll_release_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTollGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Toll_get_value_nullable'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingTollToFfiNullable(List<Toll>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingCommonBindingslistofSdkRoutingTollToFfi(value);
  final result = _heresdkRoutingCommonBindingslistofSdkRoutingTollCreateHandleNullable(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingTollReleaseFfiHandle(_handle);
  return result;
}

List<Toll>? heresdkRoutingCommonBindingslistofSdkRoutingTollFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingCommonBindingslistofSdkRoutingTollGetValueNullable(handle);
  final result = heresdkRoutingCommonBindingslistofSdkRoutingTollFromFfi(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingTollReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingTollReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingCommonBindingslistofSdkRoutingTollReleaseHandleNullable(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingTollfareCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TollFare_create_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTollfareReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TollFare_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTollfareInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TollFare_insert'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTollfareIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TollFare_iterator'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTollfareIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TollFare_iterator_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTollfareIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TollFare_iterator_is_valid'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTollfareIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TollFare_iterator_increment'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTollfareIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TollFare_iterator_get'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingTollfareToFfi(List<TollFare> value) {
  final _result = _heresdkRoutingCommonBindingslistofSdkRoutingTollfareCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingTollfareToFfi(element);
    _heresdkRoutingCommonBindingslistofSdkRoutingTollfareInsert(_result, _elementHandle);
    sdkRoutingTollfareReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<TollFare> heresdkRoutingCommonBindingslistofSdkRoutingTollfareFromFfi(Pointer<Void> handle) {
  final result = List<TollFare>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingCommonBindingslistofSdkRoutingTollfareIterator(handle);
  while (_heresdkRoutingCommonBindingslistofSdkRoutingTollfareIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingCommonBindingslistofSdkRoutingTollfareIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingTollfareFromFfi(_elementHandle));
    } finally {
      sdkRoutingTollfareReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingCommonBindingslistofSdkRoutingTollfareIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingCommonBindingslistofSdkRoutingTollfareIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingTollfareReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingCommonBindingslistofSdkRoutingTollfareReleaseHandle(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingTollfareCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TollFare_create_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTollfareReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TollFare_release_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTollfareGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TollFare_get_value_nullable'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingTollfareToFfiNullable(List<TollFare>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingCommonBindingslistofSdkRoutingTollfareToFfi(value);
  final result = _heresdkRoutingCommonBindingslistofSdkRoutingTollfareCreateHandleNullable(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingTollfareReleaseFfiHandle(_handle);
  return result;
}

List<TollFare>? heresdkRoutingCommonBindingslistofSdkRoutingTollfareFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingCommonBindingslistofSdkRoutingTollfareGetValueNullable(handle);
  final result = heresdkRoutingCommonBindingslistofSdkRoutingTollfareFromFfi(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingTollfareReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingTollfareReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingCommonBindingslistofSdkRoutingTollfareReleaseHandleNullable(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingTrafficspeedCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TrafficSpeed_create_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTrafficspeedReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TrafficSpeed_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTrafficspeedInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TrafficSpeed_insert'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTrafficspeedIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TrafficSpeed_iterator'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTrafficspeedIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TrafficSpeed_iterator_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTrafficspeedIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TrafficSpeed_iterator_is_valid'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTrafficspeedIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TrafficSpeed_iterator_increment'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTrafficspeedIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TrafficSpeed_iterator_get'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingTrafficspeedToFfi(List<TrafficSpeed> value) {
  final _result = _heresdkRoutingCommonBindingslistofSdkRoutingTrafficspeedCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingTrafficspeedToFfi(element);
    _heresdkRoutingCommonBindingslistofSdkRoutingTrafficspeedInsert(_result, _elementHandle);
    sdkRoutingTrafficspeedReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<TrafficSpeed> heresdkRoutingCommonBindingslistofSdkRoutingTrafficspeedFromFfi(Pointer<Void> handle) {
  final result = List<TrafficSpeed>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingCommonBindingslistofSdkRoutingTrafficspeedIterator(handle);
  while (_heresdkRoutingCommonBindingslistofSdkRoutingTrafficspeedIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingCommonBindingslistofSdkRoutingTrafficspeedIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingTrafficspeedFromFfi(_elementHandle));
    } finally {
      sdkRoutingTrafficspeedReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingCommonBindingslistofSdkRoutingTrafficspeedIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingCommonBindingslistofSdkRoutingTrafficspeedIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingTrafficspeedReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingCommonBindingslistofSdkRoutingTrafficspeedReleaseHandle(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingTrafficspeedCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TrafficSpeed_create_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTrafficspeedReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TrafficSpeed_release_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTrafficspeedGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TrafficSpeed_get_value_nullable'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingTrafficspeedToFfiNullable(List<TrafficSpeed>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingCommonBindingslistofSdkRoutingTrafficspeedToFfi(value);
  final result = _heresdkRoutingCommonBindingslistofSdkRoutingTrafficspeedCreateHandleNullable(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingTrafficspeedReleaseFfiHandle(_handle);
  return result;
}

List<TrafficSpeed>? heresdkRoutingCommonBindingslistofSdkRoutingTrafficspeedFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingCommonBindingslistofSdkRoutingTrafficspeedGetValueNullable(handle);
  final result = heresdkRoutingCommonBindingslistofSdkRoutingTrafficspeedFromFfi(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingTrafficspeedReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingTrafficspeedReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingCommonBindingslistofSdkRoutingTrafficspeedReleaseHandleNullable(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingTransitincidentCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TransitIncident_create_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTransitincidentReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TransitIncident_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTransitincidentInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TransitIncident_insert'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTransitincidentIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TransitIncident_iterator'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTransitincidentIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TransitIncident_iterator_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTransitincidentIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TransitIncident_iterator_is_valid'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTransitincidentIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TransitIncident_iterator_increment'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTransitincidentIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TransitIncident_iterator_get'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingTransitincidentToFfi(List<TransitIncident> value) {
  final _result = _heresdkRoutingCommonBindingslistofSdkRoutingTransitincidentCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingTransitincidentToFfi(element);
    _heresdkRoutingCommonBindingslistofSdkRoutingTransitincidentInsert(_result, _elementHandle);
    sdkRoutingTransitincidentReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<TransitIncident> heresdkRoutingCommonBindingslistofSdkRoutingTransitincidentFromFfi(Pointer<Void> handle) {
  final result = List<TransitIncident>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingCommonBindingslistofSdkRoutingTransitincidentIterator(handle);
  while (_heresdkRoutingCommonBindingslistofSdkRoutingTransitincidentIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingCommonBindingslistofSdkRoutingTransitincidentIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingTransitincidentFromFfi(_elementHandle));
    } finally {
      sdkRoutingTransitincidentReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingCommonBindingslistofSdkRoutingTransitincidentIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingCommonBindingslistofSdkRoutingTransitincidentIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingTransitincidentReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingCommonBindingslistofSdkRoutingTransitincidentReleaseHandle(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingTransitincidentCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TransitIncident_create_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTransitincidentReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TransitIncident_release_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTransitincidentGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TransitIncident_get_value_nullable'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingTransitincidentToFfiNullable(List<TransitIncident>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingCommonBindingslistofSdkRoutingTransitincidentToFfi(value);
  final result = _heresdkRoutingCommonBindingslistofSdkRoutingTransitincidentCreateHandleNullable(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingTransitincidentReleaseFfiHandle(_handle);
  return result;
}

List<TransitIncident>? heresdkRoutingCommonBindingslistofSdkRoutingTransitincidentFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingCommonBindingslistofSdkRoutingTransitincidentGetValueNullable(handle);
  final result = heresdkRoutingCommonBindingslistofSdkRoutingTransitincidentFromFfi(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingTransitincidentReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingTransitincidentReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingCommonBindingslistofSdkRoutingTransitincidentReleaseHandleNullable(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingTransitmodeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TransitMode_create_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTransitmodeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TransitMode_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTransitmodeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TransitMode_insert'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTransitmodeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TransitMode_iterator'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTransitmodeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TransitMode_iterator_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTransitmodeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TransitMode_iterator_is_valid'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTransitmodeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TransitMode_iterator_increment'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTransitmodeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TransitMode_iterator_get'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingTransitmodeToFfi(List<TransitMode> value) {
  final _result = _heresdkRoutingCommonBindingslistofSdkRoutingTransitmodeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingTransitmodeToFfi(element);
    _heresdkRoutingCommonBindingslistofSdkRoutingTransitmodeInsert(_result, _elementHandle);
    sdkRoutingTransitmodeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<TransitMode> heresdkRoutingCommonBindingslistofSdkRoutingTransitmodeFromFfi(Pointer<Void> handle) {
  final result = List<TransitMode>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingCommonBindingslistofSdkRoutingTransitmodeIterator(handle);
  while (_heresdkRoutingCommonBindingslistofSdkRoutingTransitmodeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingCommonBindingslistofSdkRoutingTransitmodeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingTransitmodeFromFfi(_elementHandle));
    } finally {
      sdkRoutingTransitmodeReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingCommonBindingslistofSdkRoutingTransitmodeIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingCommonBindingslistofSdkRoutingTransitmodeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingTransitmodeReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingCommonBindingslistofSdkRoutingTransitmodeReleaseHandle(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingTransitmodeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TransitMode_create_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTransitmodeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TransitMode_release_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTransitmodeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TransitMode_get_value_nullable'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingTransitmodeToFfiNullable(List<TransitMode>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingCommonBindingslistofSdkRoutingTransitmodeToFfi(value);
  final result = _heresdkRoutingCommonBindingslistofSdkRoutingTransitmodeCreateHandleNullable(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingTransitmodeReleaseFfiHandle(_handle);
  return result;
}

List<TransitMode>? heresdkRoutingCommonBindingslistofSdkRoutingTransitmodeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingCommonBindingslistofSdkRoutingTransitmodeGetValueNullable(handle);
  final result = heresdkRoutingCommonBindingslistofSdkRoutingTransitmodeFromFfi(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingTransitmodeReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingTransitmodeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingCommonBindingslistofSdkRoutingTransitmodeReleaseHandleNullable(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingTransitstopCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TransitStop_create_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTransitstopReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TransitStop_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTransitstopInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TransitStop_insert'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTransitstopIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TransitStop_iterator'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTransitstopIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TransitStop_iterator_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTransitstopIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TransitStop_iterator_is_valid'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTransitstopIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TransitStop_iterator_increment'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTransitstopIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TransitStop_iterator_get'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingTransitstopToFfi(List<TransitStop> value) {
  final _result = _heresdkRoutingCommonBindingslistofSdkRoutingTransitstopCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingTransitstopToFfi(element);
    _heresdkRoutingCommonBindingslistofSdkRoutingTransitstopInsert(_result, _elementHandle);
    sdkRoutingTransitstopReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<TransitStop> heresdkRoutingCommonBindingslistofSdkRoutingTransitstopFromFfi(Pointer<Void> handle) {
  final result = List<TransitStop>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingCommonBindingslistofSdkRoutingTransitstopIterator(handle);
  while (_heresdkRoutingCommonBindingslistofSdkRoutingTransitstopIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingCommonBindingslistofSdkRoutingTransitstopIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingTransitstopFromFfi(_elementHandle));
    } finally {
      sdkRoutingTransitstopReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingCommonBindingslistofSdkRoutingTransitstopIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingCommonBindingslistofSdkRoutingTransitstopIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingTransitstopReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingCommonBindingslistofSdkRoutingTransitstopReleaseHandle(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingTransitstopCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TransitStop_create_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTransitstopReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TransitStop_release_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTransitstopGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TransitStop_get_value_nullable'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingTransitstopToFfiNullable(List<TransitStop>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingCommonBindingslistofSdkRoutingTransitstopToFfi(value);
  final result = _heresdkRoutingCommonBindingslistofSdkRoutingTransitstopCreateHandleNullable(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingTransitstopReleaseFfiHandle(_handle);
  return result;
}

List<TransitStop>? heresdkRoutingCommonBindingslistofSdkRoutingTransitstopFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingCommonBindingslistofSdkRoutingTransitstopGetValueNullable(handle);
  final result = heresdkRoutingCommonBindingslistofSdkRoutingTransitstopFromFfi(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingTransitstopReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingTransitstopReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingCommonBindingslistofSdkRoutingTransitstopReleaseHandleNullable(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingWaypointCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Waypoint_create_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingWaypointReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Waypoint_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingWaypointInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Waypoint_insert'));
final _heresdkRoutingCommonBindingslistofSdkRoutingWaypointIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Waypoint_iterator'));
final _heresdkRoutingCommonBindingslistofSdkRoutingWaypointIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Waypoint_iterator_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingWaypointIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Waypoint_iterator_is_valid'));
final _heresdkRoutingCommonBindingslistofSdkRoutingWaypointIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Waypoint_iterator_increment'));
final _heresdkRoutingCommonBindingslistofSdkRoutingWaypointIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Waypoint_iterator_get'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingWaypointToFfi(List<Waypoint> value) {
  final _result = _heresdkRoutingCommonBindingslistofSdkRoutingWaypointCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingWaypointToFfi(element);
    _heresdkRoutingCommonBindingslistofSdkRoutingWaypointInsert(_result, _elementHandle);
    sdkRoutingWaypointReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Waypoint> heresdkRoutingCommonBindingslistofSdkRoutingWaypointFromFfi(Pointer<Void> handle) {
  final result = List<Waypoint>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingCommonBindingslistofSdkRoutingWaypointIterator(handle);
  while (_heresdkRoutingCommonBindingslistofSdkRoutingWaypointIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingCommonBindingslistofSdkRoutingWaypointIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingWaypointFromFfi(_elementHandle));
    } finally {
      sdkRoutingWaypointReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingCommonBindingslistofSdkRoutingWaypointIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingCommonBindingslistofSdkRoutingWaypointIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingWaypointReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingCommonBindingslistofSdkRoutingWaypointReleaseHandle(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingWaypointCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Waypoint_create_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingWaypointReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Waypoint_release_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingWaypointGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Waypoint_get_value_nullable'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingWaypointToFfiNullable(List<Waypoint>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingCommonBindingslistofSdkRoutingWaypointToFfi(value);
  final result = _heresdkRoutingCommonBindingslistofSdkRoutingWaypointCreateHandleNullable(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingWaypointReleaseFfiHandle(_handle);
  return result;
}

List<Waypoint>? heresdkRoutingCommonBindingslistofSdkRoutingWaypointFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingCommonBindingslistofSdkRoutingWaypointGetValueNullable(handle);
  final result = heresdkRoutingCommonBindingslistofSdkRoutingWaypointFromFfi(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingWaypointReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingWaypointReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingCommonBindingslistofSdkRoutingWaypointReleaseHandleNullable(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingZonecategoryCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_ZoneCategory_create_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingZonecategoryReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_ZoneCategory_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingZonecategoryInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_ZoneCategory_insert'));
final _heresdkRoutingCommonBindingslistofSdkRoutingZonecategoryIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_ZoneCategory_iterator'));
final _heresdkRoutingCommonBindingslistofSdkRoutingZonecategoryIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_ZoneCategory_iterator_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingZonecategoryIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_ZoneCategory_iterator_is_valid'));
final _heresdkRoutingCommonBindingslistofSdkRoutingZonecategoryIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_ZoneCategory_iterator_increment'));
final _heresdkRoutingCommonBindingslistofSdkRoutingZonecategoryIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_ZoneCategory_iterator_get'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingZonecategoryToFfi(List<ZoneCategory> value) {
  final _result = _heresdkRoutingCommonBindingslistofSdkRoutingZonecategoryCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingZonecategoryToFfi(element);
    _heresdkRoutingCommonBindingslistofSdkRoutingZonecategoryInsert(_result, _elementHandle);
    sdkRoutingZonecategoryReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<ZoneCategory> heresdkRoutingCommonBindingslistofSdkRoutingZonecategoryFromFfi(Pointer<Void> handle) {
  final result = List<ZoneCategory>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingCommonBindingslistofSdkRoutingZonecategoryIterator(handle);
  while (_heresdkRoutingCommonBindingslistofSdkRoutingZonecategoryIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingCommonBindingslistofSdkRoutingZonecategoryIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingZonecategoryFromFfi(_elementHandle));
    } finally {
      sdkRoutingZonecategoryReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingCommonBindingslistofSdkRoutingZonecategoryIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingCommonBindingslistofSdkRoutingZonecategoryIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingZonecategoryReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingCommonBindingslistofSdkRoutingZonecategoryReleaseHandle(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingZonecategoryCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_ZoneCategory_create_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingZonecategoryReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_ZoneCategory_release_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingZonecategoryGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_ZoneCategory_get_value_nullable'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingZonecategoryToFfiNullable(List<ZoneCategory>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingCommonBindingslistofSdkRoutingZonecategoryToFfi(value);
  final result = _heresdkRoutingCommonBindingslistofSdkRoutingZonecategoryCreateHandleNullable(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingZonecategoryReleaseFfiHandle(_handle);
  return result;
}

List<ZoneCategory>? heresdkRoutingCommonBindingslistofSdkRoutingZonecategoryFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingCommonBindingslistofSdkRoutingZonecategoryGetValueNullable(handle);
  final result = heresdkRoutingCommonBindingslistofSdkRoutingZonecategoryFromFfi(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingZonecategoryReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingZonecategoryReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingCommonBindingslistofSdkRoutingZonecategoryReleaseHandleNullable(handle);

final _heresdkRoutingCommonBindingsmapofDoubleToDoubleCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_common_bindingsMapOf_Double_to_Double_create_handle'));
final _heresdkRoutingCommonBindingsmapofDoubleToDoubleReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsMapOf_Double_to_Double_release_handle'));
final _heresdkRoutingCommonBindingsmapofDoubleToDoublePut = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Double, Double),
    void Function(Pointer<Void>, double, double)
  >('here_sdk_heresdk_routing_common_bindingsMapOf_Double_to_Double_put'));
final _heresdkRoutingCommonBindingsmapofDoubleToDoubleIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsMapOf_Double_to_Double_iterator'));
final _heresdkRoutingCommonBindingsmapofDoubleToDoubleIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsMapOf_Double_to_Double_iterator_release_handle'));
final _heresdkRoutingCommonBindingsmapofDoubleToDoubleIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsMapOf_Double_to_Double_iterator_is_valid'));
final _heresdkRoutingCommonBindingsmapofDoubleToDoubleIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsMapOf_Double_to_Double_iterator_increment'));
final _heresdkRoutingCommonBindingsmapofDoubleToDoubleIteratorGetKey = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Double Function(Pointer<Void>),
    double Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsMapOf_Double_to_Double_iterator_get_key'));
final _heresdkRoutingCommonBindingsmapofDoubleToDoubleIteratorGetValue = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Double Function(Pointer<Void>),
    double Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsMapOf_Double_to_Double_iterator_get_value'));

Pointer<Void> heresdkRoutingCommonBindingsmapofDoubleToDoubleToFfi(Map<double, double> value) {
  final _result = _heresdkRoutingCommonBindingsmapofDoubleToDoubleCreateHandle();
  for (final entry in value.entries) {
    final _keyHandle = (entry.key);
    final _valueHandle = (entry.value);
    _heresdkRoutingCommonBindingsmapofDoubleToDoublePut(_result, _keyHandle, _valueHandle);
    
    
  }
  return _result;
}

Map<double, double> heresdkRoutingCommonBindingsmapofDoubleToDoubleFromFfi(Pointer<Void> handle) {
  final result = Map<double, double>();
  final _iteratorHandle = _heresdkRoutingCommonBindingsmapofDoubleToDoubleIterator(handle);
  while (_heresdkRoutingCommonBindingsmapofDoubleToDoubleIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _keyHandle = _heresdkRoutingCommonBindingsmapofDoubleToDoubleIteratorGetKey(_iteratorHandle);
    final _valueHandle = _heresdkRoutingCommonBindingsmapofDoubleToDoubleIteratorGetValue(_iteratorHandle);
    try {
      result[(_keyHandle)] =
        (_valueHandle);
    } finally {
      
      
    }
    _heresdkRoutingCommonBindingsmapofDoubleToDoubleIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingCommonBindingsmapofDoubleToDoubleIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingCommonBindingsmapofDoubleToDoubleReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingCommonBindingsmapofDoubleToDoubleReleaseHandle(handle);

final _heresdkRoutingCommonBindingsmapofDoubleToDoubleCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsMapOf_Double_to_Double_create_handle_nullable'));
final _heresdkRoutingCommonBindingsmapofDoubleToDoubleReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsMapOf_Double_to_Double_release_handle_nullable'));
final _heresdkRoutingCommonBindingsmapofDoubleToDoubleGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsMapOf_Double_to_Double_get_value_nullable'));

Pointer<Void> heresdkRoutingCommonBindingsmapofDoubleToDoubleToFfiNullable(Map<double, double>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingCommonBindingsmapofDoubleToDoubleToFfi(value);
  final result = _heresdkRoutingCommonBindingsmapofDoubleToDoubleCreateHandleNullable(_handle);
  heresdkRoutingCommonBindingsmapofDoubleToDoubleReleaseFfiHandle(_handle);
  return result;
}

Map<double, double>? heresdkRoutingCommonBindingsmapofDoubleToDoubleFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingCommonBindingsmapofDoubleToDoubleGetValueNullable(handle);
  final result = heresdkRoutingCommonBindingsmapofDoubleToDoubleFromFfi(_handle);
  heresdkRoutingCommonBindingsmapofDoubleToDoubleReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingCommonBindingsmapofDoubleToDoubleReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingCommonBindingsmapofDoubleToDoubleReleaseHandleNullable(handle);

final _heresdkRoutingCommonBindingsmapofIntToDoubleCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_common_bindingsMapOf_Int_to_Double_create_handle'));
final _heresdkRoutingCommonBindingsmapofIntToDoubleReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsMapOf_Int_to_Double_release_handle'));
final _heresdkRoutingCommonBindingsmapofIntToDoublePut = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Int32, Double),
    void Function(Pointer<Void>, int, double)
  >('here_sdk_heresdk_routing_common_bindingsMapOf_Int_to_Double_put'));
final _heresdkRoutingCommonBindingsmapofIntToDoubleIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsMapOf_Int_to_Double_iterator'));
final _heresdkRoutingCommonBindingsmapofIntToDoubleIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsMapOf_Int_to_Double_iterator_release_handle'));
final _heresdkRoutingCommonBindingsmapofIntToDoubleIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsMapOf_Int_to_Double_iterator_is_valid'));
final _heresdkRoutingCommonBindingsmapofIntToDoubleIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsMapOf_Int_to_Double_iterator_increment'));
final _heresdkRoutingCommonBindingsmapofIntToDoubleIteratorGetKey = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsMapOf_Int_to_Double_iterator_get_key'));
final _heresdkRoutingCommonBindingsmapofIntToDoubleIteratorGetValue = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Double Function(Pointer<Void>),
    double Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsMapOf_Int_to_Double_iterator_get_value'));

Pointer<Void> heresdkRoutingCommonBindingsmapofIntToDoubleToFfi(Map<int, double> value) {
  final _result = _heresdkRoutingCommonBindingsmapofIntToDoubleCreateHandle();
  for (final entry in value.entries) {
    final _keyHandle = (entry.key);
    final _valueHandle = (entry.value);
    _heresdkRoutingCommonBindingsmapofIntToDoublePut(_result, _keyHandle, _valueHandle);
    
    
  }
  return _result;
}

Map<int, double> heresdkRoutingCommonBindingsmapofIntToDoubleFromFfi(Pointer<Void> handle) {
  final result = Map<int, double>();
  final _iteratorHandle = _heresdkRoutingCommonBindingsmapofIntToDoubleIterator(handle);
  while (_heresdkRoutingCommonBindingsmapofIntToDoubleIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _keyHandle = _heresdkRoutingCommonBindingsmapofIntToDoubleIteratorGetKey(_iteratorHandle);
    final _valueHandle = _heresdkRoutingCommonBindingsmapofIntToDoubleIteratorGetValue(_iteratorHandle);
    try {
      result[(_keyHandle)] =
        (_valueHandle);
    } finally {
      
      
    }
    _heresdkRoutingCommonBindingsmapofIntToDoubleIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingCommonBindingsmapofIntToDoubleIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingCommonBindingsmapofIntToDoubleReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingCommonBindingsmapofIntToDoubleReleaseHandle(handle);

final _heresdkRoutingCommonBindingsmapofIntToDoubleCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsMapOf_Int_to_Double_create_handle_nullable'));
final _heresdkRoutingCommonBindingsmapofIntToDoubleReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsMapOf_Int_to_Double_release_handle_nullable'));
final _heresdkRoutingCommonBindingsmapofIntToDoubleGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsMapOf_Int_to_Double_get_value_nullable'));

Pointer<Void> heresdkRoutingCommonBindingsmapofIntToDoubleToFfiNullable(Map<int, double>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingCommonBindingsmapofIntToDoubleToFfi(value);
  final result = _heresdkRoutingCommonBindingsmapofIntToDoubleCreateHandleNullable(_handle);
  heresdkRoutingCommonBindingsmapofIntToDoubleReleaseFfiHandle(_handle);
  return result;
}

Map<int, double>? heresdkRoutingCommonBindingsmapofIntToDoubleFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingCommonBindingsmapofIntToDoubleGetValueNullable(handle);
  final result = heresdkRoutingCommonBindingsmapofIntToDoubleFromFfi(_handle);
  heresdkRoutingCommonBindingsmapofIntToDoubleReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingCommonBindingsmapofIntToDoubleReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingCommonBindingsmapofIntToDoubleReleaseHandleNullable(handle);


// Copyright (c) 2018-2021 HERE Global B.V. and its affiliate(s).
// All rights reserved.
//
// This software and other materials contain proprietary information
// controlled by HERE and are protected by applicable copyright legislation.
// Any use and utilization of this software and other materials and
// disclosure to any third parties is conditional upon having a separate
// agreement with HERE for the access, use, utilization or disclosure of this
// software. In the absence of such agreement, the use of the software is not
// allowed.
//




































final _heresdkRoutingIsolineBindingslistofIntCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_Int_create_handle'));
final _heresdkRoutingIsolineBindingslistofIntReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_Int_release_handle'));
final _heresdkRoutingIsolineBindingslistofIntInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Int32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_Int_insert'));
final _heresdkRoutingIsolineBindingslistofIntIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_Int_iterator'));
final _heresdkRoutingIsolineBindingslistofIntIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_Int_iterator_release_handle'));
final _heresdkRoutingIsolineBindingslistofIntIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_Int_iterator_is_valid'));
final _heresdkRoutingIsolineBindingslistofIntIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_Int_iterator_increment'));
final _heresdkRoutingIsolineBindingslistofIntIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_Int_iterator_get'));

Pointer<Void> heresdkRoutingIsolineBindingslistofIntToFfi(List<int> value) {
  final _result = _heresdkRoutingIsolineBindingslistofIntCreateHandle();
  for (final element in value) {
    final _elementHandle = (element);
    _heresdkRoutingIsolineBindingslistofIntInsert(_result, _elementHandle);
    
  }
  return _result;
}

List<int> heresdkRoutingIsolineBindingslistofIntFromFfi(Pointer<Void> handle) {
  final result = List<int>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingIsolineBindingslistofIntIterator(handle);
  while (_heresdkRoutingIsolineBindingslistofIntIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingIsolineBindingslistofIntIteratorGet(_iteratorHandle);
    try {
      result.add((_elementHandle));
    } finally {
      
    }
    _heresdkRoutingIsolineBindingslistofIntIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingIsolineBindingslistofIntIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingIsolineBindingslistofIntReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingIsolineBindingslistofIntReleaseHandle(handle);

final _heresdkRoutingIsolineBindingslistofIntCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_Int_create_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofIntReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_Int_release_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofIntGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_Int_get_value_nullable'));

Pointer<Void> heresdkRoutingIsolineBindingslistofIntToFfiNullable(List<int>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingIsolineBindingslistofIntToFfi(value);
  final result = _heresdkRoutingIsolineBindingslistofIntCreateHandleNullable(_handle);
  heresdkRoutingIsolineBindingslistofIntReleaseFfiHandle(_handle);
  return result;
}

List<int>? heresdkRoutingIsolineBindingslistofIntFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingIsolineBindingslistofIntGetValueNullable(handle);
  final result = heresdkRoutingIsolineBindingslistofIntFromFfi(_handle);
  heresdkRoutingIsolineBindingslistofIntReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingIsolineBindingslistofIntReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingIsolineBindingslistofIntReleaseHandleNullable(handle);

final _heresdkRoutingIsolineBindingslistofLocaleCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_Locale_create_handle'));
final _heresdkRoutingIsolineBindingslistofLocaleReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_Locale_release_handle'));
final _heresdkRoutingIsolineBindingslistofLocaleInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_Locale_insert'));
final _heresdkRoutingIsolineBindingslistofLocaleIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_Locale_iterator'));
final _heresdkRoutingIsolineBindingslistofLocaleIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_Locale_iterator_release_handle'));
final _heresdkRoutingIsolineBindingslistofLocaleIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_Locale_iterator_is_valid'));
final _heresdkRoutingIsolineBindingslistofLocaleIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_Locale_iterator_increment'));
final _heresdkRoutingIsolineBindingslistofLocaleIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_Locale_iterator_get'));

Pointer<Void> heresdkRoutingIsolineBindingslistofLocaleToFfi(List<Locale> value) {
  final _result = _heresdkRoutingIsolineBindingslistofLocaleCreateHandle();
  for (final element in value) {
    final _elementHandle = localeToFfi(element);
    _heresdkRoutingIsolineBindingslistofLocaleInsert(_result, _elementHandle);
    localeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Locale> heresdkRoutingIsolineBindingslistofLocaleFromFfi(Pointer<Void> handle) {
  final result = List<Locale>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingIsolineBindingslistofLocaleIterator(handle);
  while (_heresdkRoutingIsolineBindingslistofLocaleIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingIsolineBindingslistofLocaleIteratorGet(_iteratorHandle);
    try {
      result.add(localeFromFfi(_elementHandle));
    } finally {
      localeReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingIsolineBindingslistofLocaleIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingIsolineBindingslistofLocaleIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingIsolineBindingslistofLocaleReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingIsolineBindingslistofLocaleReleaseHandle(handle);

final _heresdkRoutingIsolineBindingslistofLocaleCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_Locale_create_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofLocaleReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_Locale_release_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofLocaleGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_Locale_get_value_nullable'));

Pointer<Void> heresdkRoutingIsolineBindingslistofLocaleToFfiNullable(List<Locale>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingIsolineBindingslistofLocaleToFfi(value);
  final result = _heresdkRoutingIsolineBindingslistofLocaleCreateHandleNullable(_handle);
  heresdkRoutingIsolineBindingslistofLocaleReleaseFfiHandle(_handle);
  return result;
}

List<Locale>? heresdkRoutingIsolineBindingslistofLocaleFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingIsolineBindingslistofLocaleGetValueNullable(handle);
  final result = heresdkRoutingIsolineBindingslistofLocaleFromFfi(_handle);
  heresdkRoutingIsolineBindingslistofLocaleReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingIsolineBindingslistofLocaleReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingIsolineBindingslistofLocaleReleaseHandleNullable(handle);

final _heresdkRoutingIsolineBindingslistofSdkCoreCountrycodeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_CountryCode_create_handle'));
final _heresdkRoutingIsolineBindingslistofSdkCoreCountrycodeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_CountryCode_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkCoreCountrycodeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_CountryCode_insert'));
final _heresdkRoutingIsolineBindingslistofSdkCoreCountrycodeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_CountryCode_iterator'));
final _heresdkRoutingIsolineBindingslistofSdkCoreCountrycodeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_CountryCode_iterator_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkCoreCountrycodeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_CountryCode_iterator_is_valid'));
final _heresdkRoutingIsolineBindingslistofSdkCoreCountrycodeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_CountryCode_iterator_increment'));
final _heresdkRoutingIsolineBindingslistofSdkCoreCountrycodeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_CountryCode_iterator_get'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkCoreCountrycodeToFfi(List<CountryCode> value) {
  final _result = _heresdkRoutingIsolineBindingslistofSdkCoreCountrycodeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreCountrycodeToFfi(element);
    _heresdkRoutingIsolineBindingslistofSdkCoreCountrycodeInsert(_result, _elementHandle);
    sdkCoreCountrycodeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<CountryCode> heresdkRoutingIsolineBindingslistofSdkCoreCountrycodeFromFfi(Pointer<Void> handle) {
  final result = List<CountryCode>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingIsolineBindingslistofSdkCoreCountrycodeIterator(handle);
  while (_heresdkRoutingIsolineBindingslistofSdkCoreCountrycodeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingIsolineBindingslistofSdkCoreCountrycodeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreCountrycodeFromFfi(_elementHandle));
    } finally {
      sdkCoreCountrycodeReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingIsolineBindingslistofSdkCoreCountrycodeIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingIsolineBindingslistofSdkCoreCountrycodeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkCoreCountrycodeReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingIsolineBindingslistofSdkCoreCountrycodeReleaseHandle(handle);

final _heresdkRoutingIsolineBindingslistofSdkCoreCountrycodeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_CountryCode_create_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkCoreCountrycodeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_CountryCode_release_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkCoreCountrycodeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_CountryCode_get_value_nullable'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkCoreCountrycodeToFfiNullable(List<CountryCode>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingIsolineBindingslistofSdkCoreCountrycodeToFfi(value);
  final result = _heresdkRoutingIsolineBindingslistofSdkCoreCountrycodeCreateHandleNullable(_handle);
  heresdkRoutingIsolineBindingslistofSdkCoreCountrycodeReleaseFfiHandle(_handle);
  return result;
}

List<CountryCode>? heresdkRoutingIsolineBindingslistofSdkCoreCountrycodeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingIsolineBindingslistofSdkCoreCountrycodeGetValueNullable(handle);
  final result = heresdkRoutingIsolineBindingslistofSdkCoreCountrycodeFromFfi(_handle);
  heresdkRoutingIsolineBindingslistofSdkCoreCountrycodeReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkCoreCountrycodeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingIsolineBindingslistofSdkCoreCountrycodeReleaseHandleNullable(handle);

final _heresdkRoutingIsolineBindingslistofSdkCoreGeoboxCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_GeoBox_create_handle'));
final _heresdkRoutingIsolineBindingslistofSdkCoreGeoboxReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_GeoBox_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkCoreGeoboxInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_GeoBox_insert'));
final _heresdkRoutingIsolineBindingslistofSdkCoreGeoboxIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_GeoBox_iterator'));
final _heresdkRoutingIsolineBindingslistofSdkCoreGeoboxIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_GeoBox_iterator_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkCoreGeoboxIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_GeoBox_iterator_is_valid'));
final _heresdkRoutingIsolineBindingslistofSdkCoreGeoboxIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_GeoBox_iterator_increment'));
final _heresdkRoutingIsolineBindingslistofSdkCoreGeoboxIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_GeoBox_iterator_get'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkCoreGeoboxToFfi(List<GeoBox> value) {
  final _result = _heresdkRoutingIsolineBindingslistofSdkCoreGeoboxCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreGeoboxToFfi(element);
    _heresdkRoutingIsolineBindingslistofSdkCoreGeoboxInsert(_result, _elementHandle);
    sdkCoreGeoboxReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoBox> heresdkRoutingIsolineBindingslistofSdkCoreGeoboxFromFfi(Pointer<Void> handle) {
  final result = List<GeoBox>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingIsolineBindingslistofSdkCoreGeoboxIterator(handle);
  while (_heresdkRoutingIsolineBindingslistofSdkCoreGeoboxIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingIsolineBindingslistofSdkCoreGeoboxIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreGeoboxFromFfi(_elementHandle));
    } finally {
      sdkCoreGeoboxReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingIsolineBindingslistofSdkCoreGeoboxIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingIsolineBindingslistofSdkCoreGeoboxIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkCoreGeoboxReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingIsolineBindingslistofSdkCoreGeoboxReleaseHandle(handle);

final _heresdkRoutingIsolineBindingslistofSdkCoreGeoboxCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_GeoBox_create_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkCoreGeoboxReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_GeoBox_release_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkCoreGeoboxGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_GeoBox_get_value_nullable'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkCoreGeoboxToFfiNullable(List<GeoBox>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingIsolineBindingslistofSdkCoreGeoboxToFfi(value);
  final result = _heresdkRoutingIsolineBindingslistofSdkCoreGeoboxCreateHandleNullable(_handle);
  heresdkRoutingIsolineBindingslistofSdkCoreGeoboxReleaseFfiHandle(_handle);
  return result;
}

List<GeoBox>? heresdkRoutingIsolineBindingslistofSdkCoreGeoboxFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingIsolineBindingslistofSdkCoreGeoboxGetValueNullable(handle);
  final result = heresdkRoutingIsolineBindingslistofSdkCoreGeoboxFromFfi(_handle);
  heresdkRoutingIsolineBindingslistofSdkCoreGeoboxReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkCoreGeoboxReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingIsolineBindingslistofSdkCoreGeoboxReleaseHandleNullable(handle);

final _heresdkRoutingIsolineBindingslistofSdkCoreGeocoordinatesCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_GeoCoordinates_create_handle'));
final _heresdkRoutingIsolineBindingslistofSdkCoreGeocoordinatesReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_GeoCoordinates_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkCoreGeocoordinatesInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_GeoCoordinates_insert'));
final _heresdkRoutingIsolineBindingslistofSdkCoreGeocoordinatesIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_GeoCoordinates_iterator'));
final _heresdkRoutingIsolineBindingslistofSdkCoreGeocoordinatesIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_GeoCoordinates_iterator_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkCoreGeocoordinatesIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_GeoCoordinates_iterator_is_valid'));
final _heresdkRoutingIsolineBindingslistofSdkCoreGeocoordinatesIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_GeoCoordinates_iterator_increment'));
final _heresdkRoutingIsolineBindingslistofSdkCoreGeocoordinatesIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_GeoCoordinates_iterator_get'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkCoreGeocoordinatesToFfi(List<GeoCoordinates> value) {
  final _result = _heresdkRoutingIsolineBindingslistofSdkCoreGeocoordinatesCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreGeocoordinatesToFfi(element);
    _heresdkRoutingIsolineBindingslistofSdkCoreGeocoordinatesInsert(_result, _elementHandle);
    sdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoCoordinates> heresdkRoutingIsolineBindingslistofSdkCoreGeocoordinatesFromFfi(Pointer<Void> handle) {
  final result = List<GeoCoordinates>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingIsolineBindingslistofSdkCoreGeocoordinatesIterator(handle);
  while (_heresdkRoutingIsolineBindingslistofSdkCoreGeocoordinatesIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingIsolineBindingslistofSdkCoreGeocoordinatesIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreGeocoordinatesFromFfi(_elementHandle));
    } finally {
      sdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingIsolineBindingslistofSdkCoreGeocoordinatesIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingIsolineBindingslistofSdkCoreGeocoordinatesIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingIsolineBindingslistofSdkCoreGeocoordinatesReleaseHandle(handle);

final _heresdkRoutingIsolineBindingslistofSdkCoreGeocoordinatesCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_GeoCoordinates_create_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkCoreGeocoordinatesReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_GeoCoordinates_release_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkCoreGeocoordinatesGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_GeoCoordinates_get_value_nullable'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkCoreGeocoordinatesToFfiNullable(List<GeoCoordinates>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingIsolineBindingslistofSdkCoreGeocoordinatesToFfi(value);
  final result = _heresdkRoutingIsolineBindingslistofSdkCoreGeocoordinatesCreateHandleNullable(_handle);
  heresdkRoutingIsolineBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

List<GeoCoordinates>? heresdkRoutingIsolineBindingslistofSdkCoreGeocoordinatesFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingIsolineBindingslistofSdkCoreGeocoordinatesGetValueNullable(handle);
  final result = heresdkRoutingIsolineBindingslistofSdkCoreGeocoordinatesFromFfi(_handle);
  heresdkRoutingIsolineBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkCoreGeocoordinatesReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingIsolineBindingslistofSdkCoreGeocoordinatesReleaseHandleNullable(handle);

final _heresdkRoutingIsolineBindingslistofSdkCoreGeopolygonCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_GeoPolygon_create_handle'));
final _heresdkRoutingIsolineBindingslistofSdkCoreGeopolygonReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_GeoPolygon_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkCoreGeopolygonInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_GeoPolygon_insert'));
final _heresdkRoutingIsolineBindingslistofSdkCoreGeopolygonIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_GeoPolygon_iterator'));
final _heresdkRoutingIsolineBindingslistofSdkCoreGeopolygonIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_GeoPolygon_iterator_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkCoreGeopolygonIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_GeoPolygon_iterator_is_valid'));
final _heresdkRoutingIsolineBindingslistofSdkCoreGeopolygonIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_GeoPolygon_iterator_increment'));
final _heresdkRoutingIsolineBindingslistofSdkCoreGeopolygonIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_GeoPolygon_iterator_get'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkCoreGeopolygonToFfi(List<GeoPolygon> value) {
  final _result = _heresdkRoutingIsolineBindingslistofSdkCoreGeopolygonCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreGeopolygonToFfi(element);
    _heresdkRoutingIsolineBindingslistofSdkCoreGeopolygonInsert(_result, _elementHandle);
    sdkCoreGeopolygonReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoPolygon> heresdkRoutingIsolineBindingslistofSdkCoreGeopolygonFromFfi(Pointer<Void> handle) {
  final result = List<GeoPolygon>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingIsolineBindingslistofSdkCoreGeopolygonIterator(handle);
  while (_heresdkRoutingIsolineBindingslistofSdkCoreGeopolygonIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingIsolineBindingslistofSdkCoreGeopolygonIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreGeopolygonFromFfi(_elementHandle));
    } finally {
      sdkCoreGeopolygonReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingIsolineBindingslistofSdkCoreGeopolygonIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingIsolineBindingslistofSdkCoreGeopolygonIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkCoreGeopolygonReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingIsolineBindingslistofSdkCoreGeopolygonReleaseHandle(handle);

final _heresdkRoutingIsolineBindingslistofSdkCoreGeopolygonCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_GeoPolygon_create_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkCoreGeopolygonReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_GeoPolygon_release_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkCoreGeopolygonGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_GeoPolygon_get_value_nullable'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkCoreGeopolygonToFfiNullable(List<GeoPolygon>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingIsolineBindingslistofSdkCoreGeopolygonToFfi(value);
  final result = _heresdkRoutingIsolineBindingslistofSdkCoreGeopolygonCreateHandleNullable(_handle);
  heresdkRoutingIsolineBindingslistofSdkCoreGeopolygonReleaseFfiHandle(_handle);
  return result;
}

List<GeoPolygon>? heresdkRoutingIsolineBindingslistofSdkCoreGeopolygonFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingIsolineBindingslistofSdkCoreGeopolygonGetValueNullable(handle);
  final result = heresdkRoutingIsolineBindingslistofSdkCoreGeopolygonFromFfi(_handle);
  heresdkRoutingIsolineBindingslistofSdkCoreGeopolygonReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkCoreGeopolygonReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingIsolineBindingslistofSdkCoreGeopolygonReleaseHandleNullable(handle);

final _heresdkRoutingIsolineBindingslistofSdkCoreLocalizedtextCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_LocalizedText_create_handle'));
final _heresdkRoutingIsolineBindingslistofSdkCoreLocalizedtextReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_LocalizedText_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkCoreLocalizedtextInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_LocalizedText_insert'));
final _heresdkRoutingIsolineBindingslistofSdkCoreLocalizedtextIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_LocalizedText_iterator'));
final _heresdkRoutingIsolineBindingslistofSdkCoreLocalizedtextIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_LocalizedText_iterator_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkCoreLocalizedtextIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_LocalizedText_iterator_is_valid'));
final _heresdkRoutingIsolineBindingslistofSdkCoreLocalizedtextIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_LocalizedText_iterator_increment'));
final _heresdkRoutingIsolineBindingslistofSdkCoreLocalizedtextIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_LocalizedText_iterator_get'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkCoreLocalizedtextToFfi(List<LocalizedText> value) {
  final _result = _heresdkRoutingIsolineBindingslistofSdkCoreLocalizedtextCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreLocalizedtextToFfi(element);
    _heresdkRoutingIsolineBindingslistofSdkCoreLocalizedtextInsert(_result, _elementHandle);
    sdkCoreLocalizedtextReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<LocalizedText> heresdkRoutingIsolineBindingslistofSdkCoreLocalizedtextFromFfi(Pointer<Void> handle) {
  final result = List<LocalizedText>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingIsolineBindingslistofSdkCoreLocalizedtextIterator(handle);
  while (_heresdkRoutingIsolineBindingslistofSdkCoreLocalizedtextIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingIsolineBindingslistofSdkCoreLocalizedtextIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreLocalizedtextFromFfi(_elementHandle));
    } finally {
      sdkCoreLocalizedtextReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingIsolineBindingslistofSdkCoreLocalizedtextIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingIsolineBindingslistofSdkCoreLocalizedtextIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkCoreLocalizedtextReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingIsolineBindingslistofSdkCoreLocalizedtextReleaseHandle(handle);

final _heresdkRoutingIsolineBindingslistofSdkCoreLocalizedtextCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_LocalizedText_create_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkCoreLocalizedtextReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_LocalizedText_release_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkCoreLocalizedtextGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_LocalizedText_get_value_nullable'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkCoreLocalizedtextToFfiNullable(List<LocalizedText>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingIsolineBindingslistofSdkCoreLocalizedtextToFfi(value);
  final result = _heresdkRoutingIsolineBindingslistofSdkCoreLocalizedtextCreateHandleNullable(_handle);
  heresdkRoutingIsolineBindingslistofSdkCoreLocalizedtextReleaseFfiHandle(_handle);
  return result;
}

List<LocalizedText>? heresdkRoutingIsolineBindingslistofSdkCoreLocalizedtextFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingIsolineBindingslistofSdkCoreLocalizedtextGetValueNullable(handle);
  final result = heresdkRoutingIsolineBindingslistofSdkCoreLocalizedtextFromFfi(_handle);
  heresdkRoutingIsolineBindingslistofSdkCoreLocalizedtextReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkCoreLocalizedtextReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingIsolineBindingslistofSdkCoreLocalizedtextReleaseHandleNullable(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingAttributionCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Attribution_create_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingAttributionReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Attribution_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingAttributionInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Attribution_insert'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingAttributionIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Attribution_iterator'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingAttributionIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Attribution_iterator_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingAttributionIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Attribution_iterator_is_valid'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingAttributionIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Attribution_iterator_increment'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingAttributionIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Attribution_iterator_get'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingAttributionToFfi(List<Attribution> value) {
  final _result = _heresdkRoutingIsolineBindingslistofSdkRoutingAttributionCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingAttributionToFfi(element);
    _heresdkRoutingIsolineBindingslistofSdkRoutingAttributionInsert(_result, _elementHandle);
    sdkRoutingAttributionReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Attribution> heresdkRoutingIsolineBindingslistofSdkRoutingAttributionFromFfi(Pointer<Void> handle) {
  final result = List<Attribution>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingAttributionIterator(handle);
  while (_heresdkRoutingIsolineBindingslistofSdkRoutingAttributionIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingAttributionIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingAttributionFromFfi(_elementHandle));
    } finally {
      sdkRoutingAttributionReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingIsolineBindingslistofSdkRoutingAttributionIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingIsolineBindingslistofSdkRoutingAttributionIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingAttributionReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingIsolineBindingslistofSdkRoutingAttributionReleaseHandle(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingAttributionCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Attribution_create_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingAttributionReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Attribution_release_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingAttributionGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Attribution_get_value_nullable'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingAttributionToFfiNullable(List<Attribution>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingIsolineBindingslistofSdkRoutingAttributionToFfi(value);
  final result = _heresdkRoutingIsolineBindingslistofSdkRoutingAttributionCreateHandleNullable(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingAttributionReleaseFfiHandle(_handle);
  return result;
}

List<Attribution>? heresdkRoutingIsolineBindingslistofSdkRoutingAttributionFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingIsolineBindingslistofSdkRoutingAttributionGetValueNullable(handle);
  final result = heresdkRoutingIsolineBindingslistofSdkRoutingAttributionFromFfi(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingAttributionReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingAttributionReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingIsolineBindingslistofSdkRoutingAttributionReleaseHandleNullable(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingChargingconnectortypeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_ChargingConnectorType_create_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingChargingconnectortypeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_ChargingConnectorType_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingChargingconnectortypeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_ChargingConnectorType_insert'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingChargingconnectortypeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_ChargingConnectorType_iterator'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingChargingconnectortypeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_ChargingConnectorType_iterator_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingChargingconnectortypeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_ChargingConnectorType_iterator_is_valid'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingChargingconnectortypeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_ChargingConnectorType_iterator_increment'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingChargingconnectortypeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_ChargingConnectorType_iterator_get'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingChargingconnectortypeToFfi(List<ChargingConnectorType> value) {
  final _result = _heresdkRoutingIsolineBindingslistofSdkRoutingChargingconnectortypeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingChargingconnectortypeToFfi(element);
    _heresdkRoutingIsolineBindingslistofSdkRoutingChargingconnectortypeInsert(_result, _elementHandle);
    sdkRoutingChargingconnectortypeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<ChargingConnectorType> heresdkRoutingIsolineBindingslistofSdkRoutingChargingconnectortypeFromFfi(Pointer<Void> handle) {
  final result = List<ChargingConnectorType>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingChargingconnectortypeIterator(handle);
  while (_heresdkRoutingIsolineBindingslistofSdkRoutingChargingconnectortypeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingChargingconnectortypeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingChargingconnectortypeFromFfi(_elementHandle));
    } finally {
      sdkRoutingChargingconnectortypeReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingIsolineBindingslistofSdkRoutingChargingconnectortypeIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingIsolineBindingslistofSdkRoutingChargingconnectortypeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingChargingconnectortypeReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingIsolineBindingslistofSdkRoutingChargingconnectortypeReleaseHandle(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingChargingconnectortypeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_ChargingConnectorType_create_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingChargingconnectortypeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_ChargingConnectorType_release_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingChargingconnectortypeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_ChargingConnectorType_get_value_nullable'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingChargingconnectortypeToFfiNullable(List<ChargingConnectorType>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingIsolineBindingslistofSdkRoutingChargingconnectortypeToFfi(value);
  final result = _heresdkRoutingIsolineBindingslistofSdkRoutingChargingconnectortypeCreateHandleNullable(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingChargingconnectortypeReleaseFfiHandle(_handle);
  return result;
}

List<ChargingConnectorType>? heresdkRoutingIsolineBindingslistofSdkRoutingChargingconnectortypeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingIsolineBindingslistofSdkRoutingChargingconnectortypeGetValueNullable(handle);
  final result = heresdkRoutingIsolineBindingslistofSdkRoutingChargingconnectortypeFromFfi(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingChargingconnectortypeReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingChargingconnectortypeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingIsolineBindingslistofSdkRoutingChargingconnectortypeReleaseHandleNullable(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingFareCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Fare_create_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingFareReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Fare_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingFareInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Fare_insert'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingFareIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Fare_iterator'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingFareIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Fare_iterator_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingFareIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Fare_iterator_is_valid'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingFareIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Fare_iterator_increment'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingFareIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Fare_iterator_get'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingFareToFfi(List<Fare> value) {
  final _result = _heresdkRoutingIsolineBindingslistofSdkRoutingFareCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingFareToFfi(element);
    _heresdkRoutingIsolineBindingslistofSdkRoutingFareInsert(_result, _elementHandle);
    sdkRoutingFareReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Fare> heresdkRoutingIsolineBindingslistofSdkRoutingFareFromFfi(Pointer<Void> handle) {
  final result = List<Fare>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingFareIterator(handle);
  while (_heresdkRoutingIsolineBindingslistofSdkRoutingFareIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingFareIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingFareFromFfi(_elementHandle));
    } finally {
      sdkRoutingFareReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingIsolineBindingslistofSdkRoutingFareIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingIsolineBindingslistofSdkRoutingFareIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingFareReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingIsolineBindingslistofSdkRoutingFareReleaseHandle(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingFareCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Fare_create_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingFareReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Fare_release_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingFareGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Fare_get_value_nullable'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingFareToFfiNullable(List<Fare>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingIsolineBindingslistofSdkRoutingFareToFfi(value);
  final result = _heresdkRoutingIsolineBindingslistofSdkRoutingFareCreateHandleNullable(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingFareReleaseFfiHandle(_handle);
  return result;
}

List<Fare>? heresdkRoutingIsolineBindingslistofSdkRoutingFareFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingIsolineBindingslistofSdkRoutingFareGetValueNullable(handle);
  final result = heresdkRoutingIsolineBindingslistofSdkRoutingFareFromFfi(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingFareReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingFareReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingIsolineBindingslistofSdkRoutingFareReleaseHandleNullable(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingHazardousgoodCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_HazardousGood_create_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingHazardousgoodReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_HazardousGood_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingHazardousgoodInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_HazardousGood_insert'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingHazardousgoodIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_HazardousGood_iterator'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingHazardousgoodIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_HazardousGood_iterator_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingHazardousgoodIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_HazardousGood_iterator_is_valid'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingHazardousgoodIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_HazardousGood_iterator_increment'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingHazardousgoodIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_HazardousGood_iterator_get'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingHazardousgoodToFfi(List<HazardousGood> value) {
  final _result = _heresdkRoutingIsolineBindingslistofSdkRoutingHazardousgoodCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingHazardousgoodToFfi(element);
    _heresdkRoutingIsolineBindingslistofSdkRoutingHazardousgoodInsert(_result, _elementHandle);
    sdkRoutingHazardousgoodReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<HazardousGood> heresdkRoutingIsolineBindingslistofSdkRoutingHazardousgoodFromFfi(Pointer<Void> handle) {
  final result = List<HazardousGood>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingHazardousgoodIterator(handle);
  while (_heresdkRoutingIsolineBindingslistofSdkRoutingHazardousgoodIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingHazardousgoodIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingHazardousgoodFromFfi(_elementHandle));
    } finally {
      sdkRoutingHazardousgoodReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingIsolineBindingslistofSdkRoutingHazardousgoodIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingIsolineBindingslistofSdkRoutingHazardousgoodIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingHazardousgoodReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingIsolineBindingslistofSdkRoutingHazardousgoodReleaseHandle(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingHazardousgoodCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_HazardousGood_create_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingHazardousgoodReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_HazardousGood_release_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingHazardousgoodGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_HazardousGood_get_value_nullable'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingHazardousgoodToFfiNullable(List<HazardousGood>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingIsolineBindingslistofSdkRoutingHazardousgoodToFfi(value);
  final result = _heresdkRoutingIsolineBindingslistofSdkRoutingHazardousgoodCreateHandleNullable(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingHazardousgoodReleaseFfiHandle(_handle);
  return result;
}

List<HazardousGood>? heresdkRoutingIsolineBindingslistofSdkRoutingHazardousgoodFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingIsolineBindingslistofSdkRoutingHazardousgoodGetValueNullable(handle);
  final result = heresdkRoutingIsolineBindingslistofSdkRoutingHazardousgoodFromFfi(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingHazardousgoodReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingHazardousgoodReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingIsolineBindingslistofSdkRoutingHazardousgoodReleaseHandleNullable(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingIsolineCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Isoline_create_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingIsolineReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Isoline_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingIsolineInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Isoline_insert'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingIsolineIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Isoline_iterator'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingIsolineIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Isoline_iterator_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingIsolineIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Isoline_iterator_is_valid'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingIsolineIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Isoline_iterator_increment'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingIsolineIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Isoline_iterator_get'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingIsolineToFfi(List<Isoline> value) {
  final _result = _heresdkRoutingIsolineBindingslistofSdkRoutingIsolineCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingIsolineToFfi(element);
    _heresdkRoutingIsolineBindingslistofSdkRoutingIsolineInsert(_result, _elementHandle);
    sdkRoutingIsolineReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Isoline> heresdkRoutingIsolineBindingslistofSdkRoutingIsolineFromFfi(Pointer<Void> handle) {
  final result = List<Isoline>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingIsolineIterator(handle);
  while (_heresdkRoutingIsolineBindingslistofSdkRoutingIsolineIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingIsolineIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingIsolineFromFfi(_elementHandle));
    } finally {
      sdkRoutingIsolineReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingIsolineBindingslistofSdkRoutingIsolineIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingIsolineBindingslistofSdkRoutingIsolineIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingIsolineReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingIsolineBindingslistofSdkRoutingIsolineReleaseHandle(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingIsolineCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Isoline_create_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingIsolineReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Isoline_release_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingIsolineGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Isoline_get_value_nullable'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingIsolineToFfiNullable(List<Isoline>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingIsolineBindingslistofSdkRoutingIsolineToFfi(value);
  final result = _heresdkRoutingIsolineBindingslistofSdkRoutingIsolineCreateHandleNullable(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingIsolineReleaseFfiHandle(_handle);
  return result;
}

List<Isoline>? heresdkRoutingIsolineBindingslistofSdkRoutingIsolineFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingIsolineBindingslistofSdkRoutingIsolineGetValueNullable(handle);
  final result = heresdkRoutingIsolineBindingslistofSdkRoutingIsolineFromFfi(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingIsolineReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingIsolineReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingIsolineBindingslistofSdkRoutingIsolineReleaseHandleNullable(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingManeuverCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Maneuver_create_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingManeuverReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Maneuver_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingManeuverInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Maneuver_insert'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingManeuverIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Maneuver_iterator'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingManeuverIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Maneuver_iterator_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingManeuverIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Maneuver_iterator_is_valid'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingManeuverIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Maneuver_iterator_increment'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingManeuverIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Maneuver_iterator_get'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingManeuverToFfi(List<Maneuver> value) {
  final _result = _heresdkRoutingIsolineBindingslistofSdkRoutingManeuverCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingManeuverToFfi(element);
    _heresdkRoutingIsolineBindingslistofSdkRoutingManeuverInsert(_result, _elementHandle);
    sdkRoutingManeuverReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Maneuver> heresdkRoutingIsolineBindingslistofSdkRoutingManeuverFromFfi(Pointer<Void> handle) {
  final result = List<Maneuver>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingManeuverIterator(handle);
  while (_heresdkRoutingIsolineBindingslistofSdkRoutingManeuverIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingManeuverIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingManeuverFromFfi(_elementHandle));
    } finally {
      sdkRoutingManeuverReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingIsolineBindingslistofSdkRoutingManeuverIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingIsolineBindingslistofSdkRoutingManeuverIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingManeuverReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingIsolineBindingslistofSdkRoutingManeuverReleaseHandle(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingManeuverCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Maneuver_create_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingManeuverReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Maneuver_release_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingManeuverGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Maneuver_get_value_nullable'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingManeuverToFfiNullable(List<Maneuver>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingIsolineBindingslistofSdkRoutingManeuverToFfi(value);
  final result = _heresdkRoutingIsolineBindingslistofSdkRoutingManeuverCreateHandleNullable(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingManeuverReleaseFfiHandle(_handle);
  return result;
}

List<Maneuver>? heresdkRoutingIsolineBindingslistofSdkRoutingManeuverFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingIsolineBindingslistofSdkRoutingManeuverGetValueNullable(handle);
  final result = heresdkRoutingIsolineBindingslistofSdkRoutingManeuverFromFfi(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingManeuverReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingManeuverReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingIsolineBindingslistofSdkRoutingManeuverReleaseHandleNullable(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingPaymentmethodCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_PaymentMethod_create_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingPaymentmethodReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_PaymentMethod_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingPaymentmethodInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_PaymentMethod_insert'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingPaymentmethodIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_PaymentMethod_iterator'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingPaymentmethodIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_PaymentMethod_iterator_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingPaymentmethodIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_PaymentMethod_iterator_is_valid'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingPaymentmethodIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_PaymentMethod_iterator_increment'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingPaymentmethodIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_PaymentMethod_iterator_get'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingPaymentmethodToFfi(List<PaymentMethod> value) {
  final _result = _heresdkRoutingIsolineBindingslistofSdkRoutingPaymentmethodCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingPaymentmethodToFfi(element);
    _heresdkRoutingIsolineBindingslistofSdkRoutingPaymentmethodInsert(_result, _elementHandle);
    sdkRoutingPaymentmethodReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<PaymentMethod> heresdkRoutingIsolineBindingslistofSdkRoutingPaymentmethodFromFfi(Pointer<Void> handle) {
  final result = List<PaymentMethod>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingPaymentmethodIterator(handle);
  while (_heresdkRoutingIsolineBindingslistofSdkRoutingPaymentmethodIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingPaymentmethodIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingPaymentmethodFromFfi(_elementHandle));
    } finally {
      sdkRoutingPaymentmethodReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingIsolineBindingslistofSdkRoutingPaymentmethodIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingIsolineBindingslistofSdkRoutingPaymentmethodIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingPaymentmethodReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingIsolineBindingslistofSdkRoutingPaymentmethodReleaseHandle(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingPaymentmethodCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_PaymentMethod_create_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingPaymentmethodReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_PaymentMethod_release_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingPaymentmethodGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_PaymentMethod_get_value_nullable'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingPaymentmethodToFfiNullable(List<PaymentMethod>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingIsolineBindingslistofSdkRoutingPaymentmethodToFfi(value);
  final result = _heresdkRoutingIsolineBindingslistofSdkRoutingPaymentmethodCreateHandleNullable(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingPaymentmethodReleaseFfiHandle(_handle);
  return result;
}

List<PaymentMethod>? heresdkRoutingIsolineBindingslistofSdkRoutingPaymentmethodFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingIsolineBindingslistofSdkRoutingPaymentmethodGetValueNullable(handle);
  final result = heresdkRoutingIsolineBindingslistofSdkRoutingPaymentmethodFromFfi(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingPaymentmethodReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingPaymentmethodReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingIsolineBindingslistofSdkRoutingPaymentmethodReleaseHandleNullable(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingPostactionCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_PostAction_create_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingPostactionReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_PostAction_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingPostactionInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_PostAction_insert'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingPostactionIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_PostAction_iterator'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingPostactionIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_PostAction_iterator_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingPostactionIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_PostAction_iterator_is_valid'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingPostactionIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_PostAction_iterator_increment'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingPostactionIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_PostAction_iterator_get'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingPostactionToFfi(List<PostAction> value) {
  final _result = _heresdkRoutingIsolineBindingslistofSdkRoutingPostactionCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingPostactionToFfi(element);
    _heresdkRoutingIsolineBindingslistofSdkRoutingPostactionInsert(_result, _elementHandle);
    sdkRoutingPostactionReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<PostAction> heresdkRoutingIsolineBindingslistofSdkRoutingPostactionFromFfi(Pointer<Void> handle) {
  final result = List<PostAction>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingPostactionIterator(handle);
  while (_heresdkRoutingIsolineBindingslistofSdkRoutingPostactionIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingPostactionIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingPostactionFromFfi(_elementHandle));
    } finally {
      sdkRoutingPostactionReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingIsolineBindingslistofSdkRoutingPostactionIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingIsolineBindingslistofSdkRoutingPostactionIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingPostactionReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingIsolineBindingslistofSdkRoutingPostactionReleaseHandle(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingPostactionCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_PostAction_create_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingPostactionReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_PostAction_release_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingPostactionGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_PostAction_get_value_nullable'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingPostactionToFfiNullable(List<PostAction>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingIsolineBindingslistofSdkRoutingPostactionToFfi(value);
  final result = _heresdkRoutingIsolineBindingslistofSdkRoutingPostactionCreateHandleNullable(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingPostactionReleaseFfiHandle(_handle);
  return result;
}

List<PostAction>? heresdkRoutingIsolineBindingslistofSdkRoutingPostactionFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingIsolineBindingslistofSdkRoutingPostactionGetValueNullable(handle);
  final result = heresdkRoutingIsolineBindingslistofSdkRoutingPostactionFromFfi(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingPostactionReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingPostactionReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingIsolineBindingslistofSdkRoutingPostactionReleaseHandleNullable(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingPreactionCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_PreAction_create_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingPreactionReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_PreAction_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingPreactionInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_PreAction_insert'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingPreactionIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_PreAction_iterator'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingPreactionIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_PreAction_iterator_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingPreactionIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_PreAction_iterator_is_valid'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingPreactionIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_PreAction_iterator_increment'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingPreactionIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_PreAction_iterator_get'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingPreactionToFfi(List<PreAction> value) {
  final _result = _heresdkRoutingIsolineBindingslistofSdkRoutingPreactionCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingPreactionToFfi(element);
    _heresdkRoutingIsolineBindingslistofSdkRoutingPreactionInsert(_result, _elementHandle);
    sdkRoutingPreactionReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<PreAction> heresdkRoutingIsolineBindingslistofSdkRoutingPreactionFromFfi(Pointer<Void> handle) {
  final result = List<PreAction>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingPreactionIterator(handle);
  while (_heresdkRoutingIsolineBindingslistofSdkRoutingPreactionIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingPreactionIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingPreactionFromFfi(_elementHandle));
    } finally {
      sdkRoutingPreactionReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingIsolineBindingslistofSdkRoutingPreactionIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingIsolineBindingslistofSdkRoutingPreactionIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingPreactionReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingIsolineBindingslistofSdkRoutingPreactionReleaseHandle(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingPreactionCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_PreAction_create_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingPreactionReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_PreAction_release_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingPreactionGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_PreAction_get_value_nullable'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingPreactionToFfiNullable(List<PreAction>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingIsolineBindingslistofSdkRoutingPreactionToFfi(value);
  final result = _heresdkRoutingIsolineBindingslistofSdkRoutingPreactionCreateHandleNullable(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingPreactionReleaseFfiHandle(_handle);
  return result;
}

List<PreAction>? heresdkRoutingIsolineBindingslistofSdkRoutingPreactionFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingIsolineBindingslistofSdkRoutingPreactionGetValueNullable(handle);
  final result = heresdkRoutingIsolineBindingslistofSdkRoutingPreactionFromFfi(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingPreactionReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingPreactionReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingIsolineBindingslistofSdkRoutingPreactionReleaseHandleNullable(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingRoadfeaturesCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_RoadFeatures_create_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingRoadfeaturesReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_RoadFeatures_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingRoadfeaturesInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_RoadFeatures_insert'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingRoadfeaturesIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_RoadFeatures_iterator'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingRoadfeaturesIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_RoadFeatures_iterator_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingRoadfeaturesIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_RoadFeatures_iterator_is_valid'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingRoadfeaturesIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_RoadFeatures_iterator_increment'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingRoadfeaturesIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_RoadFeatures_iterator_get'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingRoadfeaturesToFfi(List<RoadFeatures> value) {
  final _result = _heresdkRoutingIsolineBindingslistofSdkRoutingRoadfeaturesCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingRoadfeaturesToFfi(element);
    _heresdkRoutingIsolineBindingslistofSdkRoutingRoadfeaturesInsert(_result, _elementHandle);
    sdkRoutingRoadfeaturesReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<RoadFeatures> heresdkRoutingIsolineBindingslistofSdkRoutingRoadfeaturesFromFfi(Pointer<Void> handle) {
  final result = List<RoadFeatures>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingRoadfeaturesIterator(handle);
  while (_heresdkRoutingIsolineBindingslistofSdkRoutingRoadfeaturesIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingRoadfeaturesIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingRoadfeaturesFromFfi(_elementHandle));
    } finally {
      sdkRoutingRoadfeaturesReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingIsolineBindingslistofSdkRoutingRoadfeaturesIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingIsolineBindingslistofSdkRoutingRoadfeaturesIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingRoadfeaturesReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingIsolineBindingslistofSdkRoutingRoadfeaturesReleaseHandle(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingRoadfeaturesCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_RoadFeatures_create_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingRoadfeaturesReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_RoadFeatures_release_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingRoadfeaturesGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_RoadFeatures_get_value_nullable'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingRoadfeaturesToFfiNullable(List<RoadFeatures>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingIsolineBindingslistofSdkRoutingRoadfeaturesToFfi(value);
  final result = _heresdkRoutingIsolineBindingslistofSdkRoutingRoadfeaturesCreateHandleNullable(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingRoadfeaturesReleaseFfiHandle(_handle);
  return result;
}

List<RoadFeatures>? heresdkRoutingIsolineBindingslistofSdkRoutingRoadfeaturesFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingIsolineBindingslistofSdkRoutingRoadfeaturesGetValueNullable(handle);
  final result = heresdkRoutingIsolineBindingslistofSdkRoutingRoadfeaturesFromFfi(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingRoadfeaturesReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingRoadfeaturesReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingIsolineBindingslistofSdkRoutingRoadfeaturesReleaseHandleNullable(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingRouteCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Route_create_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingRouteReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Route_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingRouteInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Route_insert'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingRouteIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Route_iterator'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingRouteIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Route_iterator_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingRouteIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Route_iterator_is_valid'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingRouteIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Route_iterator_increment'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingRouteIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Route_iterator_get'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingRouteToFfi(List<Route> value) {
  final _result = _heresdkRoutingIsolineBindingslistofSdkRoutingRouteCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingRouteToFfi(element);
    _heresdkRoutingIsolineBindingslistofSdkRoutingRouteInsert(_result, _elementHandle);
    sdkRoutingRouteReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Route> heresdkRoutingIsolineBindingslistofSdkRoutingRouteFromFfi(Pointer<Void> handle) {
  final result = List<Route>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingRouteIterator(handle);
  while (_heresdkRoutingIsolineBindingslistofSdkRoutingRouteIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingRouteIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingRouteFromFfi(_elementHandle));
    } finally {
      sdkRoutingRouteReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingIsolineBindingslistofSdkRoutingRouteIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingIsolineBindingslistofSdkRoutingRouteIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingRouteReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingIsolineBindingslistofSdkRoutingRouteReleaseHandle(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingRouteCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Route_create_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingRouteReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Route_release_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingRouteGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Route_get_value_nullable'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingRouteToFfiNullable(List<Route>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingIsolineBindingslistofSdkRoutingRouteToFfi(value);
  final result = _heresdkRoutingIsolineBindingslistofSdkRoutingRouteCreateHandleNullable(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingRouteReleaseFfiHandle(_handle);
  return result;
}

List<Route>? heresdkRoutingIsolineBindingslistofSdkRoutingRouteFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingIsolineBindingslistofSdkRoutingRouteGetValueNullable(handle);
  final result = heresdkRoutingIsolineBindingslistofSdkRoutingRouteFromFfi(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingRouteReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingRouteReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingIsolineBindingslistofSdkRoutingRouteReleaseHandleNullable(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingSectionCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Section_create_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingSectionReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Section_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingSectionInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Section_insert'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingSectionIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Section_iterator'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingSectionIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Section_iterator_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingSectionIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Section_iterator_is_valid'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingSectionIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Section_iterator_increment'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingSectionIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Section_iterator_get'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingSectionToFfi(List<Section> value) {
  final _result = _heresdkRoutingIsolineBindingslistofSdkRoutingSectionCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingSectionToFfi(element);
    _heresdkRoutingIsolineBindingslistofSdkRoutingSectionInsert(_result, _elementHandle);
    sdkRoutingSectionReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Section> heresdkRoutingIsolineBindingslistofSdkRoutingSectionFromFfi(Pointer<Void> handle) {
  final result = List<Section>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingSectionIterator(handle);
  while (_heresdkRoutingIsolineBindingslistofSdkRoutingSectionIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingSectionIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingSectionFromFfi(_elementHandle));
    } finally {
      sdkRoutingSectionReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingIsolineBindingslistofSdkRoutingSectionIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingIsolineBindingslistofSdkRoutingSectionIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingSectionReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingIsolineBindingslistofSdkRoutingSectionReleaseHandle(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingSectionCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Section_create_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingSectionReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Section_release_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingSectionGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Section_get_value_nullable'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingSectionToFfiNullable(List<Section>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingIsolineBindingslistofSdkRoutingSectionToFfi(value);
  final result = _heresdkRoutingIsolineBindingslistofSdkRoutingSectionCreateHandleNullable(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingSectionReleaseFfiHandle(_handle);
  return result;
}

List<Section>? heresdkRoutingIsolineBindingslistofSdkRoutingSectionFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingIsolineBindingslistofSdkRoutingSectionGetValueNullable(handle);
  final result = heresdkRoutingIsolineBindingslistofSdkRoutingSectionFromFfi(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingSectionReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingSectionReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingIsolineBindingslistofSdkRoutingSectionReleaseHandleNullable(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingSectionnoticeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_SectionNotice_create_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingSectionnoticeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_SectionNotice_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingSectionnoticeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_SectionNotice_insert'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingSectionnoticeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_SectionNotice_iterator'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingSectionnoticeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_SectionNotice_iterator_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingSectionnoticeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_SectionNotice_iterator_is_valid'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingSectionnoticeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_SectionNotice_iterator_increment'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingSectionnoticeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_SectionNotice_iterator_get'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingSectionnoticeToFfi(List<SectionNotice> value) {
  final _result = _heresdkRoutingIsolineBindingslistofSdkRoutingSectionnoticeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingSectionnoticeToFfi(element);
    _heresdkRoutingIsolineBindingslistofSdkRoutingSectionnoticeInsert(_result, _elementHandle);
    sdkRoutingSectionnoticeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<SectionNotice> heresdkRoutingIsolineBindingslistofSdkRoutingSectionnoticeFromFfi(Pointer<Void> handle) {
  final result = List<SectionNotice>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingSectionnoticeIterator(handle);
  while (_heresdkRoutingIsolineBindingslistofSdkRoutingSectionnoticeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingSectionnoticeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingSectionnoticeFromFfi(_elementHandle));
    } finally {
      sdkRoutingSectionnoticeReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingIsolineBindingslistofSdkRoutingSectionnoticeIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingIsolineBindingslistofSdkRoutingSectionnoticeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingSectionnoticeReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingIsolineBindingslistofSdkRoutingSectionnoticeReleaseHandle(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingSectionnoticeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_SectionNotice_create_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingSectionnoticeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_SectionNotice_release_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingSectionnoticeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_SectionNotice_get_value_nullable'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingSectionnoticeToFfiNullable(List<SectionNotice>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingIsolineBindingslistofSdkRoutingSectionnoticeToFfi(value);
  final result = _heresdkRoutingIsolineBindingslistofSdkRoutingSectionnoticeCreateHandleNullable(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingSectionnoticeReleaseFfiHandle(_handle);
  return result;
}

List<SectionNotice>? heresdkRoutingIsolineBindingslistofSdkRoutingSectionnoticeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingIsolineBindingslistofSdkRoutingSectionnoticeGetValueNullable(handle);
  final result = heresdkRoutingIsolineBindingslistofSdkRoutingSectionnoticeFromFfi(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingSectionnoticeReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingSectionnoticeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingIsolineBindingslistofSdkRoutingSectionnoticeReleaseHandleNullable(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingSegmentreferenceCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_SegmentReference_create_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingSegmentreferenceReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_SegmentReference_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingSegmentreferenceInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_SegmentReference_insert'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingSegmentreferenceIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_SegmentReference_iterator'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingSegmentreferenceIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_SegmentReference_iterator_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingSegmentreferenceIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_SegmentReference_iterator_is_valid'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingSegmentreferenceIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_SegmentReference_iterator_increment'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingSegmentreferenceIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_SegmentReference_iterator_get'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingSegmentreferenceToFfi(List<SegmentReference> value) {
  final _result = _heresdkRoutingIsolineBindingslistofSdkRoutingSegmentreferenceCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingSegmentreferenceToFfi(element);
    _heresdkRoutingIsolineBindingslistofSdkRoutingSegmentreferenceInsert(_result, _elementHandle);
    sdkRoutingSegmentreferenceReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<SegmentReference> heresdkRoutingIsolineBindingslistofSdkRoutingSegmentreferenceFromFfi(Pointer<Void> handle) {
  final result = List<SegmentReference>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingSegmentreferenceIterator(handle);
  while (_heresdkRoutingIsolineBindingslistofSdkRoutingSegmentreferenceIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingSegmentreferenceIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingSegmentreferenceFromFfi(_elementHandle));
    } finally {
      sdkRoutingSegmentreferenceReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingIsolineBindingslistofSdkRoutingSegmentreferenceIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingIsolineBindingslistofSdkRoutingSegmentreferenceIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingSegmentreferenceReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingIsolineBindingslistofSdkRoutingSegmentreferenceReleaseHandle(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingSegmentreferenceCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_SegmentReference_create_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingSegmentreferenceReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_SegmentReference_release_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingSegmentreferenceGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_SegmentReference_get_value_nullable'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingSegmentreferenceToFfiNullable(List<SegmentReference>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingIsolineBindingslistofSdkRoutingSegmentreferenceToFfi(value);
  final result = _heresdkRoutingIsolineBindingslistofSdkRoutingSegmentreferenceCreateHandleNullable(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingSegmentreferenceReleaseFfiHandle(_handle);
  return result;
}

List<SegmentReference>? heresdkRoutingIsolineBindingslistofSdkRoutingSegmentreferenceFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingIsolineBindingslistofSdkRoutingSegmentreferenceGetValueNullable(handle);
  final result = heresdkRoutingIsolineBindingslistofSdkRoutingSegmentreferenceFromFfi(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingSegmentreferenceReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingSegmentreferenceReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingIsolineBindingslistofSdkRoutingSegmentreferenceReleaseHandleNullable(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingSpanCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Span_create_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingSpanReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Span_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingSpanInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Span_insert'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingSpanIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Span_iterator'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingSpanIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Span_iterator_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingSpanIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Span_iterator_is_valid'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingSpanIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Span_iterator_increment'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingSpanIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Span_iterator_get'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingSpanToFfi(List<Span> value) {
  final _result = _heresdkRoutingIsolineBindingslistofSdkRoutingSpanCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingSpanToFfi(element);
    _heresdkRoutingIsolineBindingslistofSdkRoutingSpanInsert(_result, _elementHandle);
    sdkRoutingSpanReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Span> heresdkRoutingIsolineBindingslistofSdkRoutingSpanFromFfi(Pointer<Void> handle) {
  final result = List<Span>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingSpanIterator(handle);
  while (_heresdkRoutingIsolineBindingslistofSdkRoutingSpanIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingSpanIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingSpanFromFfi(_elementHandle));
    } finally {
      sdkRoutingSpanReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingIsolineBindingslistofSdkRoutingSpanIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingIsolineBindingslistofSdkRoutingSpanIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingSpanReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingIsolineBindingslistofSdkRoutingSpanReleaseHandle(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingSpanCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Span_create_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingSpanReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Span_release_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingSpanGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Span_get_value_nullable'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingSpanToFfiNullable(List<Span>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingIsolineBindingslistofSdkRoutingSpanToFfi(value);
  final result = _heresdkRoutingIsolineBindingslistofSdkRoutingSpanCreateHandleNullable(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingSpanReleaseFfiHandle(_handle);
  return result;
}

List<Span>? heresdkRoutingIsolineBindingslistofSdkRoutingSpanFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingIsolineBindingslistofSdkRoutingSpanGetValueNullable(handle);
  final result = heresdkRoutingIsolineBindingslistofSdkRoutingSpanFromFfi(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingSpanReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingSpanReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingIsolineBindingslistofSdkRoutingSpanReleaseHandleNullable(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingTollCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Toll_create_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTollReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Toll_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTollInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Toll_insert'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTollIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Toll_iterator'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTollIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Toll_iterator_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTollIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Toll_iterator_is_valid'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTollIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Toll_iterator_increment'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTollIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Toll_iterator_get'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingTollToFfi(List<Toll> value) {
  final _result = _heresdkRoutingIsolineBindingslistofSdkRoutingTollCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingTollToFfi(element);
    _heresdkRoutingIsolineBindingslistofSdkRoutingTollInsert(_result, _elementHandle);
    sdkRoutingTollReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Toll> heresdkRoutingIsolineBindingslistofSdkRoutingTollFromFfi(Pointer<Void> handle) {
  final result = List<Toll>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingTollIterator(handle);
  while (_heresdkRoutingIsolineBindingslistofSdkRoutingTollIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingTollIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingTollFromFfi(_elementHandle));
    } finally {
      sdkRoutingTollReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingIsolineBindingslistofSdkRoutingTollIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingIsolineBindingslistofSdkRoutingTollIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingTollReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingIsolineBindingslistofSdkRoutingTollReleaseHandle(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingTollCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Toll_create_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTollReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Toll_release_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTollGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Toll_get_value_nullable'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingTollToFfiNullable(List<Toll>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingIsolineBindingslistofSdkRoutingTollToFfi(value);
  final result = _heresdkRoutingIsolineBindingslistofSdkRoutingTollCreateHandleNullable(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingTollReleaseFfiHandle(_handle);
  return result;
}

List<Toll>? heresdkRoutingIsolineBindingslistofSdkRoutingTollFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingIsolineBindingslistofSdkRoutingTollGetValueNullable(handle);
  final result = heresdkRoutingIsolineBindingslistofSdkRoutingTollFromFfi(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingTollReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingTollReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingIsolineBindingslistofSdkRoutingTollReleaseHandleNullable(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingTollfareCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TollFare_create_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTollfareReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TollFare_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTollfareInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TollFare_insert'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTollfareIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TollFare_iterator'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTollfareIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TollFare_iterator_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTollfareIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TollFare_iterator_is_valid'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTollfareIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TollFare_iterator_increment'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTollfareIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TollFare_iterator_get'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingTollfareToFfi(List<TollFare> value) {
  final _result = _heresdkRoutingIsolineBindingslistofSdkRoutingTollfareCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingTollfareToFfi(element);
    _heresdkRoutingIsolineBindingslistofSdkRoutingTollfareInsert(_result, _elementHandle);
    sdkRoutingTollfareReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<TollFare> heresdkRoutingIsolineBindingslistofSdkRoutingTollfareFromFfi(Pointer<Void> handle) {
  final result = List<TollFare>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingTollfareIterator(handle);
  while (_heresdkRoutingIsolineBindingslistofSdkRoutingTollfareIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingTollfareIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingTollfareFromFfi(_elementHandle));
    } finally {
      sdkRoutingTollfareReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingIsolineBindingslistofSdkRoutingTollfareIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingIsolineBindingslistofSdkRoutingTollfareIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingTollfareReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingIsolineBindingslistofSdkRoutingTollfareReleaseHandle(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingTollfareCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TollFare_create_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTollfareReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TollFare_release_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTollfareGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TollFare_get_value_nullable'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingTollfareToFfiNullable(List<TollFare>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingIsolineBindingslistofSdkRoutingTollfareToFfi(value);
  final result = _heresdkRoutingIsolineBindingslistofSdkRoutingTollfareCreateHandleNullable(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingTollfareReleaseFfiHandle(_handle);
  return result;
}

List<TollFare>? heresdkRoutingIsolineBindingslistofSdkRoutingTollfareFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingIsolineBindingslistofSdkRoutingTollfareGetValueNullable(handle);
  final result = heresdkRoutingIsolineBindingslistofSdkRoutingTollfareFromFfi(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingTollfareReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingTollfareReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingIsolineBindingslistofSdkRoutingTollfareReleaseHandleNullable(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingTrafficspeedCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TrafficSpeed_create_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTrafficspeedReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TrafficSpeed_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTrafficspeedInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TrafficSpeed_insert'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTrafficspeedIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TrafficSpeed_iterator'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTrafficspeedIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TrafficSpeed_iterator_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTrafficspeedIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TrafficSpeed_iterator_is_valid'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTrafficspeedIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TrafficSpeed_iterator_increment'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTrafficspeedIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TrafficSpeed_iterator_get'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingTrafficspeedToFfi(List<TrafficSpeed> value) {
  final _result = _heresdkRoutingIsolineBindingslistofSdkRoutingTrafficspeedCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingTrafficspeedToFfi(element);
    _heresdkRoutingIsolineBindingslistofSdkRoutingTrafficspeedInsert(_result, _elementHandle);
    sdkRoutingTrafficspeedReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<TrafficSpeed> heresdkRoutingIsolineBindingslistofSdkRoutingTrafficspeedFromFfi(Pointer<Void> handle) {
  final result = List<TrafficSpeed>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingTrafficspeedIterator(handle);
  while (_heresdkRoutingIsolineBindingslistofSdkRoutingTrafficspeedIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingTrafficspeedIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingTrafficspeedFromFfi(_elementHandle));
    } finally {
      sdkRoutingTrafficspeedReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingIsolineBindingslistofSdkRoutingTrafficspeedIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingIsolineBindingslistofSdkRoutingTrafficspeedIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingTrafficspeedReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingIsolineBindingslistofSdkRoutingTrafficspeedReleaseHandle(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingTrafficspeedCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TrafficSpeed_create_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTrafficspeedReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TrafficSpeed_release_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTrafficspeedGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TrafficSpeed_get_value_nullable'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingTrafficspeedToFfiNullable(List<TrafficSpeed>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingIsolineBindingslistofSdkRoutingTrafficspeedToFfi(value);
  final result = _heresdkRoutingIsolineBindingslistofSdkRoutingTrafficspeedCreateHandleNullable(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingTrafficspeedReleaseFfiHandle(_handle);
  return result;
}

List<TrafficSpeed>? heresdkRoutingIsolineBindingslistofSdkRoutingTrafficspeedFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingIsolineBindingslistofSdkRoutingTrafficspeedGetValueNullable(handle);
  final result = heresdkRoutingIsolineBindingslistofSdkRoutingTrafficspeedFromFfi(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingTrafficspeedReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingTrafficspeedReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingIsolineBindingslistofSdkRoutingTrafficspeedReleaseHandleNullable(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingTransitincidentCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TransitIncident_create_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTransitincidentReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TransitIncident_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTransitincidentInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TransitIncident_insert'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTransitincidentIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TransitIncident_iterator'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTransitincidentIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TransitIncident_iterator_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTransitincidentIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TransitIncident_iterator_is_valid'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTransitincidentIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TransitIncident_iterator_increment'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTransitincidentIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TransitIncident_iterator_get'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingTransitincidentToFfi(List<TransitIncident> value) {
  final _result = _heresdkRoutingIsolineBindingslistofSdkRoutingTransitincidentCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingTransitincidentToFfi(element);
    _heresdkRoutingIsolineBindingslistofSdkRoutingTransitincidentInsert(_result, _elementHandle);
    sdkRoutingTransitincidentReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<TransitIncident> heresdkRoutingIsolineBindingslistofSdkRoutingTransitincidentFromFfi(Pointer<Void> handle) {
  final result = List<TransitIncident>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingTransitincidentIterator(handle);
  while (_heresdkRoutingIsolineBindingslistofSdkRoutingTransitincidentIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingTransitincidentIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingTransitincidentFromFfi(_elementHandle));
    } finally {
      sdkRoutingTransitincidentReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingIsolineBindingslistofSdkRoutingTransitincidentIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingIsolineBindingslistofSdkRoutingTransitincidentIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingTransitincidentReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingIsolineBindingslistofSdkRoutingTransitincidentReleaseHandle(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingTransitincidentCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TransitIncident_create_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTransitincidentReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TransitIncident_release_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTransitincidentGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TransitIncident_get_value_nullable'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingTransitincidentToFfiNullable(List<TransitIncident>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingIsolineBindingslistofSdkRoutingTransitincidentToFfi(value);
  final result = _heresdkRoutingIsolineBindingslistofSdkRoutingTransitincidentCreateHandleNullable(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingTransitincidentReleaseFfiHandle(_handle);
  return result;
}

List<TransitIncident>? heresdkRoutingIsolineBindingslistofSdkRoutingTransitincidentFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingIsolineBindingslistofSdkRoutingTransitincidentGetValueNullable(handle);
  final result = heresdkRoutingIsolineBindingslistofSdkRoutingTransitincidentFromFfi(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingTransitincidentReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingTransitincidentReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingIsolineBindingslistofSdkRoutingTransitincidentReleaseHandleNullable(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingTransitmodeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TransitMode_create_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTransitmodeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TransitMode_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTransitmodeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TransitMode_insert'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTransitmodeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TransitMode_iterator'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTransitmodeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TransitMode_iterator_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTransitmodeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TransitMode_iterator_is_valid'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTransitmodeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TransitMode_iterator_increment'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTransitmodeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TransitMode_iterator_get'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingTransitmodeToFfi(List<TransitMode> value) {
  final _result = _heresdkRoutingIsolineBindingslistofSdkRoutingTransitmodeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingTransitmodeToFfi(element);
    _heresdkRoutingIsolineBindingslistofSdkRoutingTransitmodeInsert(_result, _elementHandle);
    sdkRoutingTransitmodeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<TransitMode> heresdkRoutingIsolineBindingslistofSdkRoutingTransitmodeFromFfi(Pointer<Void> handle) {
  final result = List<TransitMode>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingTransitmodeIterator(handle);
  while (_heresdkRoutingIsolineBindingslistofSdkRoutingTransitmodeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingTransitmodeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingTransitmodeFromFfi(_elementHandle));
    } finally {
      sdkRoutingTransitmodeReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingIsolineBindingslistofSdkRoutingTransitmodeIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingIsolineBindingslistofSdkRoutingTransitmodeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingTransitmodeReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingIsolineBindingslistofSdkRoutingTransitmodeReleaseHandle(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingTransitmodeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TransitMode_create_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTransitmodeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TransitMode_release_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTransitmodeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TransitMode_get_value_nullable'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingTransitmodeToFfiNullable(List<TransitMode>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingIsolineBindingslistofSdkRoutingTransitmodeToFfi(value);
  final result = _heresdkRoutingIsolineBindingslistofSdkRoutingTransitmodeCreateHandleNullable(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingTransitmodeReleaseFfiHandle(_handle);
  return result;
}

List<TransitMode>? heresdkRoutingIsolineBindingslistofSdkRoutingTransitmodeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingIsolineBindingslistofSdkRoutingTransitmodeGetValueNullable(handle);
  final result = heresdkRoutingIsolineBindingslistofSdkRoutingTransitmodeFromFfi(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingTransitmodeReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingTransitmodeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingIsolineBindingslistofSdkRoutingTransitmodeReleaseHandleNullable(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingTransitstopCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TransitStop_create_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTransitstopReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TransitStop_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTransitstopInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TransitStop_insert'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTransitstopIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TransitStop_iterator'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTransitstopIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TransitStop_iterator_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTransitstopIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TransitStop_iterator_is_valid'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTransitstopIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TransitStop_iterator_increment'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTransitstopIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TransitStop_iterator_get'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingTransitstopToFfi(List<TransitStop> value) {
  final _result = _heresdkRoutingIsolineBindingslistofSdkRoutingTransitstopCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingTransitstopToFfi(element);
    _heresdkRoutingIsolineBindingslistofSdkRoutingTransitstopInsert(_result, _elementHandle);
    sdkRoutingTransitstopReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<TransitStop> heresdkRoutingIsolineBindingslistofSdkRoutingTransitstopFromFfi(Pointer<Void> handle) {
  final result = List<TransitStop>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingTransitstopIterator(handle);
  while (_heresdkRoutingIsolineBindingslistofSdkRoutingTransitstopIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingTransitstopIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingTransitstopFromFfi(_elementHandle));
    } finally {
      sdkRoutingTransitstopReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingIsolineBindingslistofSdkRoutingTransitstopIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingIsolineBindingslistofSdkRoutingTransitstopIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingTransitstopReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingIsolineBindingslistofSdkRoutingTransitstopReleaseHandle(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingTransitstopCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TransitStop_create_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTransitstopReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TransitStop_release_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTransitstopGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TransitStop_get_value_nullable'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingTransitstopToFfiNullable(List<TransitStop>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingIsolineBindingslistofSdkRoutingTransitstopToFfi(value);
  final result = _heresdkRoutingIsolineBindingslistofSdkRoutingTransitstopCreateHandleNullable(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingTransitstopReleaseFfiHandle(_handle);
  return result;
}

List<TransitStop>? heresdkRoutingIsolineBindingslistofSdkRoutingTransitstopFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingIsolineBindingslistofSdkRoutingTransitstopGetValueNullable(handle);
  final result = heresdkRoutingIsolineBindingslistofSdkRoutingTransitstopFromFfi(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingTransitstopReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingTransitstopReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingIsolineBindingslistofSdkRoutingTransitstopReleaseHandleNullable(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingWaypointCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Waypoint_create_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingWaypointReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Waypoint_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingWaypointInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Waypoint_insert'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingWaypointIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Waypoint_iterator'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingWaypointIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Waypoint_iterator_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingWaypointIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Waypoint_iterator_is_valid'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingWaypointIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Waypoint_iterator_increment'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingWaypointIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Waypoint_iterator_get'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingWaypointToFfi(List<Waypoint> value) {
  final _result = _heresdkRoutingIsolineBindingslistofSdkRoutingWaypointCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingWaypointToFfi(element);
    _heresdkRoutingIsolineBindingslistofSdkRoutingWaypointInsert(_result, _elementHandle);
    sdkRoutingWaypointReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Waypoint> heresdkRoutingIsolineBindingslistofSdkRoutingWaypointFromFfi(Pointer<Void> handle) {
  final result = List<Waypoint>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingWaypointIterator(handle);
  while (_heresdkRoutingIsolineBindingslistofSdkRoutingWaypointIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingWaypointIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingWaypointFromFfi(_elementHandle));
    } finally {
      sdkRoutingWaypointReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingIsolineBindingslistofSdkRoutingWaypointIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingIsolineBindingslistofSdkRoutingWaypointIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingWaypointReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingIsolineBindingslistofSdkRoutingWaypointReleaseHandle(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingWaypointCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Waypoint_create_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingWaypointReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Waypoint_release_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingWaypointGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Waypoint_get_value_nullable'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingWaypointToFfiNullable(List<Waypoint>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingIsolineBindingslistofSdkRoutingWaypointToFfi(value);
  final result = _heresdkRoutingIsolineBindingslistofSdkRoutingWaypointCreateHandleNullable(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingWaypointReleaseFfiHandle(_handle);
  return result;
}

List<Waypoint>? heresdkRoutingIsolineBindingslistofSdkRoutingWaypointFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingIsolineBindingslistofSdkRoutingWaypointGetValueNullable(handle);
  final result = heresdkRoutingIsolineBindingslistofSdkRoutingWaypointFromFfi(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingWaypointReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingWaypointReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingIsolineBindingslistofSdkRoutingWaypointReleaseHandleNullable(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingZonecategoryCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_ZoneCategory_create_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingZonecategoryReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_ZoneCategory_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingZonecategoryInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_ZoneCategory_insert'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingZonecategoryIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_ZoneCategory_iterator'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingZonecategoryIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_ZoneCategory_iterator_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingZonecategoryIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_ZoneCategory_iterator_is_valid'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingZonecategoryIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_ZoneCategory_iterator_increment'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingZonecategoryIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_ZoneCategory_iterator_get'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingZonecategoryToFfi(List<ZoneCategory> value) {
  final _result = _heresdkRoutingIsolineBindingslistofSdkRoutingZonecategoryCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingZonecategoryToFfi(element);
    _heresdkRoutingIsolineBindingslistofSdkRoutingZonecategoryInsert(_result, _elementHandle);
    sdkRoutingZonecategoryReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<ZoneCategory> heresdkRoutingIsolineBindingslistofSdkRoutingZonecategoryFromFfi(Pointer<Void> handle) {
  final result = List<ZoneCategory>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingZonecategoryIterator(handle);
  while (_heresdkRoutingIsolineBindingslistofSdkRoutingZonecategoryIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingZonecategoryIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingZonecategoryFromFfi(_elementHandle));
    } finally {
      sdkRoutingZonecategoryReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingIsolineBindingslistofSdkRoutingZonecategoryIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingIsolineBindingslistofSdkRoutingZonecategoryIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingZonecategoryReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingIsolineBindingslistofSdkRoutingZonecategoryReleaseHandle(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingZonecategoryCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_ZoneCategory_create_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingZonecategoryReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_ZoneCategory_release_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingZonecategoryGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_ZoneCategory_get_value_nullable'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingZonecategoryToFfiNullable(List<ZoneCategory>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingIsolineBindingslistofSdkRoutingZonecategoryToFfi(value);
  final result = _heresdkRoutingIsolineBindingslistofSdkRoutingZonecategoryCreateHandleNullable(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingZonecategoryReleaseFfiHandle(_handle);
  return result;
}

List<ZoneCategory>? heresdkRoutingIsolineBindingslistofSdkRoutingZonecategoryFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingIsolineBindingslistofSdkRoutingZonecategoryGetValueNullable(handle);
  final result = heresdkRoutingIsolineBindingslistofSdkRoutingZonecategoryFromFfi(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingZonecategoryReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingZonecategoryReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingIsolineBindingslistofSdkRoutingZonecategoryReleaseHandleNullable(handle);

final _heresdkRoutingIsolineBindingsmapofDoubleToDoubleCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_isoline_bindingsMapOf_Double_to_Double_create_handle'));
final _heresdkRoutingIsolineBindingsmapofDoubleToDoubleReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsMapOf_Double_to_Double_release_handle'));
final _heresdkRoutingIsolineBindingsmapofDoubleToDoublePut = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Double, Double),
    void Function(Pointer<Void>, double, double)
  >('here_sdk_heresdk_routing_isoline_bindingsMapOf_Double_to_Double_put'));
final _heresdkRoutingIsolineBindingsmapofDoubleToDoubleIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsMapOf_Double_to_Double_iterator'));
final _heresdkRoutingIsolineBindingsmapofDoubleToDoubleIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsMapOf_Double_to_Double_iterator_release_handle'));
final _heresdkRoutingIsolineBindingsmapofDoubleToDoubleIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsMapOf_Double_to_Double_iterator_is_valid'));
final _heresdkRoutingIsolineBindingsmapofDoubleToDoubleIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsMapOf_Double_to_Double_iterator_increment'));
final _heresdkRoutingIsolineBindingsmapofDoubleToDoubleIteratorGetKey = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Double Function(Pointer<Void>),
    double Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsMapOf_Double_to_Double_iterator_get_key'));
final _heresdkRoutingIsolineBindingsmapofDoubleToDoubleIteratorGetValue = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Double Function(Pointer<Void>),
    double Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsMapOf_Double_to_Double_iterator_get_value'));

Pointer<Void> heresdkRoutingIsolineBindingsmapofDoubleToDoubleToFfi(Map<double, double> value) {
  final _result = _heresdkRoutingIsolineBindingsmapofDoubleToDoubleCreateHandle();
  for (final entry in value.entries) {
    final _keyHandle = (entry.key);
    final _valueHandle = (entry.value);
    _heresdkRoutingIsolineBindingsmapofDoubleToDoublePut(_result, _keyHandle, _valueHandle);
    
    
  }
  return _result;
}

Map<double, double> heresdkRoutingIsolineBindingsmapofDoubleToDoubleFromFfi(Pointer<Void> handle) {
  final result = Map<double, double>();
  final _iteratorHandle = _heresdkRoutingIsolineBindingsmapofDoubleToDoubleIterator(handle);
  while (_heresdkRoutingIsolineBindingsmapofDoubleToDoubleIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _keyHandle = _heresdkRoutingIsolineBindingsmapofDoubleToDoubleIteratorGetKey(_iteratorHandle);
    final _valueHandle = _heresdkRoutingIsolineBindingsmapofDoubleToDoubleIteratorGetValue(_iteratorHandle);
    try {
      result[(_keyHandle)] =
        (_valueHandle);
    } finally {
      
      
    }
    _heresdkRoutingIsolineBindingsmapofDoubleToDoubleIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingIsolineBindingsmapofDoubleToDoubleIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingIsolineBindingsmapofDoubleToDoubleReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingIsolineBindingsmapofDoubleToDoubleReleaseHandle(handle);

final _heresdkRoutingIsolineBindingsmapofDoubleToDoubleCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsMapOf_Double_to_Double_create_handle_nullable'));
final _heresdkRoutingIsolineBindingsmapofDoubleToDoubleReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsMapOf_Double_to_Double_release_handle_nullable'));
final _heresdkRoutingIsolineBindingsmapofDoubleToDoubleGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsMapOf_Double_to_Double_get_value_nullable'));

Pointer<Void> heresdkRoutingIsolineBindingsmapofDoubleToDoubleToFfiNullable(Map<double, double>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingIsolineBindingsmapofDoubleToDoubleToFfi(value);
  final result = _heresdkRoutingIsolineBindingsmapofDoubleToDoubleCreateHandleNullable(_handle);
  heresdkRoutingIsolineBindingsmapofDoubleToDoubleReleaseFfiHandle(_handle);
  return result;
}

Map<double, double>? heresdkRoutingIsolineBindingsmapofDoubleToDoubleFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingIsolineBindingsmapofDoubleToDoubleGetValueNullable(handle);
  final result = heresdkRoutingIsolineBindingsmapofDoubleToDoubleFromFfi(_handle);
  heresdkRoutingIsolineBindingsmapofDoubleToDoubleReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingIsolineBindingsmapofDoubleToDoubleReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingIsolineBindingsmapofDoubleToDoubleReleaseHandleNullable(handle);

final _heresdkRoutingIsolineBindingsmapofIntToDoubleCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_isoline_bindingsMapOf_Int_to_Double_create_handle'));
final _heresdkRoutingIsolineBindingsmapofIntToDoubleReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsMapOf_Int_to_Double_release_handle'));
final _heresdkRoutingIsolineBindingsmapofIntToDoublePut = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Int32, Double),
    void Function(Pointer<Void>, int, double)
  >('here_sdk_heresdk_routing_isoline_bindingsMapOf_Int_to_Double_put'));
final _heresdkRoutingIsolineBindingsmapofIntToDoubleIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsMapOf_Int_to_Double_iterator'));
final _heresdkRoutingIsolineBindingsmapofIntToDoubleIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsMapOf_Int_to_Double_iterator_release_handle'));
final _heresdkRoutingIsolineBindingsmapofIntToDoubleIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsMapOf_Int_to_Double_iterator_is_valid'));
final _heresdkRoutingIsolineBindingsmapofIntToDoubleIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsMapOf_Int_to_Double_iterator_increment'));
final _heresdkRoutingIsolineBindingsmapofIntToDoubleIteratorGetKey = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsMapOf_Int_to_Double_iterator_get_key'));
final _heresdkRoutingIsolineBindingsmapofIntToDoubleIteratorGetValue = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Double Function(Pointer<Void>),
    double Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsMapOf_Int_to_Double_iterator_get_value'));

Pointer<Void> heresdkRoutingIsolineBindingsmapofIntToDoubleToFfi(Map<int, double> value) {
  final _result = _heresdkRoutingIsolineBindingsmapofIntToDoubleCreateHandle();
  for (final entry in value.entries) {
    final _keyHandle = (entry.key);
    final _valueHandle = (entry.value);
    _heresdkRoutingIsolineBindingsmapofIntToDoublePut(_result, _keyHandle, _valueHandle);
    
    
  }
  return _result;
}

Map<int, double> heresdkRoutingIsolineBindingsmapofIntToDoubleFromFfi(Pointer<Void> handle) {
  final result = Map<int, double>();
  final _iteratorHandle = _heresdkRoutingIsolineBindingsmapofIntToDoubleIterator(handle);
  while (_heresdkRoutingIsolineBindingsmapofIntToDoubleIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _keyHandle = _heresdkRoutingIsolineBindingsmapofIntToDoubleIteratorGetKey(_iteratorHandle);
    final _valueHandle = _heresdkRoutingIsolineBindingsmapofIntToDoubleIteratorGetValue(_iteratorHandle);
    try {
      result[(_keyHandle)] =
        (_valueHandle);
    } finally {
      
      
    }
    _heresdkRoutingIsolineBindingsmapofIntToDoubleIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingIsolineBindingsmapofIntToDoubleIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingIsolineBindingsmapofIntToDoubleReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingIsolineBindingsmapofIntToDoubleReleaseHandle(handle);

final _heresdkRoutingIsolineBindingsmapofIntToDoubleCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsMapOf_Int_to_Double_create_handle_nullable'));
final _heresdkRoutingIsolineBindingsmapofIntToDoubleReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsMapOf_Int_to_Double_release_handle_nullable'));
final _heresdkRoutingIsolineBindingsmapofIntToDoubleGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsMapOf_Int_to_Double_get_value_nullable'));

Pointer<Void> heresdkRoutingIsolineBindingsmapofIntToDoubleToFfiNullable(Map<int, double>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingIsolineBindingsmapofIntToDoubleToFfi(value);
  final result = _heresdkRoutingIsolineBindingsmapofIntToDoubleCreateHandleNullable(_handle);
  heresdkRoutingIsolineBindingsmapofIntToDoubleReleaseFfiHandle(_handle);
  return result;
}

Map<int, double>? heresdkRoutingIsolineBindingsmapofIntToDoubleFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingIsolineBindingsmapofIntToDoubleGetValueNullable(handle);
  final result = heresdkRoutingIsolineBindingsmapofIntToDoubleFromFfi(_handle);
  heresdkRoutingIsolineBindingsmapofIntToDoubleReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingIsolineBindingsmapofIntToDoubleReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingIsolineBindingsmapofIntToDoubleReleaseHandleNullable(handle);


// Copyright (c) 2018-2021 HERE Global B.V. and its affiliate(s).
// All rights reserved.
//
// This software and other materials contain proprietary information
// controlled by HERE and are protected by applicable copyright legislation.
// Any use and utilization of this software and other materials and
// disclosure to any third parties is conditional upon having a separate
// agreement with HERE for the access, use, utilization or disclosure of this
// software. In the absence of such agreement, the use of the software is not
// allowed.
//


































final _heresdkRoutingTransitBindingslistofIntCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_transit_bindingsListOf_Int_create_handle'));
final _heresdkRoutingTransitBindingslistofIntReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_Int_release_handle'));
final _heresdkRoutingTransitBindingslistofIntInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Int32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_Int_insert'));
final _heresdkRoutingTransitBindingslistofIntIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_Int_iterator'));
final _heresdkRoutingTransitBindingslistofIntIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_Int_iterator_release_handle'));
final _heresdkRoutingTransitBindingslistofIntIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_Int_iterator_is_valid'));
final _heresdkRoutingTransitBindingslistofIntIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_Int_iterator_increment'));
final _heresdkRoutingTransitBindingslistofIntIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_Int_iterator_get'));

Pointer<Void> heresdkRoutingTransitBindingslistofIntToFfi(List<int> value) {
  final _result = _heresdkRoutingTransitBindingslistofIntCreateHandle();
  for (final element in value) {
    final _elementHandle = (element);
    _heresdkRoutingTransitBindingslistofIntInsert(_result, _elementHandle);
    
  }
  return _result;
}

List<int> heresdkRoutingTransitBindingslistofIntFromFfi(Pointer<Void> handle) {
  final result = List<int>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingTransitBindingslistofIntIterator(handle);
  while (_heresdkRoutingTransitBindingslistofIntIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingTransitBindingslistofIntIteratorGet(_iteratorHandle);
    try {
      result.add((_elementHandle));
    } finally {
      
    }
    _heresdkRoutingTransitBindingslistofIntIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingTransitBindingslistofIntIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingTransitBindingslistofIntReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingTransitBindingslistofIntReleaseHandle(handle);

final _heresdkRoutingTransitBindingslistofIntCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_Int_create_handle_nullable'));
final _heresdkRoutingTransitBindingslistofIntReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_Int_release_handle_nullable'));
final _heresdkRoutingTransitBindingslistofIntGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_Int_get_value_nullable'));

Pointer<Void> heresdkRoutingTransitBindingslistofIntToFfiNullable(List<int>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingTransitBindingslistofIntToFfi(value);
  final result = _heresdkRoutingTransitBindingslistofIntCreateHandleNullable(_handle);
  heresdkRoutingTransitBindingslistofIntReleaseFfiHandle(_handle);
  return result;
}

List<int>? heresdkRoutingTransitBindingslistofIntFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingTransitBindingslistofIntGetValueNullable(handle);
  final result = heresdkRoutingTransitBindingslistofIntFromFfi(_handle);
  heresdkRoutingTransitBindingslistofIntReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingTransitBindingslistofIntReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingTransitBindingslistofIntReleaseHandleNullable(handle);

final _heresdkRoutingTransitBindingslistofLocaleCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_transit_bindingsListOf_Locale_create_handle'));
final _heresdkRoutingTransitBindingslistofLocaleReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_Locale_release_handle'));
final _heresdkRoutingTransitBindingslistofLocaleInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_Locale_insert'));
final _heresdkRoutingTransitBindingslistofLocaleIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_Locale_iterator'));
final _heresdkRoutingTransitBindingslistofLocaleIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_Locale_iterator_release_handle'));
final _heresdkRoutingTransitBindingslistofLocaleIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_Locale_iterator_is_valid'));
final _heresdkRoutingTransitBindingslistofLocaleIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_Locale_iterator_increment'));
final _heresdkRoutingTransitBindingslistofLocaleIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_Locale_iterator_get'));

Pointer<Void> heresdkRoutingTransitBindingslistofLocaleToFfi(List<Locale> value) {
  final _result = _heresdkRoutingTransitBindingslistofLocaleCreateHandle();
  for (final element in value) {
    final _elementHandle = localeToFfi(element);
    _heresdkRoutingTransitBindingslistofLocaleInsert(_result, _elementHandle);
    localeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Locale> heresdkRoutingTransitBindingslistofLocaleFromFfi(Pointer<Void> handle) {
  final result = List<Locale>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingTransitBindingslistofLocaleIterator(handle);
  while (_heresdkRoutingTransitBindingslistofLocaleIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingTransitBindingslistofLocaleIteratorGet(_iteratorHandle);
    try {
      result.add(localeFromFfi(_elementHandle));
    } finally {
      localeReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingTransitBindingslistofLocaleIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingTransitBindingslistofLocaleIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingTransitBindingslistofLocaleReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingTransitBindingslistofLocaleReleaseHandle(handle);

final _heresdkRoutingTransitBindingslistofLocaleCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_Locale_create_handle_nullable'));
final _heresdkRoutingTransitBindingslistofLocaleReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_Locale_release_handle_nullable'));
final _heresdkRoutingTransitBindingslistofLocaleGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_Locale_get_value_nullable'));

Pointer<Void> heresdkRoutingTransitBindingslistofLocaleToFfiNullable(List<Locale>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingTransitBindingslistofLocaleToFfi(value);
  final result = _heresdkRoutingTransitBindingslistofLocaleCreateHandleNullable(_handle);
  heresdkRoutingTransitBindingslistofLocaleReleaseFfiHandle(_handle);
  return result;
}

List<Locale>? heresdkRoutingTransitBindingslistofLocaleFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingTransitBindingslistofLocaleGetValueNullable(handle);
  final result = heresdkRoutingTransitBindingslistofLocaleFromFfi(_handle);
  heresdkRoutingTransitBindingslistofLocaleReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingTransitBindingslistofLocaleReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingTransitBindingslistofLocaleReleaseHandleNullable(handle);

final _heresdkRoutingTransitBindingslistofSdkCoreCountrycodeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_CountryCode_create_handle'));
final _heresdkRoutingTransitBindingslistofSdkCoreCountrycodeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_CountryCode_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkCoreCountrycodeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_CountryCode_insert'));
final _heresdkRoutingTransitBindingslistofSdkCoreCountrycodeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_CountryCode_iterator'));
final _heresdkRoutingTransitBindingslistofSdkCoreCountrycodeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_CountryCode_iterator_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkCoreCountrycodeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_CountryCode_iterator_is_valid'));
final _heresdkRoutingTransitBindingslistofSdkCoreCountrycodeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_CountryCode_iterator_increment'));
final _heresdkRoutingTransitBindingslistofSdkCoreCountrycodeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_CountryCode_iterator_get'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkCoreCountrycodeToFfi(List<CountryCode> value) {
  final _result = _heresdkRoutingTransitBindingslistofSdkCoreCountrycodeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreCountrycodeToFfi(element);
    _heresdkRoutingTransitBindingslistofSdkCoreCountrycodeInsert(_result, _elementHandle);
    sdkCoreCountrycodeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<CountryCode> heresdkRoutingTransitBindingslistofSdkCoreCountrycodeFromFfi(Pointer<Void> handle) {
  final result = List<CountryCode>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingTransitBindingslistofSdkCoreCountrycodeIterator(handle);
  while (_heresdkRoutingTransitBindingslistofSdkCoreCountrycodeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingTransitBindingslistofSdkCoreCountrycodeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreCountrycodeFromFfi(_elementHandle));
    } finally {
      sdkCoreCountrycodeReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingTransitBindingslistofSdkCoreCountrycodeIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingTransitBindingslistofSdkCoreCountrycodeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkCoreCountrycodeReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingTransitBindingslistofSdkCoreCountrycodeReleaseHandle(handle);

final _heresdkRoutingTransitBindingslistofSdkCoreCountrycodeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_CountryCode_create_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkCoreCountrycodeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_CountryCode_release_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkCoreCountrycodeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_CountryCode_get_value_nullable'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkCoreCountrycodeToFfiNullable(List<CountryCode>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingTransitBindingslistofSdkCoreCountrycodeToFfi(value);
  final result = _heresdkRoutingTransitBindingslistofSdkCoreCountrycodeCreateHandleNullable(_handle);
  heresdkRoutingTransitBindingslistofSdkCoreCountrycodeReleaseFfiHandle(_handle);
  return result;
}

List<CountryCode>? heresdkRoutingTransitBindingslistofSdkCoreCountrycodeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingTransitBindingslistofSdkCoreCountrycodeGetValueNullable(handle);
  final result = heresdkRoutingTransitBindingslistofSdkCoreCountrycodeFromFfi(_handle);
  heresdkRoutingTransitBindingslistofSdkCoreCountrycodeReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkCoreCountrycodeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingTransitBindingslistofSdkCoreCountrycodeReleaseHandleNullable(handle);

final _heresdkRoutingTransitBindingslistofSdkCoreGeoboxCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_GeoBox_create_handle'));
final _heresdkRoutingTransitBindingslistofSdkCoreGeoboxReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_GeoBox_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkCoreGeoboxInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_GeoBox_insert'));
final _heresdkRoutingTransitBindingslistofSdkCoreGeoboxIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_GeoBox_iterator'));
final _heresdkRoutingTransitBindingslistofSdkCoreGeoboxIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_GeoBox_iterator_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkCoreGeoboxIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_GeoBox_iterator_is_valid'));
final _heresdkRoutingTransitBindingslistofSdkCoreGeoboxIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_GeoBox_iterator_increment'));
final _heresdkRoutingTransitBindingslistofSdkCoreGeoboxIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_GeoBox_iterator_get'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkCoreGeoboxToFfi(List<GeoBox> value) {
  final _result = _heresdkRoutingTransitBindingslistofSdkCoreGeoboxCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreGeoboxToFfi(element);
    _heresdkRoutingTransitBindingslistofSdkCoreGeoboxInsert(_result, _elementHandle);
    sdkCoreGeoboxReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoBox> heresdkRoutingTransitBindingslistofSdkCoreGeoboxFromFfi(Pointer<Void> handle) {
  final result = List<GeoBox>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingTransitBindingslistofSdkCoreGeoboxIterator(handle);
  while (_heresdkRoutingTransitBindingslistofSdkCoreGeoboxIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingTransitBindingslistofSdkCoreGeoboxIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreGeoboxFromFfi(_elementHandle));
    } finally {
      sdkCoreGeoboxReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingTransitBindingslistofSdkCoreGeoboxIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingTransitBindingslistofSdkCoreGeoboxIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkCoreGeoboxReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingTransitBindingslistofSdkCoreGeoboxReleaseHandle(handle);

final _heresdkRoutingTransitBindingslistofSdkCoreGeoboxCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_GeoBox_create_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkCoreGeoboxReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_GeoBox_release_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkCoreGeoboxGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_GeoBox_get_value_nullable'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkCoreGeoboxToFfiNullable(List<GeoBox>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingTransitBindingslistofSdkCoreGeoboxToFfi(value);
  final result = _heresdkRoutingTransitBindingslistofSdkCoreGeoboxCreateHandleNullable(_handle);
  heresdkRoutingTransitBindingslistofSdkCoreGeoboxReleaseFfiHandle(_handle);
  return result;
}

List<GeoBox>? heresdkRoutingTransitBindingslistofSdkCoreGeoboxFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingTransitBindingslistofSdkCoreGeoboxGetValueNullable(handle);
  final result = heresdkRoutingTransitBindingslistofSdkCoreGeoboxFromFfi(_handle);
  heresdkRoutingTransitBindingslistofSdkCoreGeoboxReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkCoreGeoboxReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingTransitBindingslistofSdkCoreGeoboxReleaseHandleNullable(handle);

final _heresdkRoutingTransitBindingslistofSdkCoreGeocoordinatesCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_GeoCoordinates_create_handle'));
final _heresdkRoutingTransitBindingslistofSdkCoreGeocoordinatesReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_GeoCoordinates_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkCoreGeocoordinatesInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_GeoCoordinates_insert'));
final _heresdkRoutingTransitBindingslistofSdkCoreGeocoordinatesIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_GeoCoordinates_iterator'));
final _heresdkRoutingTransitBindingslistofSdkCoreGeocoordinatesIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_GeoCoordinates_iterator_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkCoreGeocoordinatesIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_GeoCoordinates_iterator_is_valid'));
final _heresdkRoutingTransitBindingslistofSdkCoreGeocoordinatesIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_GeoCoordinates_iterator_increment'));
final _heresdkRoutingTransitBindingslistofSdkCoreGeocoordinatesIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_GeoCoordinates_iterator_get'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkCoreGeocoordinatesToFfi(List<GeoCoordinates> value) {
  final _result = _heresdkRoutingTransitBindingslistofSdkCoreGeocoordinatesCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreGeocoordinatesToFfi(element);
    _heresdkRoutingTransitBindingslistofSdkCoreGeocoordinatesInsert(_result, _elementHandle);
    sdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoCoordinates> heresdkRoutingTransitBindingslistofSdkCoreGeocoordinatesFromFfi(Pointer<Void> handle) {
  final result = List<GeoCoordinates>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingTransitBindingslistofSdkCoreGeocoordinatesIterator(handle);
  while (_heresdkRoutingTransitBindingslistofSdkCoreGeocoordinatesIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingTransitBindingslistofSdkCoreGeocoordinatesIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreGeocoordinatesFromFfi(_elementHandle));
    } finally {
      sdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingTransitBindingslistofSdkCoreGeocoordinatesIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingTransitBindingslistofSdkCoreGeocoordinatesIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingTransitBindingslistofSdkCoreGeocoordinatesReleaseHandle(handle);

final _heresdkRoutingTransitBindingslistofSdkCoreGeocoordinatesCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_GeoCoordinates_create_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkCoreGeocoordinatesReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_GeoCoordinates_release_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkCoreGeocoordinatesGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_GeoCoordinates_get_value_nullable'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkCoreGeocoordinatesToFfiNullable(List<GeoCoordinates>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingTransitBindingslistofSdkCoreGeocoordinatesToFfi(value);
  final result = _heresdkRoutingTransitBindingslistofSdkCoreGeocoordinatesCreateHandleNullable(_handle);
  heresdkRoutingTransitBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

List<GeoCoordinates>? heresdkRoutingTransitBindingslistofSdkCoreGeocoordinatesFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingTransitBindingslistofSdkCoreGeocoordinatesGetValueNullable(handle);
  final result = heresdkRoutingTransitBindingslistofSdkCoreGeocoordinatesFromFfi(_handle);
  heresdkRoutingTransitBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkCoreGeocoordinatesReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingTransitBindingslistofSdkCoreGeocoordinatesReleaseHandleNullable(handle);

final _heresdkRoutingTransitBindingslistofSdkCoreLocalizedtextCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_LocalizedText_create_handle'));
final _heresdkRoutingTransitBindingslistofSdkCoreLocalizedtextReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_LocalizedText_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkCoreLocalizedtextInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_LocalizedText_insert'));
final _heresdkRoutingTransitBindingslistofSdkCoreLocalizedtextIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_LocalizedText_iterator'));
final _heresdkRoutingTransitBindingslistofSdkCoreLocalizedtextIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_LocalizedText_iterator_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkCoreLocalizedtextIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_LocalizedText_iterator_is_valid'));
final _heresdkRoutingTransitBindingslistofSdkCoreLocalizedtextIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_LocalizedText_iterator_increment'));
final _heresdkRoutingTransitBindingslistofSdkCoreLocalizedtextIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_LocalizedText_iterator_get'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkCoreLocalizedtextToFfi(List<LocalizedText> value) {
  final _result = _heresdkRoutingTransitBindingslistofSdkCoreLocalizedtextCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreLocalizedtextToFfi(element);
    _heresdkRoutingTransitBindingslistofSdkCoreLocalizedtextInsert(_result, _elementHandle);
    sdkCoreLocalizedtextReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<LocalizedText> heresdkRoutingTransitBindingslistofSdkCoreLocalizedtextFromFfi(Pointer<Void> handle) {
  final result = List<LocalizedText>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingTransitBindingslistofSdkCoreLocalizedtextIterator(handle);
  while (_heresdkRoutingTransitBindingslistofSdkCoreLocalizedtextIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingTransitBindingslistofSdkCoreLocalizedtextIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreLocalizedtextFromFfi(_elementHandle));
    } finally {
      sdkCoreLocalizedtextReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingTransitBindingslistofSdkCoreLocalizedtextIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingTransitBindingslistofSdkCoreLocalizedtextIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkCoreLocalizedtextReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingTransitBindingslistofSdkCoreLocalizedtextReleaseHandle(handle);

final _heresdkRoutingTransitBindingslistofSdkCoreLocalizedtextCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_LocalizedText_create_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkCoreLocalizedtextReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_LocalizedText_release_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkCoreLocalizedtextGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_LocalizedText_get_value_nullable'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkCoreLocalizedtextToFfiNullable(List<LocalizedText>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingTransitBindingslistofSdkCoreLocalizedtextToFfi(value);
  final result = _heresdkRoutingTransitBindingslistofSdkCoreLocalizedtextCreateHandleNullable(_handle);
  heresdkRoutingTransitBindingslistofSdkCoreLocalizedtextReleaseFfiHandle(_handle);
  return result;
}

List<LocalizedText>? heresdkRoutingTransitBindingslistofSdkCoreLocalizedtextFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingTransitBindingslistofSdkCoreLocalizedtextGetValueNullable(handle);
  final result = heresdkRoutingTransitBindingslistofSdkCoreLocalizedtextFromFfi(_handle);
  heresdkRoutingTransitBindingslistofSdkCoreLocalizedtextReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkCoreLocalizedtextReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingTransitBindingslistofSdkCoreLocalizedtextReleaseHandleNullable(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingAttributionCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Attribution_create_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingAttributionReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Attribution_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingAttributionInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Attribution_insert'));
final _heresdkRoutingTransitBindingslistofSdkRoutingAttributionIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Attribution_iterator'));
final _heresdkRoutingTransitBindingslistofSdkRoutingAttributionIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Attribution_iterator_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingAttributionIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Attribution_iterator_is_valid'));
final _heresdkRoutingTransitBindingslistofSdkRoutingAttributionIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Attribution_iterator_increment'));
final _heresdkRoutingTransitBindingslistofSdkRoutingAttributionIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Attribution_iterator_get'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingAttributionToFfi(List<Attribution> value) {
  final _result = _heresdkRoutingTransitBindingslistofSdkRoutingAttributionCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingAttributionToFfi(element);
    _heresdkRoutingTransitBindingslistofSdkRoutingAttributionInsert(_result, _elementHandle);
    sdkRoutingAttributionReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Attribution> heresdkRoutingTransitBindingslistofSdkRoutingAttributionFromFfi(Pointer<Void> handle) {
  final result = List<Attribution>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingTransitBindingslistofSdkRoutingAttributionIterator(handle);
  while (_heresdkRoutingTransitBindingslistofSdkRoutingAttributionIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingTransitBindingslistofSdkRoutingAttributionIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingAttributionFromFfi(_elementHandle));
    } finally {
      sdkRoutingAttributionReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingTransitBindingslistofSdkRoutingAttributionIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingTransitBindingslistofSdkRoutingAttributionIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingAttributionReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingTransitBindingslistofSdkRoutingAttributionReleaseHandle(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingAttributionCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Attribution_create_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingAttributionReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Attribution_release_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingAttributionGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Attribution_get_value_nullable'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingAttributionToFfiNullable(List<Attribution>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingTransitBindingslistofSdkRoutingAttributionToFfi(value);
  final result = _heresdkRoutingTransitBindingslistofSdkRoutingAttributionCreateHandleNullable(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingAttributionReleaseFfiHandle(_handle);
  return result;
}

List<Attribution>? heresdkRoutingTransitBindingslistofSdkRoutingAttributionFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingTransitBindingslistofSdkRoutingAttributionGetValueNullable(handle);
  final result = heresdkRoutingTransitBindingslistofSdkRoutingAttributionFromFfi(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingAttributionReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingAttributionReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingTransitBindingslistofSdkRoutingAttributionReleaseHandleNullable(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingChargingconnectortypeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_ChargingConnectorType_create_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingChargingconnectortypeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_ChargingConnectorType_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingChargingconnectortypeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_ChargingConnectorType_insert'));
final _heresdkRoutingTransitBindingslistofSdkRoutingChargingconnectortypeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_ChargingConnectorType_iterator'));
final _heresdkRoutingTransitBindingslistofSdkRoutingChargingconnectortypeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_ChargingConnectorType_iterator_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingChargingconnectortypeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_ChargingConnectorType_iterator_is_valid'));
final _heresdkRoutingTransitBindingslistofSdkRoutingChargingconnectortypeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_ChargingConnectorType_iterator_increment'));
final _heresdkRoutingTransitBindingslistofSdkRoutingChargingconnectortypeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_ChargingConnectorType_iterator_get'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingChargingconnectortypeToFfi(List<ChargingConnectorType> value) {
  final _result = _heresdkRoutingTransitBindingslistofSdkRoutingChargingconnectortypeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingChargingconnectortypeToFfi(element);
    _heresdkRoutingTransitBindingslistofSdkRoutingChargingconnectortypeInsert(_result, _elementHandle);
    sdkRoutingChargingconnectortypeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<ChargingConnectorType> heresdkRoutingTransitBindingslistofSdkRoutingChargingconnectortypeFromFfi(Pointer<Void> handle) {
  final result = List<ChargingConnectorType>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingTransitBindingslistofSdkRoutingChargingconnectortypeIterator(handle);
  while (_heresdkRoutingTransitBindingslistofSdkRoutingChargingconnectortypeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingTransitBindingslistofSdkRoutingChargingconnectortypeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingChargingconnectortypeFromFfi(_elementHandle));
    } finally {
      sdkRoutingChargingconnectortypeReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingTransitBindingslistofSdkRoutingChargingconnectortypeIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingTransitBindingslistofSdkRoutingChargingconnectortypeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingChargingconnectortypeReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingTransitBindingslistofSdkRoutingChargingconnectortypeReleaseHandle(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingChargingconnectortypeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_ChargingConnectorType_create_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingChargingconnectortypeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_ChargingConnectorType_release_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingChargingconnectortypeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_ChargingConnectorType_get_value_nullable'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingChargingconnectortypeToFfiNullable(List<ChargingConnectorType>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingTransitBindingslistofSdkRoutingChargingconnectortypeToFfi(value);
  final result = _heresdkRoutingTransitBindingslistofSdkRoutingChargingconnectortypeCreateHandleNullable(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingChargingconnectortypeReleaseFfiHandle(_handle);
  return result;
}

List<ChargingConnectorType>? heresdkRoutingTransitBindingslistofSdkRoutingChargingconnectortypeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingTransitBindingslistofSdkRoutingChargingconnectortypeGetValueNullable(handle);
  final result = heresdkRoutingTransitBindingslistofSdkRoutingChargingconnectortypeFromFfi(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingChargingconnectortypeReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingChargingconnectortypeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingTransitBindingslistofSdkRoutingChargingconnectortypeReleaseHandleNullable(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingFareCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Fare_create_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingFareReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Fare_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingFareInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Fare_insert'));
final _heresdkRoutingTransitBindingslistofSdkRoutingFareIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Fare_iterator'));
final _heresdkRoutingTransitBindingslistofSdkRoutingFareIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Fare_iterator_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingFareIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Fare_iterator_is_valid'));
final _heresdkRoutingTransitBindingslistofSdkRoutingFareIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Fare_iterator_increment'));
final _heresdkRoutingTransitBindingslistofSdkRoutingFareIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Fare_iterator_get'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingFareToFfi(List<Fare> value) {
  final _result = _heresdkRoutingTransitBindingslistofSdkRoutingFareCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingFareToFfi(element);
    _heresdkRoutingTransitBindingslistofSdkRoutingFareInsert(_result, _elementHandle);
    sdkRoutingFareReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Fare> heresdkRoutingTransitBindingslistofSdkRoutingFareFromFfi(Pointer<Void> handle) {
  final result = List<Fare>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingTransitBindingslistofSdkRoutingFareIterator(handle);
  while (_heresdkRoutingTransitBindingslistofSdkRoutingFareIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingTransitBindingslistofSdkRoutingFareIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingFareFromFfi(_elementHandle));
    } finally {
      sdkRoutingFareReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingTransitBindingslistofSdkRoutingFareIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingTransitBindingslistofSdkRoutingFareIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingFareReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingTransitBindingslistofSdkRoutingFareReleaseHandle(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingFareCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Fare_create_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingFareReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Fare_release_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingFareGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Fare_get_value_nullable'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingFareToFfiNullable(List<Fare>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingTransitBindingslistofSdkRoutingFareToFfi(value);
  final result = _heresdkRoutingTransitBindingslistofSdkRoutingFareCreateHandleNullable(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingFareReleaseFfiHandle(_handle);
  return result;
}

List<Fare>? heresdkRoutingTransitBindingslistofSdkRoutingFareFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingTransitBindingslistofSdkRoutingFareGetValueNullable(handle);
  final result = heresdkRoutingTransitBindingslistofSdkRoutingFareFromFfi(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingFareReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingFareReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingTransitBindingslistofSdkRoutingFareReleaseHandleNullable(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingHazardousgoodCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_HazardousGood_create_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingHazardousgoodReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_HazardousGood_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingHazardousgoodInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_HazardousGood_insert'));
final _heresdkRoutingTransitBindingslistofSdkRoutingHazardousgoodIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_HazardousGood_iterator'));
final _heresdkRoutingTransitBindingslistofSdkRoutingHazardousgoodIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_HazardousGood_iterator_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingHazardousgoodIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_HazardousGood_iterator_is_valid'));
final _heresdkRoutingTransitBindingslistofSdkRoutingHazardousgoodIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_HazardousGood_iterator_increment'));
final _heresdkRoutingTransitBindingslistofSdkRoutingHazardousgoodIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_HazardousGood_iterator_get'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingHazardousgoodToFfi(List<HazardousGood> value) {
  final _result = _heresdkRoutingTransitBindingslistofSdkRoutingHazardousgoodCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingHazardousgoodToFfi(element);
    _heresdkRoutingTransitBindingslistofSdkRoutingHazardousgoodInsert(_result, _elementHandle);
    sdkRoutingHazardousgoodReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<HazardousGood> heresdkRoutingTransitBindingslistofSdkRoutingHazardousgoodFromFfi(Pointer<Void> handle) {
  final result = List<HazardousGood>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingTransitBindingslistofSdkRoutingHazardousgoodIterator(handle);
  while (_heresdkRoutingTransitBindingslistofSdkRoutingHazardousgoodIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingTransitBindingslistofSdkRoutingHazardousgoodIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingHazardousgoodFromFfi(_elementHandle));
    } finally {
      sdkRoutingHazardousgoodReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingTransitBindingslistofSdkRoutingHazardousgoodIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingTransitBindingslistofSdkRoutingHazardousgoodIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingHazardousgoodReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingTransitBindingslistofSdkRoutingHazardousgoodReleaseHandle(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingHazardousgoodCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_HazardousGood_create_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingHazardousgoodReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_HazardousGood_release_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingHazardousgoodGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_HazardousGood_get_value_nullable'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingHazardousgoodToFfiNullable(List<HazardousGood>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingTransitBindingslistofSdkRoutingHazardousgoodToFfi(value);
  final result = _heresdkRoutingTransitBindingslistofSdkRoutingHazardousgoodCreateHandleNullable(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingHazardousgoodReleaseFfiHandle(_handle);
  return result;
}

List<HazardousGood>? heresdkRoutingTransitBindingslistofSdkRoutingHazardousgoodFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingTransitBindingslistofSdkRoutingHazardousgoodGetValueNullable(handle);
  final result = heresdkRoutingTransitBindingslistofSdkRoutingHazardousgoodFromFfi(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingHazardousgoodReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingHazardousgoodReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingTransitBindingslistofSdkRoutingHazardousgoodReleaseHandleNullable(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingManeuverCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Maneuver_create_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingManeuverReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Maneuver_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingManeuverInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Maneuver_insert'));
final _heresdkRoutingTransitBindingslistofSdkRoutingManeuverIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Maneuver_iterator'));
final _heresdkRoutingTransitBindingslistofSdkRoutingManeuverIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Maneuver_iterator_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingManeuverIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Maneuver_iterator_is_valid'));
final _heresdkRoutingTransitBindingslistofSdkRoutingManeuverIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Maneuver_iterator_increment'));
final _heresdkRoutingTransitBindingslistofSdkRoutingManeuverIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Maneuver_iterator_get'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingManeuverToFfi(List<Maneuver> value) {
  final _result = _heresdkRoutingTransitBindingslistofSdkRoutingManeuverCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingManeuverToFfi(element);
    _heresdkRoutingTransitBindingslistofSdkRoutingManeuverInsert(_result, _elementHandle);
    sdkRoutingManeuverReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Maneuver> heresdkRoutingTransitBindingslistofSdkRoutingManeuverFromFfi(Pointer<Void> handle) {
  final result = List<Maneuver>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingTransitBindingslistofSdkRoutingManeuverIterator(handle);
  while (_heresdkRoutingTransitBindingslistofSdkRoutingManeuverIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingTransitBindingslistofSdkRoutingManeuverIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingManeuverFromFfi(_elementHandle));
    } finally {
      sdkRoutingManeuverReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingTransitBindingslistofSdkRoutingManeuverIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingTransitBindingslistofSdkRoutingManeuverIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingManeuverReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingTransitBindingslistofSdkRoutingManeuverReleaseHandle(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingManeuverCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Maneuver_create_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingManeuverReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Maneuver_release_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingManeuverGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Maneuver_get_value_nullable'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingManeuverToFfiNullable(List<Maneuver>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingTransitBindingslistofSdkRoutingManeuverToFfi(value);
  final result = _heresdkRoutingTransitBindingslistofSdkRoutingManeuverCreateHandleNullable(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingManeuverReleaseFfiHandle(_handle);
  return result;
}

List<Maneuver>? heresdkRoutingTransitBindingslistofSdkRoutingManeuverFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingTransitBindingslistofSdkRoutingManeuverGetValueNullable(handle);
  final result = heresdkRoutingTransitBindingslistofSdkRoutingManeuverFromFfi(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingManeuverReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingManeuverReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingTransitBindingslistofSdkRoutingManeuverReleaseHandleNullable(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingPaymentmethodCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_PaymentMethod_create_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingPaymentmethodReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_PaymentMethod_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingPaymentmethodInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_PaymentMethod_insert'));
final _heresdkRoutingTransitBindingslistofSdkRoutingPaymentmethodIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_PaymentMethod_iterator'));
final _heresdkRoutingTransitBindingslistofSdkRoutingPaymentmethodIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_PaymentMethod_iterator_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingPaymentmethodIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_PaymentMethod_iterator_is_valid'));
final _heresdkRoutingTransitBindingslistofSdkRoutingPaymentmethodIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_PaymentMethod_iterator_increment'));
final _heresdkRoutingTransitBindingslistofSdkRoutingPaymentmethodIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_PaymentMethod_iterator_get'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingPaymentmethodToFfi(List<PaymentMethod> value) {
  final _result = _heresdkRoutingTransitBindingslistofSdkRoutingPaymentmethodCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingPaymentmethodToFfi(element);
    _heresdkRoutingTransitBindingslistofSdkRoutingPaymentmethodInsert(_result, _elementHandle);
    sdkRoutingPaymentmethodReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<PaymentMethod> heresdkRoutingTransitBindingslistofSdkRoutingPaymentmethodFromFfi(Pointer<Void> handle) {
  final result = List<PaymentMethod>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingTransitBindingslistofSdkRoutingPaymentmethodIterator(handle);
  while (_heresdkRoutingTransitBindingslistofSdkRoutingPaymentmethodIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingTransitBindingslistofSdkRoutingPaymentmethodIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingPaymentmethodFromFfi(_elementHandle));
    } finally {
      sdkRoutingPaymentmethodReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingTransitBindingslistofSdkRoutingPaymentmethodIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingTransitBindingslistofSdkRoutingPaymentmethodIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingPaymentmethodReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingTransitBindingslistofSdkRoutingPaymentmethodReleaseHandle(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingPaymentmethodCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_PaymentMethod_create_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingPaymentmethodReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_PaymentMethod_release_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingPaymentmethodGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_PaymentMethod_get_value_nullable'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingPaymentmethodToFfiNullable(List<PaymentMethod>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingTransitBindingslistofSdkRoutingPaymentmethodToFfi(value);
  final result = _heresdkRoutingTransitBindingslistofSdkRoutingPaymentmethodCreateHandleNullable(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingPaymentmethodReleaseFfiHandle(_handle);
  return result;
}

List<PaymentMethod>? heresdkRoutingTransitBindingslistofSdkRoutingPaymentmethodFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingTransitBindingslistofSdkRoutingPaymentmethodGetValueNullable(handle);
  final result = heresdkRoutingTransitBindingslistofSdkRoutingPaymentmethodFromFfi(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingPaymentmethodReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingPaymentmethodReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingTransitBindingslistofSdkRoutingPaymentmethodReleaseHandleNullable(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingPostactionCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_PostAction_create_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingPostactionReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_PostAction_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingPostactionInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_PostAction_insert'));
final _heresdkRoutingTransitBindingslistofSdkRoutingPostactionIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_PostAction_iterator'));
final _heresdkRoutingTransitBindingslistofSdkRoutingPostactionIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_PostAction_iterator_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingPostactionIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_PostAction_iterator_is_valid'));
final _heresdkRoutingTransitBindingslistofSdkRoutingPostactionIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_PostAction_iterator_increment'));
final _heresdkRoutingTransitBindingslistofSdkRoutingPostactionIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_PostAction_iterator_get'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingPostactionToFfi(List<PostAction> value) {
  final _result = _heresdkRoutingTransitBindingslistofSdkRoutingPostactionCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingPostactionToFfi(element);
    _heresdkRoutingTransitBindingslistofSdkRoutingPostactionInsert(_result, _elementHandle);
    sdkRoutingPostactionReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<PostAction> heresdkRoutingTransitBindingslistofSdkRoutingPostactionFromFfi(Pointer<Void> handle) {
  final result = List<PostAction>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingTransitBindingslistofSdkRoutingPostactionIterator(handle);
  while (_heresdkRoutingTransitBindingslistofSdkRoutingPostactionIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingTransitBindingslistofSdkRoutingPostactionIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingPostactionFromFfi(_elementHandle));
    } finally {
      sdkRoutingPostactionReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingTransitBindingslistofSdkRoutingPostactionIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingTransitBindingslistofSdkRoutingPostactionIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingPostactionReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingTransitBindingslistofSdkRoutingPostactionReleaseHandle(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingPostactionCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_PostAction_create_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingPostactionReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_PostAction_release_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingPostactionGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_PostAction_get_value_nullable'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingPostactionToFfiNullable(List<PostAction>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingTransitBindingslistofSdkRoutingPostactionToFfi(value);
  final result = _heresdkRoutingTransitBindingslistofSdkRoutingPostactionCreateHandleNullable(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingPostactionReleaseFfiHandle(_handle);
  return result;
}

List<PostAction>? heresdkRoutingTransitBindingslistofSdkRoutingPostactionFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingTransitBindingslistofSdkRoutingPostactionGetValueNullable(handle);
  final result = heresdkRoutingTransitBindingslistofSdkRoutingPostactionFromFfi(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingPostactionReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingPostactionReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingTransitBindingslistofSdkRoutingPostactionReleaseHandleNullable(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingPreactionCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_PreAction_create_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingPreactionReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_PreAction_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingPreactionInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_PreAction_insert'));
final _heresdkRoutingTransitBindingslistofSdkRoutingPreactionIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_PreAction_iterator'));
final _heresdkRoutingTransitBindingslistofSdkRoutingPreactionIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_PreAction_iterator_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingPreactionIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_PreAction_iterator_is_valid'));
final _heresdkRoutingTransitBindingslistofSdkRoutingPreactionIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_PreAction_iterator_increment'));
final _heresdkRoutingTransitBindingslistofSdkRoutingPreactionIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_PreAction_iterator_get'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingPreactionToFfi(List<PreAction> value) {
  final _result = _heresdkRoutingTransitBindingslistofSdkRoutingPreactionCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingPreactionToFfi(element);
    _heresdkRoutingTransitBindingslistofSdkRoutingPreactionInsert(_result, _elementHandle);
    sdkRoutingPreactionReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<PreAction> heresdkRoutingTransitBindingslistofSdkRoutingPreactionFromFfi(Pointer<Void> handle) {
  final result = List<PreAction>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingTransitBindingslistofSdkRoutingPreactionIterator(handle);
  while (_heresdkRoutingTransitBindingslistofSdkRoutingPreactionIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingTransitBindingslistofSdkRoutingPreactionIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingPreactionFromFfi(_elementHandle));
    } finally {
      sdkRoutingPreactionReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingTransitBindingslistofSdkRoutingPreactionIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingTransitBindingslistofSdkRoutingPreactionIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingPreactionReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingTransitBindingslistofSdkRoutingPreactionReleaseHandle(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingPreactionCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_PreAction_create_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingPreactionReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_PreAction_release_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingPreactionGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_PreAction_get_value_nullable'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingPreactionToFfiNullable(List<PreAction>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingTransitBindingslistofSdkRoutingPreactionToFfi(value);
  final result = _heresdkRoutingTransitBindingslistofSdkRoutingPreactionCreateHandleNullable(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingPreactionReleaseFfiHandle(_handle);
  return result;
}

List<PreAction>? heresdkRoutingTransitBindingslistofSdkRoutingPreactionFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingTransitBindingslistofSdkRoutingPreactionGetValueNullable(handle);
  final result = heresdkRoutingTransitBindingslistofSdkRoutingPreactionFromFfi(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingPreactionReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingPreactionReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingTransitBindingslistofSdkRoutingPreactionReleaseHandleNullable(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingRoadfeaturesCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_RoadFeatures_create_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingRoadfeaturesReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_RoadFeatures_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingRoadfeaturesInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_RoadFeatures_insert'));
final _heresdkRoutingTransitBindingslistofSdkRoutingRoadfeaturesIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_RoadFeatures_iterator'));
final _heresdkRoutingTransitBindingslistofSdkRoutingRoadfeaturesIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_RoadFeatures_iterator_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingRoadfeaturesIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_RoadFeatures_iterator_is_valid'));
final _heresdkRoutingTransitBindingslistofSdkRoutingRoadfeaturesIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_RoadFeatures_iterator_increment'));
final _heresdkRoutingTransitBindingslistofSdkRoutingRoadfeaturesIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_RoadFeatures_iterator_get'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingRoadfeaturesToFfi(List<RoadFeatures> value) {
  final _result = _heresdkRoutingTransitBindingslistofSdkRoutingRoadfeaturesCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingRoadfeaturesToFfi(element);
    _heresdkRoutingTransitBindingslistofSdkRoutingRoadfeaturesInsert(_result, _elementHandle);
    sdkRoutingRoadfeaturesReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<RoadFeatures> heresdkRoutingTransitBindingslistofSdkRoutingRoadfeaturesFromFfi(Pointer<Void> handle) {
  final result = List<RoadFeatures>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingTransitBindingslistofSdkRoutingRoadfeaturesIterator(handle);
  while (_heresdkRoutingTransitBindingslistofSdkRoutingRoadfeaturesIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingTransitBindingslistofSdkRoutingRoadfeaturesIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingRoadfeaturesFromFfi(_elementHandle));
    } finally {
      sdkRoutingRoadfeaturesReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingTransitBindingslistofSdkRoutingRoadfeaturesIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingTransitBindingslistofSdkRoutingRoadfeaturesIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingRoadfeaturesReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingTransitBindingslistofSdkRoutingRoadfeaturesReleaseHandle(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingRoadfeaturesCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_RoadFeatures_create_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingRoadfeaturesReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_RoadFeatures_release_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingRoadfeaturesGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_RoadFeatures_get_value_nullable'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingRoadfeaturesToFfiNullable(List<RoadFeatures>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingTransitBindingslistofSdkRoutingRoadfeaturesToFfi(value);
  final result = _heresdkRoutingTransitBindingslistofSdkRoutingRoadfeaturesCreateHandleNullable(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingRoadfeaturesReleaseFfiHandle(_handle);
  return result;
}

List<RoadFeatures>? heresdkRoutingTransitBindingslistofSdkRoutingRoadfeaturesFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingTransitBindingslistofSdkRoutingRoadfeaturesGetValueNullable(handle);
  final result = heresdkRoutingTransitBindingslistofSdkRoutingRoadfeaturesFromFfi(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingRoadfeaturesReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingRoadfeaturesReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingTransitBindingslistofSdkRoutingRoadfeaturesReleaseHandleNullable(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingRouteCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Route_create_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingRouteReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Route_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingRouteInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Route_insert'));
final _heresdkRoutingTransitBindingslistofSdkRoutingRouteIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Route_iterator'));
final _heresdkRoutingTransitBindingslistofSdkRoutingRouteIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Route_iterator_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingRouteIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Route_iterator_is_valid'));
final _heresdkRoutingTransitBindingslistofSdkRoutingRouteIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Route_iterator_increment'));
final _heresdkRoutingTransitBindingslistofSdkRoutingRouteIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Route_iterator_get'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingRouteToFfi(List<Route> value) {
  final _result = _heresdkRoutingTransitBindingslistofSdkRoutingRouteCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingRouteToFfi(element);
    _heresdkRoutingTransitBindingslistofSdkRoutingRouteInsert(_result, _elementHandle);
    sdkRoutingRouteReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Route> heresdkRoutingTransitBindingslistofSdkRoutingRouteFromFfi(Pointer<Void> handle) {
  final result = List<Route>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingTransitBindingslistofSdkRoutingRouteIterator(handle);
  while (_heresdkRoutingTransitBindingslistofSdkRoutingRouteIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingTransitBindingslistofSdkRoutingRouteIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingRouteFromFfi(_elementHandle));
    } finally {
      sdkRoutingRouteReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingTransitBindingslistofSdkRoutingRouteIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingTransitBindingslistofSdkRoutingRouteIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingRouteReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingTransitBindingslistofSdkRoutingRouteReleaseHandle(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingRouteCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Route_create_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingRouteReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Route_release_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingRouteGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Route_get_value_nullable'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingRouteToFfiNullable(List<Route>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingTransitBindingslistofSdkRoutingRouteToFfi(value);
  final result = _heresdkRoutingTransitBindingslistofSdkRoutingRouteCreateHandleNullable(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingRouteReleaseFfiHandle(_handle);
  return result;
}

List<Route>? heresdkRoutingTransitBindingslistofSdkRoutingRouteFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingTransitBindingslistofSdkRoutingRouteGetValueNullable(handle);
  final result = heresdkRoutingTransitBindingslistofSdkRoutingRouteFromFfi(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingRouteReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingRouteReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingTransitBindingslistofSdkRoutingRouteReleaseHandleNullable(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingSectionCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Section_create_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingSectionReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Section_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingSectionInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Section_insert'));
final _heresdkRoutingTransitBindingslistofSdkRoutingSectionIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Section_iterator'));
final _heresdkRoutingTransitBindingslistofSdkRoutingSectionIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Section_iterator_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingSectionIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Section_iterator_is_valid'));
final _heresdkRoutingTransitBindingslistofSdkRoutingSectionIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Section_iterator_increment'));
final _heresdkRoutingTransitBindingslistofSdkRoutingSectionIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Section_iterator_get'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingSectionToFfi(List<Section> value) {
  final _result = _heresdkRoutingTransitBindingslistofSdkRoutingSectionCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingSectionToFfi(element);
    _heresdkRoutingTransitBindingslistofSdkRoutingSectionInsert(_result, _elementHandle);
    sdkRoutingSectionReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Section> heresdkRoutingTransitBindingslistofSdkRoutingSectionFromFfi(Pointer<Void> handle) {
  final result = List<Section>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingTransitBindingslistofSdkRoutingSectionIterator(handle);
  while (_heresdkRoutingTransitBindingslistofSdkRoutingSectionIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingTransitBindingslistofSdkRoutingSectionIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingSectionFromFfi(_elementHandle));
    } finally {
      sdkRoutingSectionReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingTransitBindingslistofSdkRoutingSectionIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingTransitBindingslistofSdkRoutingSectionIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingSectionReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingTransitBindingslistofSdkRoutingSectionReleaseHandle(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingSectionCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Section_create_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingSectionReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Section_release_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingSectionGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Section_get_value_nullable'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingSectionToFfiNullable(List<Section>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingTransitBindingslistofSdkRoutingSectionToFfi(value);
  final result = _heresdkRoutingTransitBindingslistofSdkRoutingSectionCreateHandleNullable(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingSectionReleaseFfiHandle(_handle);
  return result;
}

List<Section>? heresdkRoutingTransitBindingslistofSdkRoutingSectionFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingTransitBindingslistofSdkRoutingSectionGetValueNullable(handle);
  final result = heresdkRoutingTransitBindingslistofSdkRoutingSectionFromFfi(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingSectionReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingSectionReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingTransitBindingslistofSdkRoutingSectionReleaseHandleNullable(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingSectionnoticeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_SectionNotice_create_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingSectionnoticeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_SectionNotice_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingSectionnoticeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_SectionNotice_insert'));
final _heresdkRoutingTransitBindingslistofSdkRoutingSectionnoticeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_SectionNotice_iterator'));
final _heresdkRoutingTransitBindingslistofSdkRoutingSectionnoticeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_SectionNotice_iterator_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingSectionnoticeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_SectionNotice_iterator_is_valid'));
final _heresdkRoutingTransitBindingslistofSdkRoutingSectionnoticeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_SectionNotice_iterator_increment'));
final _heresdkRoutingTransitBindingslistofSdkRoutingSectionnoticeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_SectionNotice_iterator_get'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingSectionnoticeToFfi(List<SectionNotice> value) {
  final _result = _heresdkRoutingTransitBindingslistofSdkRoutingSectionnoticeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingSectionnoticeToFfi(element);
    _heresdkRoutingTransitBindingslistofSdkRoutingSectionnoticeInsert(_result, _elementHandle);
    sdkRoutingSectionnoticeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<SectionNotice> heresdkRoutingTransitBindingslistofSdkRoutingSectionnoticeFromFfi(Pointer<Void> handle) {
  final result = List<SectionNotice>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingTransitBindingslistofSdkRoutingSectionnoticeIterator(handle);
  while (_heresdkRoutingTransitBindingslistofSdkRoutingSectionnoticeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingTransitBindingslistofSdkRoutingSectionnoticeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingSectionnoticeFromFfi(_elementHandle));
    } finally {
      sdkRoutingSectionnoticeReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingTransitBindingslistofSdkRoutingSectionnoticeIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingTransitBindingslistofSdkRoutingSectionnoticeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingSectionnoticeReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingTransitBindingslistofSdkRoutingSectionnoticeReleaseHandle(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingSectionnoticeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_SectionNotice_create_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingSectionnoticeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_SectionNotice_release_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingSectionnoticeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_SectionNotice_get_value_nullable'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingSectionnoticeToFfiNullable(List<SectionNotice>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingTransitBindingslistofSdkRoutingSectionnoticeToFfi(value);
  final result = _heresdkRoutingTransitBindingslistofSdkRoutingSectionnoticeCreateHandleNullable(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingSectionnoticeReleaseFfiHandle(_handle);
  return result;
}

List<SectionNotice>? heresdkRoutingTransitBindingslistofSdkRoutingSectionnoticeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingTransitBindingslistofSdkRoutingSectionnoticeGetValueNullable(handle);
  final result = heresdkRoutingTransitBindingslistofSdkRoutingSectionnoticeFromFfi(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingSectionnoticeReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingSectionnoticeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingTransitBindingslistofSdkRoutingSectionnoticeReleaseHandleNullable(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingSegmentreferenceCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_SegmentReference_create_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingSegmentreferenceReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_SegmentReference_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingSegmentreferenceInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_SegmentReference_insert'));
final _heresdkRoutingTransitBindingslistofSdkRoutingSegmentreferenceIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_SegmentReference_iterator'));
final _heresdkRoutingTransitBindingslistofSdkRoutingSegmentreferenceIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_SegmentReference_iterator_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingSegmentreferenceIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_SegmentReference_iterator_is_valid'));
final _heresdkRoutingTransitBindingslistofSdkRoutingSegmentreferenceIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_SegmentReference_iterator_increment'));
final _heresdkRoutingTransitBindingslistofSdkRoutingSegmentreferenceIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_SegmentReference_iterator_get'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingSegmentreferenceToFfi(List<SegmentReference> value) {
  final _result = _heresdkRoutingTransitBindingslistofSdkRoutingSegmentreferenceCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingSegmentreferenceToFfi(element);
    _heresdkRoutingTransitBindingslistofSdkRoutingSegmentreferenceInsert(_result, _elementHandle);
    sdkRoutingSegmentreferenceReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<SegmentReference> heresdkRoutingTransitBindingslistofSdkRoutingSegmentreferenceFromFfi(Pointer<Void> handle) {
  final result = List<SegmentReference>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingTransitBindingslistofSdkRoutingSegmentreferenceIterator(handle);
  while (_heresdkRoutingTransitBindingslistofSdkRoutingSegmentreferenceIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingTransitBindingslistofSdkRoutingSegmentreferenceIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingSegmentreferenceFromFfi(_elementHandle));
    } finally {
      sdkRoutingSegmentreferenceReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingTransitBindingslistofSdkRoutingSegmentreferenceIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingTransitBindingslistofSdkRoutingSegmentreferenceIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingSegmentreferenceReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingTransitBindingslistofSdkRoutingSegmentreferenceReleaseHandle(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingSegmentreferenceCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_SegmentReference_create_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingSegmentreferenceReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_SegmentReference_release_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingSegmentreferenceGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_SegmentReference_get_value_nullable'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingSegmentreferenceToFfiNullable(List<SegmentReference>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingTransitBindingslistofSdkRoutingSegmentreferenceToFfi(value);
  final result = _heresdkRoutingTransitBindingslistofSdkRoutingSegmentreferenceCreateHandleNullable(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingSegmentreferenceReleaseFfiHandle(_handle);
  return result;
}

List<SegmentReference>? heresdkRoutingTransitBindingslistofSdkRoutingSegmentreferenceFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingTransitBindingslistofSdkRoutingSegmentreferenceGetValueNullable(handle);
  final result = heresdkRoutingTransitBindingslistofSdkRoutingSegmentreferenceFromFfi(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingSegmentreferenceReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingSegmentreferenceReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingTransitBindingslistofSdkRoutingSegmentreferenceReleaseHandleNullable(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingSpanCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Span_create_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingSpanReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Span_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingSpanInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Span_insert'));
final _heresdkRoutingTransitBindingslistofSdkRoutingSpanIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Span_iterator'));
final _heresdkRoutingTransitBindingslistofSdkRoutingSpanIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Span_iterator_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingSpanIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Span_iterator_is_valid'));
final _heresdkRoutingTransitBindingslistofSdkRoutingSpanIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Span_iterator_increment'));
final _heresdkRoutingTransitBindingslistofSdkRoutingSpanIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Span_iterator_get'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingSpanToFfi(List<Span> value) {
  final _result = _heresdkRoutingTransitBindingslistofSdkRoutingSpanCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingSpanToFfi(element);
    _heresdkRoutingTransitBindingslistofSdkRoutingSpanInsert(_result, _elementHandle);
    sdkRoutingSpanReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Span> heresdkRoutingTransitBindingslistofSdkRoutingSpanFromFfi(Pointer<Void> handle) {
  final result = List<Span>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingTransitBindingslistofSdkRoutingSpanIterator(handle);
  while (_heresdkRoutingTransitBindingslistofSdkRoutingSpanIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingTransitBindingslistofSdkRoutingSpanIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingSpanFromFfi(_elementHandle));
    } finally {
      sdkRoutingSpanReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingTransitBindingslistofSdkRoutingSpanIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingTransitBindingslistofSdkRoutingSpanIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingSpanReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingTransitBindingslistofSdkRoutingSpanReleaseHandle(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingSpanCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Span_create_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingSpanReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Span_release_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingSpanGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Span_get_value_nullable'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingSpanToFfiNullable(List<Span>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingTransitBindingslistofSdkRoutingSpanToFfi(value);
  final result = _heresdkRoutingTransitBindingslistofSdkRoutingSpanCreateHandleNullable(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingSpanReleaseFfiHandle(_handle);
  return result;
}

List<Span>? heresdkRoutingTransitBindingslistofSdkRoutingSpanFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingTransitBindingslistofSdkRoutingSpanGetValueNullable(handle);
  final result = heresdkRoutingTransitBindingslistofSdkRoutingSpanFromFfi(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingSpanReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingSpanReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingTransitBindingslistofSdkRoutingSpanReleaseHandleNullable(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingTollCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Toll_create_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTollReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Toll_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTollInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Toll_insert'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTollIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Toll_iterator'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTollIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Toll_iterator_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTollIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Toll_iterator_is_valid'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTollIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Toll_iterator_increment'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTollIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Toll_iterator_get'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingTollToFfi(List<Toll> value) {
  final _result = _heresdkRoutingTransitBindingslistofSdkRoutingTollCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingTollToFfi(element);
    _heresdkRoutingTransitBindingslistofSdkRoutingTollInsert(_result, _elementHandle);
    sdkRoutingTollReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Toll> heresdkRoutingTransitBindingslistofSdkRoutingTollFromFfi(Pointer<Void> handle) {
  final result = List<Toll>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingTransitBindingslistofSdkRoutingTollIterator(handle);
  while (_heresdkRoutingTransitBindingslistofSdkRoutingTollIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingTransitBindingslistofSdkRoutingTollIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingTollFromFfi(_elementHandle));
    } finally {
      sdkRoutingTollReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingTransitBindingslistofSdkRoutingTollIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingTransitBindingslistofSdkRoutingTollIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingTollReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingTransitBindingslistofSdkRoutingTollReleaseHandle(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingTollCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Toll_create_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTollReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Toll_release_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTollGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Toll_get_value_nullable'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingTollToFfiNullable(List<Toll>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingTransitBindingslistofSdkRoutingTollToFfi(value);
  final result = _heresdkRoutingTransitBindingslistofSdkRoutingTollCreateHandleNullable(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingTollReleaseFfiHandle(_handle);
  return result;
}

List<Toll>? heresdkRoutingTransitBindingslistofSdkRoutingTollFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingTransitBindingslistofSdkRoutingTollGetValueNullable(handle);
  final result = heresdkRoutingTransitBindingslistofSdkRoutingTollFromFfi(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingTollReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingTollReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingTransitBindingslistofSdkRoutingTollReleaseHandleNullable(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingTollfareCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TollFare_create_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTollfareReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TollFare_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTollfareInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TollFare_insert'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTollfareIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TollFare_iterator'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTollfareIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TollFare_iterator_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTollfareIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TollFare_iterator_is_valid'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTollfareIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TollFare_iterator_increment'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTollfareIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TollFare_iterator_get'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingTollfareToFfi(List<TollFare> value) {
  final _result = _heresdkRoutingTransitBindingslistofSdkRoutingTollfareCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingTollfareToFfi(element);
    _heresdkRoutingTransitBindingslistofSdkRoutingTollfareInsert(_result, _elementHandle);
    sdkRoutingTollfareReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<TollFare> heresdkRoutingTransitBindingslistofSdkRoutingTollfareFromFfi(Pointer<Void> handle) {
  final result = List<TollFare>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingTransitBindingslistofSdkRoutingTollfareIterator(handle);
  while (_heresdkRoutingTransitBindingslistofSdkRoutingTollfareIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingTransitBindingslistofSdkRoutingTollfareIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingTollfareFromFfi(_elementHandle));
    } finally {
      sdkRoutingTollfareReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingTransitBindingslistofSdkRoutingTollfareIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingTransitBindingslistofSdkRoutingTollfareIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingTollfareReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingTransitBindingslistofSdkRoutingTollfareReleaseHandle(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingTollfareCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TollFare_create_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTollfareReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TollFare_release_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTollfareGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TollFare_get_value_nullable'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingTollfareToFfiNullable(List<TollFare>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingTransitBindingslistofSdkRoutingTollfareToFfi(value);
  final result = _heresdkRoutingTransitBindingslistofSdkRoutingTollfareCreateHandleNullable(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingTollfareReleaseFfiHandle(_handle);
  return result;
}

List<TollFare>? heresdkRoutingTransitBindingslistofSdkRoutingTollfareFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingTransitBindingslistofSdkRoutingTollfareGetValueNullable(handle);
  final result = heresdkRoutingTransitBindingslistofSdkRoutingTollfareFromFfi(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingTollfareReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingTollfareReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingTransitBindingslistofSdkRoutingTollfareReleaseHandleNullable(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingTrafficspeedCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TrafficSpeed_create_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTrafficspeedReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TrafficSpeed_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTrafficspeedInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TrafficSpeed_insert'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTrafficspeedIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TrafficSpeed_iterator'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTrafficspeedIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TrafficSpeed_iterator_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTrafficspeedIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TrafficSpeed_iterator_is_valid'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTrafficspeedIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TrafficSpeed_iterator_increment'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTrafficspeedIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TrafficSpeed_iterator_get'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingTrafficspeedToFfi(List<TrafficSpeed> value) {
  final _result = _heresdkRoutingTransitBindingslistofSdkRoutingTrafficspeedCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingTrafficspeedToFfi(element);
    _heresdkRoutingTransitBindingslistofSdkRoutingTrafficspeedInsert(_result, _elementHandle);
    sdkRoutingTrafficspeedReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<TrafficSpeed> heresdkRoutingTransitBindingslistofSdkRoutingTrafficspeedFromFfi(Pointer<Void> handle) {
  final result = List<TrafficSpeed>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingTransitBindingslistofSdkRoutingTrafficspeedIterator(handle);
  while (_heresdkRoutingTransitBindingslistofSdkRoutingTrafficspeedIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingTransitBindingslistofSdkRoutingTrafficspeedIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingTrafficspeedFromFfi(_elementHandle));
    } finally {
      sdkRoutingTrafficspeedReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingTransitBindingslistofSdkRoutingTrafficspeedIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingTransitBindingslistofSdkRoutingTrafficspeedIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingTrafficspeedReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingTransitBindingslistofSdkRoutingTrafficspeedReleaseHandle(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingTrafficspeedCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TrafficSpeed_create_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTrafficspeedReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TrafficSpeed_release_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTrafficspeedGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TrafficSpeed_get_value_nullable'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingTrafficspeedToFfiNullable(List<TrafficSpeed>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingTransitBindingslistofSdkRoutingTrafficspeedToFfi(value);
  final result = _heresdkRoutingTransitBindingslistofSdkRoutingTrafficspeedCreateHandleNullable(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingTrafficspeedReleaseFfiHandle(_handle);
  return result;
}

List<TrafficSpeed>? heresdkRoutingTransitBindingslistofSdkRoutingTrafficspeedFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingTransitBindingslistofSdkRoutingTrafficspeedGetValueNullable(handle);
  final result = heresdkRoutingTransitBindingslistofSdkRoutingTrafficspeedFromFfi(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingTrafficspeedReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingTrafficspeedReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingTransitBindingslistofSdkRoutingTrafficspeedReleaseHandleNullable(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingTransitincidentCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TransitIncident_create_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTransitincidentReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TransitIncident_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTransitincidentInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TransitIncident_insert'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTransitincidentIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TransitIncident_iterator'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTransitincidentIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TransitIncident_iterator_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTransitincidentIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TransitIncident_iterator_is_valid'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTransitincidentIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TransitIncident_iterator_increment'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTransitincidentIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TransitIncident_iterator_get'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingTransitincidentToFfi(List<TransitIncident> value) {
  final _result = _heresdkRoutingTransitBindingslistofSdkRoutingTransitincidentCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingTransitincidentToFfi(element);
    _heresdkRoutingTransitBindingslistofSdkRoutingTransitincidentInsert(_result, _elementHandle);
    sdkRoutingTransitincidentReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<TransitIncident> heresdkRoutingTransitBindingslistofSdkRoutingTransitincidentFromFfi(Pointer<Void> handle) {
  final result = List<TransitIncident>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingTransitBindingslistofSdkRoutingTransitincidentIterator(handle);
  while (_heresdkRoutingTransitBindingslistofSdkRoutingTransitincidentIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingTransitBindingslistofSdkRoutingTransitincidentIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingTransitincidentFromFfi(_elementHandle));
    } finally {
      sdkRoutingTransitincidentReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingTransitBindingslistofSdkRoutingTransitincidentIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingTransitBindingslistofSdkRoutingTransitincidentIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingTransitincidentReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingTransitBindingslistofSdkRoutingTransitincidentReleaseHandle(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingTransitincidentCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TransitIncident_create_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTransitincidentReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TransitIncident_release_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTransitincidentGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TransitIncident_get_value_nullable'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingTransitincidentToFfiNullable(List<TransitIncident>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingTransitBindingslistofSdkRoutingTransitincidentToFfi(value);
  final result = _heresdkRoutingTransitBindingslistofSdkRoutingTransitincidentCreateHandleNullable(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingTransitincidentReleaseFfiHandle(_handle);
  return result;
}

List<TransitIncident>? heresdkRoutingTransitBindingslistofSdkRoutingTransitincidentFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingTransitBindingslistofSdkRoutingTransitincidentGetValueNullable(handle);
  final result = heresdkRoutingTransitBindingslistofSdkRoutingTransitincidentFromFfi(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingTransitincidentReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingTransitincidentReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingTransitBindingslistofSdkRoutingTransitincidentReleaseHandleNullable(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingTransitmodeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TransitMode_create_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTransitmodeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TransitMode_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTransitmodeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TransitMode_insert'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTransitmodeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TransitMode_iterator'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTransitmodeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TransitMode_iterator_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTransitmodeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TransitMode_iterator_is_valid'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTransitmodeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TransitMode_iterator_increment'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTransitmodeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TransitMode_iterator_get'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingTransitmodeToFfi(List<TransitMode> value) {
  final _result = _heresdkRoutingTransitBindingslistofSdkRoutingTransitmodeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingTransitmodeToFfi(element);
    _heresdkRoutingTransitBindingslistofSdkRoutingTransitmodeInsert(_result, _elementHandle);
    sdkRoutingTransitmodeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<TransitMode> heresdkRoutingTransitBindingslistofSdkRoutingTransitmodeFromFfi(Pointer<Void> handle) {
  final result = List<TransitMode>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingTransitBindingslistofSdkRoutingTransitmodeIterator(handle);
  while (_heresdkRoutingTransitBindingslistofSdkRoutingTransitmodeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingTransitBindingslistofSdkRoutingTransitmodeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingTransitmodeFromFfi(_elementHandle));
    } finally {
      sdkRoutingTransitmodeReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingTransitBindingslistofSdkRoutingTransitmodeIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingTransitBindingslistofSdkRoutingTransitmodeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingTransitmodeReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingTransitBindingslistofSdkRoutingTransitmodeReleaseHandle(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingTransitmodeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TransitMode_create_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTransitmodeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TransitMode_release_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTransitmodeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TransitMode_get_value_nullable'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingTransitmodeToFfiNullable(List<TransitMode>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingTransitBindingslistofSdkRoutingTransitmodeToFfi(value);
  final result = _heresdkRoutingTransitBindingslistofSdkRoutingTransitmodeCreateHandleNullable(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingTransitmodeReleaseFfiHandle(_handle);
  return result;
}

List<TransitMode>? heresdkRoutingTransitBindingslistofSdkRoutingTransitmodeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingTransitBindingslistofSdkRoutingTransitmodeGetValueNullable(handle);
  final result = heresdkRoutingTransitBindingslistofSdkRoutingTransitmodeFromFfi(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingTransitmodeReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingTransitmodeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingTransitBindingslistofSdkRoutingTransitmodeReleaseHandleNullable(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingTransitstopCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TransitStop_create_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTransitstopReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TransitStop_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTransitstopInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TransitStop_insert'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTransitstopIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TransitStop_iterator'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTransitstopIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TransitStop_iterator_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTransitstopIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TransitStop_iterator_is_valid'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTransitstopIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TransitStop_iterator_increment'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTransitstopIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TransitStop_iterator_get'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingTransitstopToFfi(List<TransitStop> value) {
  final _result = _heresdkRoutingTransitBindingslistofSdkRoutingTransitstopCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingTransitstopToFfi(element);
    _heresdkRoutingTransitBindingslistofSdkRoutingTransitstopInsert(_result, _elementHandle);
    sdkRoutingTransitstopReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<TransitStop> heresdkRoutingTransitBindingslistofSdkRoutingTransitstopFromFfi(Pointer<Void> handle) {
  final result = List<TransitStop>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingTransitBindingslistofSdkRoutingTransitstopIterator(handle);
  while (_heresdkRoutingTransitBindingslistofSdkRoutingTransitstopIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingTransitBindingslistofSdkRoutingTransitstopIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingTransitstopFromFfi(_elementHandle));
    } finally {
      sdkRoutingTransitstopReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingTransitBindingslistofSdkRoutingTransitstopIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingTransitBindingslistofSdkRoutingTransitstopIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingTransitstopReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingTransitBindingslistofSdkRoutingTransitstopReleaseHandle(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingTransitstopCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TransitStop_create_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTransitstopReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TransitStop_release_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTransitstopGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TransitStop_get_value_nullable'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingTransitstopToFfiNullable(List<TransitStop>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingTransitBindingslistofSdkRoutingTransitstopToFfi(value);
  final result = _heresdkRoutingTransitBindingslistofSdkRoutingTransitstopCreateHandleNullable(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingTransitstopReleaseFfiHandle(_handle);
  return result;
}

List<TransitStop>? heresdkRoutingTransitBindingslistofSdkRoutingTransitstopFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingTransitBindingslistofSdkRoutingTransitstopGetValueNullable(handle);
  final result = heresdkRoutingTransitBindingslistofSdkRoutingTransitstopFromFfi(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingTransitstopReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingTransitstopReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingTransitBindingslistofSdkRoutingTransitstopReleaseHandleNullable(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingWaypointCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Waypoint_create_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingWaypointReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Waypoint_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingWaypointInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Waypoint_insert'));
final _heresdkRoutingTransitBindingslistofSdkRoutingWaypointIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Waypoint_iterator'));
final _heresdkRoutingTransitBindingslistofSdkRoutingWaypointIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Waypoint_iterator_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingWaypointIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Waypoint_iterator_is_valid'));
final _heresdkRoutingTransitBindingslistofSdkRoutingWaypointIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Waypoint_iterator_increment'));
final _heresdkRoutingTransitBindingslistofSdkRoutingWaypointIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Waypoint_iterator_get'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingWaypointToFfi(List<Waypoint> value) {
  final _result = _heresdkRoutingTransitBindingslistofSdkRoutingWaypointCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingWaypointToFfi(element);
    _heresdkRoutingTransitBindingslistofSdkRoutingWaypointInsert(_result, _elementHandle);
    sdkRoutingWaypointReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Waypoint> heresdkRoutingTransitBindingslistofSdkRoutingWaypointFromFfi(Pointer<Void> handle) {
  final result = List<Waypoint>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingTransitBindingslistofSdkRoutingWaypointIterator(handle);
  while (_heresdkRoutingTransitBindingslistofSdkRoutingWaypointIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingTransitBindingslistofSdkRoutingWaypointIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingWaypointFromFfi(_elementHandle));
    } finally {
      sdkRoutingWaypointReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingTransitBindingslistofSdkRoutingWaypointIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingTransitBindingslistofSdkRoutingWaypointIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingWaypointReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingTransitBindingslistofSdkRoutingWaypointReleaseHandle(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingWaypointCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Waypoint_create_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingWaypointReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Waypoint_release_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingWaypointGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Waypoint_get_value_nullable'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingWaypointToFfiNullable(List<Waypoint>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingTransitBindingslistofSdkRoutingWaypointToFfi(value);
  final result = _heresdkRoutingTransitBindingslistofSdkRoutingWaypointCreateHandleNullable(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingWaypointReleaseFfiHandle(_handle);
  return result;
}

List<Waypoint>? heresdkRoutingTransitBindingslistofSdkRoutingWaypointFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingTransitBindingslistofSdkRoutingWaypointGetValueNullable(handle);
  final result = heresdkRoutingTransitBindingslistofSdkRoutingWaypointFromFfi(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingWaypointReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingWaypointReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingTransitBindingslistofSdkRoutingWaypointReleaseHandleNullable(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingZonecategoryCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_ZoneCategory_create_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingZonecategoryReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_ZoneCategory_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingZonecategoryInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_ZoneCategory_insert'));
final _heresdkRoutingTransitBindingslistofSdkRoutingZonecategoryIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_ZoneCategory_iterator'));
final _heresdkRoutingTransitBindingslistofSdkRoutingZonecategoryIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_ZoneCategory_iterator_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingZonecategoryIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_ZoneCategory_iterator_is_valid'));
final _heresdkRoutingTransitBindingslistofSdkRoutingZonecategoryIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_ZoneCategory_iterator_increment'));
final _heresdkRoutingTransitBindingslistofSdkRoutingZonecategoryIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_ZoneCategory_iterator_get'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingZonecategoryToFfi(List<ZoneCategory> value) {
  final _result = _heresdkRoutingTransitBindingslistofSdkRoutingZonecategoryCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingZonecategoryToFfi(element);
    _heresdkRoutingTransitBindingslistofSdkRoutingZonecategoryInsert(_result, _elementHandle);
    sdkRoutingZonecategoryReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<ZoneCategory> heresdkRoutingTransitBindingslistofSdkRoutingZonecategoryFromFfi(Pointer<Void> handle) {
  final result = List<ZoneCategory>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingTransitBindingslistofSdkRoutingZonecategoryIterator(handle);
  while (_heresdkRoutingTransitBindingslistofSdkRoutingZonecategoryIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingTransitBindingslistofSdkRoutingZonecategoryIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingZonecategoryFromFfi(_elementHandle));
    } finally {
      sdkRoutingZonecategoryReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingTransitBindingslistofSdkRoutingZonecategoryIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingTransitBindingslistofSdkRoutingZonecategoryIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingZonecategoryReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingTransitBindingslistofSdkRoutingZonecategoryReleaseHandle(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingZonecategoryCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_ZoneCategory_create_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingZonecategoryReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_ZoneCategory_release_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingZonecategoryGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_ZoneCategory_get_value_nullable'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingZonecategoryToFfiNullable(List<ZoneCategory>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingTransitBindingslistofSdkRoutingZonecategoryToFfi(value);
  final result = _heresdkRoutingTransitBindingslistofSdkRoutingZonecategoryCreateHandleNullable(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingZonecategoryReleaseFfiHandle(_handle);
  return result;
}

List<ZoneCategory>? heresdkRoutingTransitBindingslistofSdkRoutingZonecategoryFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingTransitBindingslistofSdkRoutingZonecategoryGetValueNullable(handle);
  final result = heresdkRoutingTransitBindingslistofSdkRoutingZonecategoryFromFfi(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingZonecategoryReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingZonecategoryReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingTransitBindingslistofSdkRoutingZonecategoryReleaseHandleNullable(handle);

final _heresdkRoutingTransitBindingsmapofDoubleToDoubleCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_transit_bindingsMapOf_Double_to_Double_create_handle'));
final _heresdkRoutingTransitBindingsmapofDoubleToDoubleReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsMapOf_Double_to_Double_release_handle'));
final _heresdkRoutingTransitBindingsmapofDoubleToDoublePut = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Double, Double),
    void Function(Pointer<Void>, double, double)
  >('here_sdk_heresdk_routing_transit_bindingsMapOf_Double_to_Double_put'));
final _heresdkRoutingTransitBindingsmapofDoubleToDoubleIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsMapOf_Double_to_Double_iterator'));
final _heresdkRoutingTransitBindingsmapofDoubleToDoubleIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsMapOf_Double_to_Double_iterator_release_handle'));
final _heresdkRoutingTransitBindingsmapofDoubleToDoubleIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsMapOf_Double_to_Double_iterator_is_valid'));
final _heresdkRoutingTransitBindingsmapofDoubleToDoubleIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsMapOf_Double_to_Double_iterator_increment'));
final _heresdkRoutingTransitBindingsmapofDoubleToDoubleIteratorGetKey = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Double Function(Pointer<Void>),
    double Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsMapOf_Double_to_Double_iterator_get_key'));
final _heresdkRoutingTransitBindingsmapofDoubleToDoubleIteratorGetValue = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Double Function(Pointer<Void>),
    double Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsMapOf_Double_to_Double_iterator_get_value'));

Pointer<Void> heresdkRoutingTransitBindingsmapofDoubleToDoubleToFfi(Map<double, double> value) {
  final _result = _heresdkRoutingTransitBindingsmapofDoubleToDoubleCreateHandle();
  for (final entry in value.entries) {
    final _keyHandle = (entry.key);
    final _valueHandle = (entry.value);
    _heresdkRoutingTransitBindingsmapofDoubleToDoublePut(_result, _keyHandle, _valueHandle);
    
    
  }
  return _result;
}

Map<double, double> heresdkRoutingTransitBindingsmapofDoubleToDoubleFromFfi(Pointer<Void> handle) {
  final result = Map<double, double>();
  final _iteratorHandle = _heresdkRoutingTransitBindingsmapofDoubleToDoubleIterator(handle);
  while (_heresdkRoutingTransitBindingsmapofDoubleToDoubleIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _keyHandle = _heresdkRoutingTransitBindingsmapofDoubleToDoubleIteratorGetKey(_iteratorHandle);
    final _valueHandle = _heresdkRoutingTransitBindingsmapofDoubleToDoubleIteratorGetValue(_iteratorHandle);
    try {
      result[(_keyHandle)] =
        (_valueHandle);
    } finally {
      
      
    }
    _heresdkRoutingTransitBindingsmapofDoubleToDoubleIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingTransitBindingsmapofDoubleToDoubleIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingTransitBindingsmapofDoubleToDoubleReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingTransitBindingsmapofDoubleToDoubleReleaseHandle(handle);

final _heresdkRoutingTransitBindingsmapofDoubleToDoubleCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsMapOf_Double_to_Double_create_handle_nullable'));
final _heresdkRoutingTransitBindingsmapofDoubleToDoubleReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsMapOf_Double_to_Double_release_handle_nullable'));
final _heresdkRoutingTransitBindingsmapofDoubleToDoubleGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsMapOf_Double_to_Double_get_value_nullable'));

Pointer<Void> heresdkRoutingTransitBindingsmapofDoubleToDoubleToFfiNullable(Map<double, double>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingTransitBindingsmapofDoubleToDoubleToFfi(value);
  final result = _heresdkRoutingTransitBindingsmapofDoubleToDoubleCreateHandleNullable(_handle);
  heresdkRoutingTransitBindingsmapofDoubleToDoubleReleaseFfiHandle(_handle);
  return result;
}

Map<double, double>? heresdkRoutingTransitBindingsmapofDoubleToDoubleFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingTransitBindingsmapofDoubleToDoubleGetValueNullable(handle);
  final result = heresdkRoutingTransitBindingsmapofDoubleToDoubleFromFfi(_handle);
  heresdkRoutingTransitBindingsmapofDoubleToDoubleReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingTransitBindingsmapofDoubleToDoubleReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingTransitBindingsmapofDoubleToDoubleReleaseHandleNullable(handle);

final _heresdkRoutingTransitBindingsmapofIntToDoubleCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_transit_bindingsMapOf_Int_to_Double_create_handle'));
final _heresdkRoutingTransitBindingsmapofIntToDoubleReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsMapOf_Int_to_Double_release_handle'));
final _heresdkRoutingTransitBindingsmapofIntToDoublePut = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Int32, Double),
    void Function(Pointer<Void>, int, double)
  >('here_sdk_heresdk_routing_transit_bindingsMapOf_Int_to_Double_put'));
final _heresdkRoutingTransitBindingsmapofIntToDoubleIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsMapOf_Int_to_Double_iterator'));
final _heresdkRoutingTransitBindingsmapofIntToDoubleIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsMapOf_Int_to_Double_iterator_release_handle'));
final _heresdkRoutingTransitBindingsmapofIntToDoubleIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsMapOf_Int_to_Double_iterator_is_valid'));
final _heresdkRoutingTransitBindingsmapofIntToDoubleIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsMapOf_Int_to_Double_iterator_increment'));
final _heresdkRoutingTransitBindingsmapofIntToDoubleIteratorGetKey = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsMapOf_Int_to_Double_iterator_get_key'));
final _heresdkRoutingTransitBindingsmapofIntToDoubleIteratorGetValue = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Double Function(Pointer<Void>),
    double Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsMapOf_Int_to_Double_iterator_get_value'));

Pointer<Void> heresdkRoutingTransitBindingsmapofIntToDoubleToFfi(Map<int, double> value) {
  final _result = _heresdkRoutingTransitBindingsmapofIntToDoubleCreateHandle();
  for (final entry in value.entries) {
    final _keyHandle = (entry.key);
    final _valueHandle = (entry.value);
    _heresdkRoutingTransitBindingsmapofIntToDoublePut(_result, _keyHandle, _valueHandle);
    
    
  }
  return _result;
}

Map<int, double> heresdkRoutingTransitBindingsmapofIntToDoubleFromFfi(Pointer<Void> handle) {
  final result = Map<int, double>();
  final _iteratorHandle = _heresdkRoutingTransitBindingsmapofIntToDoubleIterator(handle);
  while (_heresdkRoutingTransitBindingsmapofIntToDoubleIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _keyHandle = _heresdkRoutingTransitBindingsmapofIntToDoubleIteratorGetKey(_iteratorHandle);
    final _valueHandle = _heresdkRoutingTransitBindingsmapofIntToDoubleIteratorGetValue(_iteratorHandle);
    try {
      result[(_keyHandle)] =
        (_valueHandle);
    } finally {
      
      
    }
    _heresdkRoutingTransitBindingsmapofIntToDoubleIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingTransitBindingsmapofIntToDoubleIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingTransitBindingsmapofIntToDoubleReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingTransitBindingsmapofIntToDoubleReleaseHandle(handle);

final _heresdkRoutingTransitBindingsmapofIntToDoubleCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsMapOf_Int_to_Double_create_handle_nullable'));
final _heresdkRoutingTransitBindingsmapofIntToDoubleReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsMapOf_Int_to_Double_release_handle_nullable'));
final _heresdkRoutingTransitBindingsmapofIntToDoubleGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsMapOf_Int_to_Double_get_value_nullable'));

Pointer<Void> heresdkRoutingTransitBindingsmapofIntToDoubleToFfiNullable(Map<int, double>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingTransitBindingsmapofIntToDoubleToFfi(value);
  final result = _heresdkRoutingTransitBindingsmapofIntToDoubleCreateHandleNullable(_handle);
  heresdkRoutingTransitBindingsmapofIntToDoubleReleaseFfiHandle(_handle);
  return result;
}

Map<int, double>? heresdkRoutingTransitBindingsmapofIntToDoubleFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingTransitBindingsmapofIntToDoubleGetValueNullable(handle);
  final result = heresdkRoutingTransitBindingsmapofIntToDoubleFromFfi(_handle);
  heresdkRoutingTransitBindingsmapofIntToDoubleReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingTransitBindingsmapofIntToDoubleReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingTransitBindingsmapofIntToDoubleReleaseHandleNullable(handle);


// Copyright (c) 2018-2021 HERE Global B.V. and its affiliate(s).
// All rights reserved.
//
// This software and other materials contain proprietary information
// controlled by HERE and are protected by applicable copyright legislation.
// Any use and utilization of this software and other materials and
// disclosure to any third parties is conditional upon having a separate
// agreement with HERE for the access, use, utilization or disclosure of this
// software. In the absence of such agreement, the use of the software is not
// allowed.
//





























final _heresdkSearchBindingslistofLocaleCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_bindingsListOf_Locale_create_handle'));
final _heresdkSearchBindingslistofLocaleReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_Locale_release_handle'));
final _heresdkSearchBindingslistofLocaleInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_Locale_insert'));
final _heresdkSearchBindingslistofLocaleIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_Locale_iterator'));
final _heresdkSearchBindingslistofLocaleIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_Locale_iterator_release_handle'));
final _heresdkSearchBindingslistofLocaleIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_Locale_iterator_is_valid'));
final _heresdkSearchBindingslistofLocaleIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_Locale_iterator_increment'));
final _heresdkSearchBindingslistofLocaleIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_Locale_iterator_get'));

Pointer<Void> heresdkSearchBindingslistofLocaleToFfi(List<Locale> value) {
  final _result = _heresdkSearchBindingslistofLocaleCreateHandle();
  for (final element in value) {
    final _elementHandle = localeToFfi(element);
    _heresdkSearchBindingslistofLocaleInsert(_result, _elementHandle);
    localeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Locale> heresdkSearchBindingslistofLocaleFromFfi(Pointer<Void> handle) {
  final result = List<Locale>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchBindingslistofLocaleIterator(handle);
  while (_heresdkSearchBindingslistofLocaleIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchBindingslistofLocaleIteratorGet(_iteratorHandle);
    try {
      result.add(localeFromFfi(_elementHandle));
    } finally {
      localeReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchBindingslistofLocaleIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchBindingslistofLocaleIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchBindingslistofLocaleReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchBindingslistofLocaleReleaseHandle(handle);

final _heresdkSearchBindingslistofLocaleCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_Locale_create_handle_nullable'));
final _heresdkSearchBindingslistofLocaleReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_Locale_release_handle_nullable'));
final _heresdkSearchBindingslistofLocaleGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_Locale_get_value_nullable'));

Pointer<Void> heresdkSearchBindingslistofLocaleToFfiNullable(List<Locale>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchBindingslistofLocaleToFfi(value);
  final result = _heresdkSearchBindingslistofLocaleCreateHandleNullable(_handle);
  heresdkSearchBindingslistofLocaleReleaseFfiHandle(_handle);
  return result;
}

List<Locale>? heresdkSearchBindingslistofLocaleFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchBindingslistofLocaleGetValueNullable(handle);
  final result = heresdkSearchBindingslistofLocaleFromFfi(_handle);
  heresdkSearchBindingslistofLocaleReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchBindingslistofLocaleReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchBindingslistofLocaleReleaseHandleNullable(handle);

final _heresdkSearchBindingslistofStringCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_bindingsListOf_String_create_handle'));
final _heresdkSearchBindingslistofStringReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_String_release_handle'));
final _heresdkSearchBindingslistofStringInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_String_insert'));
final _heresdkSearchBindingslistofStringIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_String_iterator'));
final _heresdkSearchBindingslistofStringIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_String_iterator_release_handle'));
final _heresdkSearchBindingslistofStringIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_String_iterator_is_valid'));
final _heresdkSearchBindingslistofStringIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_String_iterator_increment'));
final _heresdkSearchBindingslistofStringIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_String_iterator_get'));

Pointer<Void> heresdkSearchBindingslistofStringToFfi(List<String> value) {
  final _result = _heresdkSearchBindingslistofStringCreateHandle();
  for (final element in value) {
    final _elementHandle = stringToFfi(element);
    _heresdkSearchBindingslistofStringInsert(_result, _elementHandle);
    stringReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<String> heresdkSearchBindingslistofStringFromFfi(Pointer<Void> handle) {
  final result = List<String>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchBindingslistofStringIterator(handle);
  while (_heresdkSearchBindingslistofStringIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchBindingslistofStringIteratorGet(_iteratorHandle);
    try {
      result.add(stringFromFfi(_elementHandle));
    } finally {
      stringReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchBindingslistofStringIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchBindingslistofStringIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchBindingslistofStringReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchBindingslistofStringReleaseHandle(handle);

final _heresdkSearchBindingslistofStringCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_String_create_handle_nullable'));
final _heresdkSearchBindingslistofStringReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_String_release_handle_nullable'));
final _heresdkSearchBindingslistofStringGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_String_get_value_nullable'));

Pointer<Void> heresdkSearchBindingslistofStringToFfiNullable(List<String>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchBindingslistofStringToFfi(value);
  final result = _heresdkSearchBindingslistofStringCreateHandleNullable(_handle);
  heresdkSearchBindingslistofStringReleaseFfiHandle(_handle);
  return result;
}

List<String>? heresdkSearchBindingslistofStringFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchBindingslistofStringGetValueNullable(handle);
  final result = heresdkSearchBindingslistofStringFromFfi(_handle);
  heresdkSearchBindingslistofStringReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchBindingslistofStringReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchBindingslistofStringReleaseHandleNullable(handle);

final _heresdkSearchBindingslistofSdkCoreCountrycodeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_bindingsListOf_sdk_core_CountryCode_create_handle'));
final _heresdkSearchBindingslistofSdkCoreCountrycodeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_core_CountryCode_release_handle'));
final _heresdkSearchBindingslistofSdkCoreCountrycodeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_core_CountryCode_insert'));
final _heresdkSearchBindingslistofSdkCoreCountrycodeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_core_CountryCode_iterator'));
final _heresdkSearchBindingslistofSdkCoreCountrycodeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_core_CountryCode_iterator_release_handle'));
final _heresdkSearchBindingslistofSdkCoreCountrycodeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_core_CountryCode_iterator_is_valid'));
final _heresdkSearchBindingslistofSdkCoreCountrycodeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_core_CountryCode_iterator_increment'));
final _heresdkSearchBindingslistofSdkCoreCountrycodeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_core_CountryCode_iterator_get'));

Pointer<Void> heresdkSearchBindingslistofSdkCoreCountrycodeToFfi(List<CountryCode> value) {
  final _result = _heresdkSearchBindingslistofSdkCoreCountrycodeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreCountrycodeToFfi(element);
    _heresdkSearchBindingslistofSdkCoreCountrycodeInsert(_result, _elementHandle);
    sdkCoreCountrycodeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<CountryCode> heresdkSearchBindingslistofSdkCoreCountrycodeFromFfi(Pointer<Void> handle) {
  final result = List<CountryCode>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchBindingslistofSdkCoreCountrycodeIterator(handle);
  while (_heresdkSearchBindingslistofSdkCoreCountrycodeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchBindingslistofSdkCoreCountrycodeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreCountrycodeFromFfi(_elementHandle));
    } finally {
      sdkCoreCountrycodeReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchBindingslistofSdkCoreCountrycodeIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchBindingslistofSdkCoreCountrycodeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchBindingslistofSdkCoreCountrycodeReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchBindingslistofSdkCoreCountrycodeReleaseHandle(handle);

final _heresdkSearchBindingslistofSdkCoreCountrycodeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_core_CountryCode_create_handle_nullable'));
final _heresdkSearchBindingslistofSdkCoreCountrycodeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_core_CountryCode_release_handle_nullable'));
final _heresdkSearchBindingslistofSdkCoreCountrycodeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_core_CountryCode_get_value_nullable'));

Pointer<Void> heresdkSearchBindingslistofSdkCoreCountrycodeToFfiNullable(List<CountryCode>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchBindingslistofSdkCoreCountrycodeToFfi(value);
  final result = _heresdkSearchBindingslistofSdkCoreCountrycodeCreateHandleNullable(_handle);
  heresdkSearchBindingslistofSdkCoreCountrycodeReleaseFfiHandle(_handle);
  return result;
}

List<CountryCode>? heresdkSearchBindingslistofSdkCoreCountrycodeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchBindingslistofSdkCoreCountrycodeGetValueNullable(handle);
  final result = heresdkSearchBindingslistofSdkCoreCountrycodeFromFfi(_handle);
  heresdkSearchBindingslistofSdkCoreCountrycodeReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchBindingslistofSdkCoreCountrycodeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchBindingslistofSdkCoreCountrycodeReleaseHandleNullable(handle);

final _heresdkSearchBindingslistofSdkCoreGeocoordinatesCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_bindingsListOf_sdk_core_GeoCoordinates_create_handle'));
final _heresdkSearchBindingslistofSdkCoreGeocoordinatesReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_core_GeoCoordinates_release_handle'));
final _heresdkSearchBindingslistofSdkCoreGeocoordinatesInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_core_GeoCoordinates_insert'));
final _heresdkSearchBindingslistofSdkCoreGeocoordinatesIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_core_GeoCoordinates_iterator'));
final _heresdkSearchBindingslistofSdkCoreGeocoordinatesIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_core_GeoCoordinates_iterator_release_handle'));
final _heresdkSearchBindingslistofSdkCoreGeocoordinatesIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_core_GeoCoordinates_iterator_is_valid'));
final _heresdkSearchBindingslistofSdkCoreGeocoordinatesIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_core_GeoCoordinates_iterator_increment'));
final _heresdkSearchBindingslistofSdkCoreGeocoordinatesIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_core_GeoCoordinates_iterator_get'));

Pointer<Void> heresdkSearchBindingslistofSdkCoreGeocoordinatesToFfi(List<GeoCoordinates> value) {
  final _result = _heresdkSearchBindingslistofSdkCoreGeocoordinatesCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreGeocoordinatesToFfi(element);
    _heresdkSearchBindingslistofSdkCoreGeocoordinatesInsert(_result, _elementHandle);
    sdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoCoordinates> heresdkSearchBindingslistofSdkCoreGeocoordinatesFromFfi(Pointer<Void> handle) {
  final result = List<GeoCoordinates>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchBindingslistofSdkCoreGeocoordinatesIterator(handle);
  while (_heresdkSearchBindingslistofSdkCoreGeocoordinatesIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchBindingslistofSdkCoreGeocoordinatesIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreGeocoordinatesFromFfi(_elementHandle));
    } finally {
      sdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchBindingslistofSdkCoreGeocoordinatesIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchBindingslistofSdkCoreGeocoordinatesIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchBindingslistofSdkCoreGeocoordinatesReleaseHandle(handle);

final _heresdkSearchBindingslistofSdkCoreGeocoordinatesCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_core_GeoCoordinates_create_handle_nullable'));
final _heresdkSearchBindingslistofSdkCoreGeocoordinatesReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_core_GeoCoordinates_release_handle_nullable'));
final _heresdkSearchBindingslistofSdkCoreGeocoordinatesGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_core_GeoCoordinates_get_value_nullable'));

Pointer<Void> heresdkSearchBindingslistofSdkCoreGeocoordinatesToFfiNullable(List<GeoCoordinates>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchBindingslistofSdkCoreGeocoordinatesToFfi(value);
  final result = _heresdkSearchBindingslistofSdkCoreGeocoordinatesCreateHandleNullable(_handle);
  heresdkSearchBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

List<GeoCoordinates>? heresdkSearchBindingslistofSdkCoreGeocoordinatesFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchBindingslistofSdkCoreGeocoordinatesGetValueNullable(handle);
  final result = heresdkSearchBindingslistofSdkCoreGeocoordinatesFromFfi(_handle);
  heresdkSearchBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchBindingslistofSdkCoreGeocoordinatesReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchBindingslistofSdkCoreGeocoordinatesReleaseHandleNullable(handle);

final _heresdkSearchBindingslistofSdkCoreLocalizedtextCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_bindingsListOf_sdk_core_LocalizedText_create_handle'));
final _heresdkSearchBindingslistofSdkCoreLocalizedtextReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_core_LocalizedText_release_handle'));
final _heresdkSearchBindingslistofSdkCoreLocalizedtextInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_core_LocalizedText_insert'));
final _heresdkSearchBindingslistofSdkCoreLocalizedtextIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_core_LocalizedText_iterator'));
final _heresdkSearchBindingslistofSdkCoreLocalizedtextIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_core_LocalizedText_iterator_release_handle'));
final _heresdkSearchBindingslistofSdkCoreLocalizedtextIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_core_LocalizedText_iterator_is_valid'));
final _heresdkSearchBindingslistofSdkCoreLocalizedtextIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_core_LocalizedText_iterator_increment'));
final _heresdkSearchBindingslistofSdkCoreLocalizedtextIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_core_LocalizedText_iterator_get'));

Pointer<Void> heresdkSearchBindingslistofSdkCoreLocalizedtextToFfi(List<LocalizedText> value) {
  final _result = _heresdkSearchBindingslistofSdkCoreLocalizedtextCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreLocalizedtextToFfi(element);
    _heresdkSearchBindingslistofSdkCoreLocalizedtextInsert(_result, _elementHandle);
    sdkCoreLocalizedtextReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<LocalizedText> heresdkSearchBindingslistofSdkCoreLocalizedtextFromFfi(Pointer<Void> handle) {
  final result = List<LocalizedText>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchBindingslistofSdkCoreLocalizedtextIterator(handle);
  while (_heresdkSearchBindingslistofSdkCoreLocalizedtextIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchBindingslistofSdkCoreLocalizedtextIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreLocalizedtextFromFfi(_elementHandle));
    } finally {
      sdkCoreLocalizedtextReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchBindingslistofSdkCoreLocalizedtextIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchBindingslistofSdkCoreLocalizedtextIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchBindingslistofSdkCoreLocalizedtextReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchBindingslistofSdkCoreLocalizedtextReleaseHandle(handle);

final _heresdkSearchBindingslistofSdkCoreLocalizedtextCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_core_LocalizedText_create_handle_nullable'));
final _heresdkSearchBindingslistofSdkCoreLocalizedtextReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_core_LocalizedText_release_handle_nullable'));
final _heresdkSearchBindingslistofSdkCoreLocalizedtextGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_core_LocalizedText_get_value_nullable'));

Pointer<Void> heresdkSearchBindingslistofSdkCoreLocalizedtextToFfiNullable(List<LocalizedText>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchBindingslistofSdkCoreLocalizedtextToFfi(value);
  final result = _heresdkSearchBindingslistofSdkCoreLocalizedtextCreateHandleNullable(_handle);
  heresdkSearchBindingslistofSdkCoreLocalizedtextReleaseFfiHandle(_handle);
  return result;
}

List<LocalizedText>? heresdkSearchBindingslistofSdkCoreLocalizedtextFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchBindingslistofSdkCoreLocalizedtextGetValueNullable(handle);
  final result = heresdkSearchBindingslistofSdkCoreLocalizedtextFromFfi(_handle);
  heresdkSearchBindingslistofSdkCoreLocalizedtextReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchBindingslistofSdkCoreLocalizedtextReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchBindingslistofSdkCoreLocalizedtextReleaseHandleNullable(handle);

final _heresdkSearchBindingslistofSdkSearchContactCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_Contact_create_handle'));
final _heresdkSearchBindingslistofSdkSearchContactReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_Contact_release_handle'));
final _heresdkSearchBindingslistofSdkSearchContactInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_Contact_insert'));
final _heresdkSearchBindingslistofSdkSearchContactIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_Contact_iterator'));
final _heresdkSearchBindingslistofSdkSearchContactIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_Contact_iterator_release_handle'));
final _heresdkSearchBindingslistofSdkSearchContactIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_Contact_iterator_is_valid'));
final _heresdkSearchBindingslistofSdkSearchContactIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_Contact_iterator_increment'));
final _heresdkSearchBindingslistofSdkSearchContactIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_Contact_iterator_get'));

Pointer<Void> heresdkSearchBindingslistofSdkSearchContactToFfi(List<Contact> value) {
  final _result = _heresdkSearchBindingslistofSdkSearchContactCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchContactToFfi(element);
    _heresdkSearchBindingslistofSdkSearchContactInsert(_result, _elementHandle);
    sdkSearchContactReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Contact> heresdkSearchBindingslistofSdkSearchContactFromFfi(Pointer<Void> handle) {
  final result = List<Contact>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchBindingslistofSdkSearchContactIterator(handle);
  while (_heresdkSearchBindingslistofSdkSearchContactIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchBindingslistofSdkSearchContactIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchContactFromFfi(_elementHandle));
    } finally {
      sdkSearchContactReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchBindingslistofSdkSearchContactIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchBindingslistofSdkSearchContactIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchBindingslistofSdkSearchContactReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchBindingslistofSdkSearchContactReleaseHandle(handle);

final _heresdkSearchBindingslistofSdkSearchContactCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_Contact_create_handle_nullable'));
final _heresdkSearchBindingslistofSdkSearchContactReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_Contact_release_handle_nullable'));
final _heresdkSearchBindingslistofSdkSearchContactGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_Contact_get_value_nullable'));

Pointer<Void> heresdkSearchBindingslistofSdkSearchContactToFfiNullable(List<Contact>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchBindingslistofSdkSearchContactToFfi(value);
  final result = _heresdkSearchBindingslistofSdkSearchContactCreateHandleNullable(_handle);
  heresdkSearchBindingslistofSdkSearchContactReleaseFfiHandle(_handle);
  return result;
}

List<Contact>? heresdkSearchBindingslistofSdkSearchContactFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchBindingslistofSdkSearchContactGetValueNullable(handle);
  final result = heresdkSearchBindingslistofSdkSearchContactFromFfi(_handle);
  heresdkSearchBindingslistofSdkSearchContactReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchBindingslistofSdkSearchContactReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchBindingslistofSdkSearchContactReleaseHandleNullable(handle);

final _heresdkSearchBindingslistofSdkSearchEvchargingstationCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_EVChargingStation_create_handle'));
final _heresdkSearchBindingslistofSdkSearchEvchargingstationReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_EVChargingStation_release_handle'));
final _heresdkSearchBindingslistofSdkSearchEvchargingstationInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_EVChargingStation_insert'));
final _heresdkSearchBindingslistofSdkSearchEvchargingstationIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_EVChargingStation_iterator'));
final _heresdkSearchBindingslistofSdkSearchEvchargingstationIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_EVChargingStation_iterator_release_handle'));
final _heresdkSearchBindingslistofSdkSearchEvchargingstationIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_EVChargingStation_iterator_is_valid'));
final _heresdkSearchBindingslistofSdkSearchEvchargingstationIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_EVChargingStation_iterator_increment'));
final _heresdkSearchBindingslistofSdkSearchEvchargingstationIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_EVChargingStation_iterator_get'));

Pointer<Void> heresdkSearchBindingslistofSdkSearchEvchargingstationToFfi(List<EVChargingStation> value) {
  final _result = _heresdkSearchBindingslistofSdkSearchEvchargingstationCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchEvchargingstationToFfi(element);
    _heresdkSearchBindingslistofSdkSearchEvchargingstationInsert(_result, _elementHandle);
    sdkSearchEvchargingstationReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<EVChargingStation> heresdkSearchBindingslistofSdkSearchEvchargingstationFromFfi(Pointer<Void> handle) {
  final result = List<EVChargingStation>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchBindingslistofSdkSearchEvchargingstationIterator(handle);
  while (_heresdkSearchBindingslistofSdkSearchEvchargingstationIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchBindingslistofSdkSearchEvchargingstationIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchEvchargingstationFromFfi(_elementHandle));
    } finally {
      sdkSearchEvchargingstationReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchBindingslistofSdkSearchEvchargingstationIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchBindingslistofSdkSearchEvchargingstationIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchBindingslistofSdkSearchEvchargingstationReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchBindingslistofSdkSearchEvchargingstationReleaseHandle(handle);

final _heresdkSearchBindingslistofSdkSearchEvchargingstationCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_EVChargingStation_create_handle_nullable'));
final _heresdkSearchBindingslistofSdkSearchEvchargingstationReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_EVChargingStation_release_handle_nullable'));
final _heresdkSearchBindingslistofSdkSearchEvchargingstationGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_EVChargingStation_get_value_nullable'));

Pointer<Void> heresdkSearchBindingslistofSdkSearchEvchargingstationToFfiNullable(List<EVChargingStation>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchBindingslistofSdkSearchEvchargingstationToFfi(value);
  final result = _heresdkSearchBindingslistofSdkSearchEvchargingstationCreateHandleNullable(_handle);
  heresdkSearchBindingslistofSdkSearchEvchargingstationReleaseFfiHandle(_handle);
  return result;
}

List<EVChargingStation>? heresdkSearchBindingslistofSdkSearchEvchargingstationFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchBindingslistofSdkSearchEvchargingstationGetValueNullable(handle);
  final result = heresdkSearchBindingslistofSdkSearchEvchargingstationFromFfi(_handle);
  heresdkSearchBindingslistofSdkSearchEvchargingstationReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchBindingslistofSdkSearchEvchargingstationReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchBindingslistofSdkSearchEvchargingstationReleaseHandleNullable(handle);

final _heresdkSearchBindingslistofSdkSearchEmailaddressCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_EmailAddress_create_handle'));
final _heresdkSearchBindingslistofSdkSearchEmailaddressReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_EmailAddress_release_handle'));
final _heresdkSearchBindingslistofSdkSearchEmailaddressInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_EmailAddress_insert'));
final _heresdkSearchBindingslistofSdkSearchEmailaddressIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_EmailAddress_iterator'));
final _heresdkSearchBindingslistofSdkSearchEmailaddressIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_EmailAddress_iterator_release_handle'));
final _heresdkSearchBindingslistofSdkSearchEmailaddressIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_EmailAddress_iterator_is_valid'));
final _heresdkSearchBindingslistofSdkSearchEmailaddressIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_EmailAddress_iterator_increment'));
final _heresdkSearchBindingslistofSdkSearchEmailaddressIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_EmailAddress_iterator_get'));

Pointer<Void> heresdkSearchBindingslistofSdkSearchEmailaddressToFfi(List<EmailAddress> value) {
  final _result = _heresdkSearchBindingslistofSdkSearchEmailaddressCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchEmailaddressToFfi(element);
    _heresdkSearchBindingslistofSdkSearchEmailaddressInsert(_result, _elementHandle);
    sdkSearchEmailaddressReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<EmailAddress> heresdkSearchBindingslistofSdkSearchEmailaddressFromFfi(Pointer<Void> handle) {
  final result = List<EmailAddress>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchBindingslistofSdkSearchEmailaddressIterator(handle);
  while (_heresdkSearchBindingslistofSdkSearchEmailaddressIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchBindingslistofSdkSearchEmailaddressIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchEmailaddressFromFfi(_elementHandle));
    } finally {
      sdkSearchEmailaddressReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchBindingslistofSdkSearchEmailaddressIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchBindingslistofSdkSearchEmailaddressIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchBindingslistofSdkSearchEmailaddressReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchBindingslistofSdkSearchEmailaddressReleaseHandle(handle);

final _heresdkSearchBindingslistofSdkSearchEmailaddressCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_EmailAddress_create_handle_nullable'));
final _heresdkSearchBindingslistofSdkSearchEmailaddressReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_EmailAddress_release_handle_nullable'));
final _heresdkSearchBindingslistofSdkSearchEmailaddressGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_EmailAddress_get_value_nullable'));

Pointer<Void> heresdkSearchBindingslistofSdkSearchEmailaddressToFfiNullable(List<EmailAddress>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchBindingslistofSdkSearchEmailaddressToFfi(value);
  final result = _heresdkSearchBindingslistofSdkSearchEmailaddressCreateHandleNullable(_handle);
  heresdkSearchBindingslistofSdkSearchEmailaddressReleaseFfiHandle(_handle);
  return result;
}

List<EmailAddress>? heresdkSearchBindingslistofSdkSearchEmailaddressFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchBindingslistofSdkSearchEmailaddressGetValueNullable(handle);
  final result = heresdkSearchBindingslistofSdkSearchEmailaddressFromFfi(_handle);
  heresdkSearchBindingslistofSdkSearchEmailaddressReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchBindingslistofSdkSearchEmailaddressReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchBindingslistofSdkSearchEmailaddressReleaseHandleNullable(handle);

final _heresdkSearchBindingslistofSdkSearchEvconnectorexperimentalCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_EvConnectorExperimental_create_handle'));
final _heresdkSearchBindingslistofSdkSearchEvconnectorexperimentalReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_EvConnectorExperimental_release_handle'));
final _heresdkSearchBindingslistofSdkSearchEvconnectorexperimentalInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_EvConnectorExperimental_insert'));
final _heresdkSearchBindingslistofSdkSearchEvconnectorexperimentalIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_EvConnectorExperimental_iterator'));
final _heresdkSearchBindingslistofSdkSearchEvconnectorexperimentalIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_EvConnectorExperimental_iterator_release_handle'));
final _heresdkSearchBindingslistofSdkSearchEvconnectorexperimentalIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_EvConnectorExperimental_iterator_is_valid'));
final _heresdkSearchBindingslistofSdkSearchEvconnectorexperimentalIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_EvConnectorExperimental_iterator_increment'));
final _heresdkSearchBindingslistofSdkSearchEvconnectorexperimentalIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_EvConnectorExperimental_iterator_get'));

Pointer<Void> heresdkSearchBindingslistofSdkSearchEvconnectorexperimentalToFfi(List<EvConnectorExperimental> value) {
  final _result = _heresdkSearchBindingslistofSdkSearchEvconnectorexperimentalCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchEvconnectorexperimentalToFfi(element);
    _heresdkSearchBindingslistofSdkSearchEvconnectorexperimentalInsert(_result, _elementHandle);
    sdkSearchEvconnectorexperimentalReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<EvConnectorExperimental> heresdkSearchBindingslistofSdkSearchEvconnectorexperimentalFromFfi(Pointer<Void> handle) {
  final result = List<EvConnectorExperimental>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchBindingslistofSdkSearchEvconnectorexperimentalIterator(handle);
  while (_heresdkSearchBindingslistofSdkSearchEvconnectorexperimentalIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchBindingslistofSdkSearchEvconnectorexperimentalIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchEvconnectorexperimentalFromFfi(_elementHandle));
    } finally {
      sdkSearchEvconnectorexperimentalReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchBindingslistofSdkSearchEvconnectorexperimentalIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchBindingslistofSdkSearchEvconnectorexperimentalIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchBindingslistofSdkSearchEvconnectorexperimentalReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchBindingslistofSdkSearchEvconnectorexperimentalReleaseHandle(handle);

final _heresdkSearchBindingslistofSdkSearchEvconnectorexperimentalCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_EvConnectorExperimental_create_handle_nullable'));
final _heresdkSearchBindingslistofSdkSearchEvconnectorexperimentalReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_EvConnectorExperimental_release_handle_nullable'));
final _heresdkSearchBindingslistofSdkSearchEvconnectorexperimentalGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_EvConnectorExperimental_get_value_nullable'));

Pointer<Void> heresdkSearchBindingslistofSdkSearchEvconnectorexperimentalToFfiNullable(List<EvConnectorExperimental>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchBindingslistofSdkSearchEvconnectorexperimentalToFfi(value);
  final result = _heresdkSearchBindingslistofSdkSearchEvconnectorexperimentalCreateHandleNullable(_handle);
  heresdkSearchBindingslistofSdkSearchEvconnectorexperimentalReleaseFfiHandle(_handle);
  return result;
}

List<EvConnectorExperimental>? heresdkSearchBindingslistofSdkSearchEvconnectorexperimentalFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchBindingslistofSdkSearchEvconnectorexperimentalGetValueNullable(handle);
  final result = heresdkSearchBindingslistofSdkSearchEvconnectorexperimentalFromFfi(_handle);
  heresdkSearchBindingslistofSdkSearchEvconnectorexperimentalReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchBindingslistofSdkSearchEvconnectorexperimentalReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchBindingslistofSdkSearchEvconnectorexperimentalReleaseHandleNullable(handle);

final _heresdkSearchBindingslistofSdkSearchIndexrangeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_IndexRange_create_handle'));
final _heresdkSearchBindingslistofSdkSearchIndexrangeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_IndexRange_release_handle'));
final _heresdkSearchBindingslistofSdkSearchIndexrangeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_IndexRange_insert'));
final _heresdkSearchBindingslistofSdkSearchIndexrangeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_IndexRange_iterator'));
final _heresdkSearchBindingslistofSdkSearchIndexrangeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_IndexRange_iterator_release_handle'));
final _heresdkSearchBindingslistofSdkSearchIndexrangeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_IndexRange_iterator_is_valid'));
final _heresdkSearchBindingslistofSdkSearchIndexrangeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_IndexRange_iterator_increment'));
final _heresdkSearchBindingslistofSdkSearchIndexrangeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_IndexRange_iterator_get'));

Pointer<Void> heresdkSearchBindingslistofSdkSearchIndexrangeToFfi(List<IndexRange> value) {
  final _result = _heresdkSearchBindingslistofSdkSearchIndexrangeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchIndexrangeToFfi(element);
    _heresdkSearchBindingslistofSdkSearchIndexrangeInsert(_result, _elementHandle);
    sdkSearchIndexrangeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<IndexRange> heresdkSearchBindingslistofSdkSearchIndexrangeFromFfi(Pointer<Void> handle) {
  final result = List<IndexRange>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchBindingslistofSdkSearchIndexrangeIterator(handle);
  while (_heresdkSearchBindingslistofSdkSearchIndexrangeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchBindingslistofSdkSearchIndexrangeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchIndexrangeFromFfi(_elementHandle));
    } finally {
      sdkSearchIndexrangeReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchBindingslistofSdkSearchIndexrangeIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchBindingslistofSdkSearchIndexrangeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchBindingslistofSdkSearchIndexrangeReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchBindingslistofSdkSearchIndexrangeReleaseHandle(handle);

final _heresdkSearchBindingslistofSdkSearchIndexrangeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_IndexRange_create_handle_nullable'));
final _heresdkSearchBindingslistofSdkSearchIndexrangeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_IndexRange_release_handle_nullable'));
final _heresdkSearchBindingslistofSdkSearchIndexrangeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_IndexRange_get_value_nullable'));

Pointer<Void> heresdkSearchBindingslistofSdkSearchIndexrangeToFfiNullable(List<IndexRange>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchBindingslistofSdkSearchIndexrangeToFfi(value);
  final result = _heresdkSearchBindingslistofSdkSearchIndexrangeCreateHandleNullable(_handle);
  heresdkSearchBindingslistofSdkSearchIndexrangeReleaseFfiHandle(_handle);
  return result;
}

List<IndexRange>? heresdkSearchBindingslistofSdkSearchIndexrangeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchBindingslistofSdkSearchIndexrangeGetValueNullable(handle);
  final result = heresdkSearchBindingslistofSdkSearchIndexrangeFromFfi(_handle);
  heresdkSearchBindingslistofSdkSearchIndexrangeReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchBindingslistofSdkSearchIndexrangeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchBindingslistofSdkSearchIndexrangeReleaseHandleNullable(handle);

final _heresdkSearchBindingslistofSdkSearchLandlinephoneCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_LandlinePhone_create_handle'));
final _heresdkSearchBindingslistofSdkSearchLandlinephoneReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_LandlinePhone_release_handle'));
final _heresdkSearchBindingslistofSdkSearchLandlinephoneInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_LandlinePhone_insert'));
final _heresdkSearchBindingslistofSdkSearchLandlinephoneIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_LandlinePhone_iterator'));
final _heresdkSearchBindingslistofSdkSearchLandlinephoneIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_LandlinePhone_iterator_release_handle'));
final _heresdkSearchBindingslistofSdkSearchLandlinephoneIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_LandlinePhone_iterator_is_valid'));
final _heresdkSearchBindingslistofSdkSearchLandlinephoneIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_LandlinePhone_iterator_increment'));
final _heresdkSearchBindingslistofSdkSearchLandlinephoneIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_LandlinePhone_iterator_get'));

Pointer<Void> heresdkSearchBindingslistofSdkSearchLandlinephoneToFfi(List<LandlinePhone> value) {
  final _result = _heresdkSearchBindingslistofSdkSearchLandlinephoneCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchLandlinephoneToFfi(element);
    _heresdkSearchBindingslistofSdkSearchLandlinephoneInsert(_result, _elementHandle);
    sdkSearchLandlinephoneReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<LandlinePhone> heresdkSearchBindingslistofSdkSearchLandlinephoneFromFfi(Pointer<Void> handle) {
  final result = List<LandlinePhone>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchBindingslistofSdkSearchLandlinephoneIterator(handle);
  while (_heresdkSearchBindingslistofSdkSearchLandlinephoneIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchBindingslistofSdkSearchLandlinephoneIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchLandlinephoneFromFfi(_elementHandle));
    } finally {
      sdkSearchLandlinephoneReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchBindingslistofSdkSearchLandlinephoneIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchBindingslistofSdkSearchLandlinephoneIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchBindingslistofSdkSearchLandlinephoneReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchBindingslistofSdkSearchLandlinephoneReleaseHandle(handle);

final _heresdkSearchBindingslistofSdkSearchLandlinephoneCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_LandlinePhone_create_handle_nullable'));
final _heresdkSearchBindingslistofSdkSearchLandlinephoneReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_LandlinePhone_release_handle_nullable'));
final _heresdkSearchBindingslistofSdkSearchLandlinephoneGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_LandlinePhone_get_value_nullable'));

Pointer<Void> heresdkSearchBindingslistofSdkSearchLandlinephoneToFfiNullable(List<LandlinePhone>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchBindingslistofSdkSearchLandlinephoneToFfi(value);
  final result = _heresdkSearchBindingslistofSdkSearchLandlinephoneCreateHandleNullable(_handle);
  heresdkSearchBindingslistofSdkSearchLandlinephoneReleaseFfiHandle(_handle);
  return result;
}

List<LandlinePhone>? heresdkSearchBindingslistofSdkSearchLandlinephoneFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchBindingslistofSdkSearchLandlinephoneGetValueNullable(handle);
  final result = heresdkSearchBindingslistofSdkSearchLandlinephoneFromFfi(_handle);
  heresdkSearchBindingslistofSdkSearchLandlinephoneReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchBindingslistofSdkSearchLandlinephoneReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchBindingslistofSdkSearchLandlinephoneReleaseHandleNullable(handle);

final _heresdkSearchBindingslistofSdkSearchMobilephoneCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_MobilePhone_create_handle'));
final _heresdkSearchBindingslistofSdkSearchMobilephoneReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_MobilePhone_release_handle'));
final _heresdkSearchBindingslistofSdkSearchMobilephoneInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_MobilePhone_insert'));
final _heresdkSearchBindingslistofSdkSearchMobilephoneIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_MobilePhone_iterator'));
final _heresdkSearchBindingslistofSdkSearchMobilephoneIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_MobilePhone_iterator_release_handle'));
final _heresdkSearchBindingslistofSdkSearchMobilephoneIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_MobilePhone_iterator_is_valid'));
final _heresdkSearchBindingslistofSdkSearchMobilephoneIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_MobilePhone_iterator_increment'));
final _heresdkSearchBindingslistofSdkSearchMobilephoneIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_MobilePhone_iterator_get'));

Pointer<Void> heresdkSearchBindingslistofSdkSearchMobilephoneToFfi(List<MobilePhone> value) {
  final _result = _heresdkSearchBindingslistofSdkSearchMobilephoneCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchMobilephoneToFfi(element);
    _heresdkSearchBindingslistofSdkSearchMobilephoneInsert(_result, _elementHandle);
    sdkSearchMobilephoneReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<MobilePhone> heresdkSearchBindingslistofSdkSearchMobilephoneFromFfi(Pointer<Void> handle) {
  final result = List<MobilePhone>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchBindingslistofSdkSearchMobilephoneIterator(handle);
  while (_heresdkSearchBindingslistofSdkSearchMobilephoneIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchBindingslistofSdkSearchMobilephoneIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchMobilephoneFromFfi(_elementHandle));
    } finally {
      sdkSearchMobilephoneReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchBindingslistofSdkSearchMobilephoneIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchBindingslistofSdkSearchMobilephoneIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchBindingslistofSdkSearchMobilephoneReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchBindingslistofSdkSearchMobilephoneReleaseHandle(handle);

final _heresdkSearchBindingslistofSdkSearchMobilephoneCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_MobilePhone_create_handle_nullable'));
final _heresdkSearchBindingslistofSdkSearchMobilephoneReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_MobilePhone_release_handle_nullable'));
final _heresdkSearchBindingslistofSdkSearchMobilephoneGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_MobilePhone_get_value_nullable'));

Pointer<Void> heresdkSearchBindingslistofSdkSearchMobilephoneToFfiNullable(List<MobilePhone>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchBindingslistofSdkSearchMobilephoneToFfi(value);
  final result = _heresdkSearchBindingslistofSdkSearchMobilephoneCreateHandleNullable(_handle);
  heresdkSearchBindingslistofSdkSearchMobilephoneReleaseFfiHandle(_handle);
  return result;
}

List<MobilePhone>? heresdkSearchBindingslistofSdkSearchMobilephoneFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchBindingslistofSdkSearchMobilephoneGetValueNullable(handle);
  final result = heresdkSearchBindingslistofSdkSearchMobilephoneFromFfi(_handle);
  heresdkSearchBindingslistofSdkSearchMobilephoneReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchBindingslistofSdkSearchMobilephoneReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchBindingslistofSdkSearchMobilephoneReleaseHandleNullable(handle);

final _heresdkSearchBindingslistofSdkSearchOpeninghoursCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_OpeningHours_create_handle'));
final _heresdkSearchBindingslistofSdkSearchOpeninghoursReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_OpeningHours_release_handle'));
final _heresdkSearchBindingslistofSdkSearchOpeninghoursInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_OpeningHours_insert'));
final _heresdkSearchBindingslistofSdkSearchOpeninghoursIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_OpeningHours_iterator'));
final _heresdkSearchBindingslistofSdkSearchOpeninghoursIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_OpeningHours_iterator_release_handle'));
final _heresdkSearchBindingslistofSdkSearchOpeninghoursIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_OpeningHours_iterator_is_valid'));
final _heresdkSearchBindingslistofSdkSearchOpeninghoursIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_OpeningHours_iterator_increment'));
final _heresdkSearchBindingslistofSdkSearchOpeninghoursIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_OpeningHours_iterator_get'));

Pointer<Void> heresdkSearchBindingslistofSdkSearchOpeninghoursToFfi(List<OpeningHours> value) {
  final _result = _heresdkSearchBindingslistofSdkSearchOpeninghoursCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchOpeninghoursToFfi(element);
    _heresdkSearchBindingslistofSdkSearchOpeninghoursInsert(_result, _elementHandle);
    sdkSearchOpeninghoursReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<OpeningHours> heresdkSearchBindingslistofSdkSearchOpeninghoursFromFfi(Pointer<Void> handle) {
  final result = List<OpeningHours>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchBindingslistofSdkSearchOpeninghoursIterator(handle);
  while (_heresdkSearchBindingslistofSdkSearchOpeninghoursIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchBindingslistofSdkSearchOpeninghoursIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchOpeninghoursFromFfi(_elementHandle));
    } finally {
      sdkSearchOpeninghoursReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchBindingslistofSdkSearchOpeninghoursIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchBindingslistofSdkSearchOpeninghoursIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchBindingslistofSdkSearchOpeninghoursReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchBindingslistofSdkSearchOpeninghoursReleaseHandle(handle);

final _heresdkSearchBindingslistofSdkSearchOpeninghoursCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_OpeningHours_create_handle_nullable'));
final _heresdkSearchBindingslistofSdkSearchOpeninghoursReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_OpeningHours_release_handle_nullable'));
final _heresdkSearchBindingslistofSdkSearchOpeninghoursGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_OpeningHours_get_value_nullable'));

Pointer<Void> heresdkSearchBindingslistofSdkSearchOpeninghoursToFfiNullable(List<OpeningHours>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchBindingslistofSdkSearchOpeninghoursToFfi(value);
  final result = _heresdkSearchBindingslistofSdkSearchOpeninghoursCreateHandleNullable(_handle);
  heresdkSearchBindingslistofSdkSearchOpeninghoursReleaseFfiHandle(_handle);
  return result;
}

List<OpeningHours>? heresdkSearchBindingslistofSdkSearchOpeninghoursFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchBindingslistofSdkSearchOpeninghoursGetValueNullable(handle);
  final result = heresdkSearchBindingslistofSdkSearchOpeninghoursFromFfi(_handle);
  heresdkSearchBindingslistofSdkSearchOpeninghoursReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchBindingslistofSdkSearchOpeninghoursReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchBindingslistofSdkSearchOpeninghoursReleaseHandleNullable(handle);

final _heresdkSearchBindingslistofSdkSearchPlaceCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_Place_create_handle'));
final _heresdkSearchBindingslistofSdkSearchPlaceReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_Place_release_handle'));
final _heresdkSearchBindingslistofSdkSearchPlaceInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_Place_insert'));
final _heresdkSearchBindingslistofSdkSearchPlaceIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_Place_iterator'));
final _heresdkSearchBindingslistofSdkSearchPlaceIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_Place_iterator_release_handle'));
final _heresdkSearchBindingslistofSdkSearchPlaceIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_Place_iterator_is_valid'));
final _heresdkSearchBindingslistofSdkSearchPlaceIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_Place_iterator_increment'));
final _heresdkSearchBindingslistofSdkSearchPlaceIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_Place_iterator_get'));

Pointer<Void> heresdkSearchBindingslistofSdkSearchPlaceToFfi(List<Place> value) {
  final _result = _heresdkSearchBindingslistofSdkSearchPlaceCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchPlaceToFfi(element);
    _heresdkSearchBindingslistofSdkSearchPlaceInsert(_result, _elementHandle);
    sdkSearchPlaceReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Place> heresdkSearchBindingslistofSdkSearchPlaceFromFfi(Pointer<Void> handle) {
  final result = List<Place>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchBindingslistofSdkSearchPlaceIterator(handle);
  while (_heresdkSearchBindingslistofSdkSearchPlaceIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchBindingslistofSdkSearchPlaceIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchPlaceFromFfi(_elementHandle));
    } finally {
      sdkSearchPlaceReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchBindingslistofSdkSearchPlaceIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchBindingslistofSdkSearchPlaceIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchBindingslistofSdkSearchPlaceReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchBindingslistofSdkSearchPlaceReleaseHandle(handle);

final _heresdkSearchBindingslistofSdkSearchPlaceCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_Place_create_handle_nullable'));
final _heresdkSearchBindingslistofSdkSearchPlaceReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_Place_release_handle_nullable'));
final _heresdkSearchBindingslistofSdkSearchPlaceGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_Place_get_value_nullable'));

Pointer<Void> heresdkSearchBindingslistofSdkSearchPlaceToFfiNullable(List<Place>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchBindingslistofSdkSearchPlaceToFfi(value);
  final result = _heresdkSearchBindingslistofSdkSearchPlaceCreateHandleNullable(_handle);
  heresdkSearchBindingslistofSdkSearchPlaceReleaseFfiHandle(_handle);
  return result;
}

List<Place>? heresdkSearchBindingslistofSdkSearchPlaceFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchBindingslistofSdkSearchPlaceGetValueNullable(handle);
  final result = heresdkSearchBindingslistofSdkSearchPlaceFromFfi(_handle);
  heresdkSearchBindingslistofSdkSearchPlaceReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchBindingslistofSdkSearchPlaceReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchBindingslistofSdkSearchPlaceReleaseHandleNullable(handle);

final _heresdkSearchBindingslistofSdkSearchPlacecategoryCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_PlaceCategory_create_handle'));
final _heresdkSearchBindingslistofSdkSearchPlacecategoryReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_PlaceCategory_release_handle'));
final _heresdkSearchBindingslistofSdkSearchPlacecategoryInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_PlaceCategory_insert'));
final _heresdkSearchBindingslistofSdkSearchPlacecategoryIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_PlaceCategory_iterator'));
final _heresdkSearchBindingslistofSdkSearchPlacecategoryIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_PlaceCategory_iterator_release_handle'));
final _heresdkSearchBindingslistofSdkSearchPlacecategoryIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_PlaceCategory_iterator_is_valid'));
final _heresdkSearchBindingslistofSdkSearchPlacecategoryIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_PlaceCategory_iterator_increment'));
final _heresdkSearchBindingslistofSdkSearchPlacecategoryIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_PlaceCategory_iterator_get'));

Pointer<Void> heresdkSearchBindingslistofSdkSearchPlacecategoryToFfi(List<PlaceCategory> value) {
  final _result = _heresdkSearchBindingslistofSdkSearchPlacecategoryCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchPlacecategoryToFfi(element);
    _heresdkSearchBindingslistofSdkSearchPlacecategoryInsert(_result, _elementHandle);
    sdkSearchPlacecategoryReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<PlaceCategory> heresdkSearchBindingslistofSdkSearchPlacecategoryFromFfi(Pointer<Void> handle) {
  final result = List<PlaceCategory>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchBindingslistofSdkSearchPlacecategoryIterator(handle);
  while (_heresdkSearchBindingslistofSdkSearchPlacecategoryIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchBindingslistofSdkSearchPlacecategoryIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchPlacecategoryFromFfi(_elementHandle));
    } finally {
      sdkSearchPlacecategoryReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchBindingslistofSdkSearchPlacecategoryIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchBindingslistofSdkSearchPlacecategoryIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchBindingslistofSdkSearchPlacecategoryReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchBindingslistofSdkSearchPlacecategoryReleaseHandle(handle);

final _heresdkSearchBindingslistofSdkSearchPlacecategoryCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_PlaceCategory_create_handle_nullable'));
final _heresdkSearchBindingslistofSdkSearchPlacecategoryReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_PlaceCategory_release_handle_nullable'));
final _heresdkSearchBindingslistofSdkSearchPlacecategoryGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_PlaceCategory_get_value_nullable'));

Pointer<Void> heresdkSearchBindingslistofSdkSearchPlacecategoryToFfiNullable(List<PlaceCategory>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchBindingslistofSdkSearchPlacecategoryToFfi(value);
  final result = _heresdkSearchBindingslistofSdkSearchPlacecategoryCreateHandleNullable(_handle);
  heresdkSearchBindingslistofSdkSearchPlacecategoryReleaseFfiHandle(_handle);
  return result;
}

List<PlaceCategory>? heresdkSearchBindingslistofSdkSearchPlacecategoryFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchBindingslistofSdkSearchPlacecategoryGetValueNullable(handle);
  final result = heresdkSearchBindingslistofSdkSearchPlacecategoryFromFfi(_handle);
  heresdkSearchBindingslistofSdkSearchPlacecategoryReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchBindingslistofSdkSearchPlacecategoryReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchBindingslistofSdkSearchPlacecategoryReleaseHandleNullable(handle);

final _heresdkSearchBindingslistofSdkSearchScheduledetailsCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_ScheduleDetails_create_handle'));
final _heresdkSearchBindingslistofSdkSearchScheduledetailsReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_ScheduleDetails_release_handle'));
final _heresdkSearchBindingslistofSdkSearchScheduledetailsInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_ScheduleDetails_insert'));
final _heresdkSearchBindingslistofSdkSearchScheduledetailsIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_ScheduleDetails_iterator'));
final _heresdkSearchBindingslistofSdkSearchScheduledetailsIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_ScheduleDetails_iterator_release_handle'));
final _heresdkSearchBindingslistofSdkSearchScheduledetailsIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_ScheduleDetails_iterator_is_valid'));
final _heresdkSearchBindingslistofSdkSearchScheduledetailsIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_ScheduleDetails_iterator_increment'));
final _heresdkSearchBindingslistofSdkSearchScheduledetailsIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_ScheduleDetails_iterator_get'));

Pointer<Void> heresdkSearchBindingslistofSdkSearchScheduledetailsToFfi(List<ScheduleDetails> value) {
  final _result = _heresdkSearchBindingslistofSdkSearchScheduledetailsCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchScheduledetailsToFfi(element);
    _heresdkSearchBindingslistofSdkSearchScheduledetailsInsert(_result, _elementHandle);
    sdkSearchScheduledetailsReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<ScheduleDetails> heresdkSearchBindingslistofSdkSearchScheduledetailsFromFfi(Pointer<Void> handle) {
  final result = List<ScheduleDetails>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchBindingslistofSdkSearchScheduledetailsIterator(handle);
  while (_heresdkSearchBindingslistofSdkSearchScheduledetailsIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchBindingslistofSdkSearchScheduledetailsIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchScheduledetailsFromFfi(_elementHandle));
    } finally {
      sdkSearchScheduledetailsReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchBindingslistofSdkSearchScheduledetailsIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchBindingslistofSdkSearchScheduledetailsIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchBindingslistofSdkSearchScheduledetailsReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchBindingslistofSdkSearchScheduledetailsReleaseHandle(handle);

final _heresdkSearchBindingslistofSdkSearchScheduledetailsCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_ScheduleDetails_create_handle_nullable'));
final _heresdkSearchBindingslistofSdkSearchScheduledetailsReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_ScheduleDetails_release_handle_nullable'));
final _heresdkSearchBindingslistofSdkSearchScheduledetailsGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_ScheduleDetails_get_value_nullable'));

Pointer<Void> heresdkSearchBindingslistofSdkSearchScheduledetailsToFfiNullable(List<ScheduleDetails>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchBindingslistofSdkSearchScheduledetailsToFfi(value);
  final result = _heresdkSearchBindingslistofSdkSearchScheduledetailsCreateHandleNullable(_handle);
  heresdkSearchBindingslistofSdkSearchScheduledetailsReleaseFfiHandle(_handle);
  return result;
}

List<ScheduleDetails>? heresdkSearchBindingslistofSdkSearchScheduledetailsFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchBindingslistofSdkSearchScheduledetailsGetValueNullable(handle);
  final result = heresdkSearchBindingslistofSdkSearchScheduledetailsFromFfi(_handle);
  heresdkSearchBindingslistofSdkSearchScheduledetailsReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchBindingslistofSdkSearchScheduledetailsReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchBindingslistofSdkSearchScheduledetailsReleaseHandleNullable(handle);

final _heresdkSearchBindingslistofSdkSearchSuggestionCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_Suggestion_create_handle'));
final _heresdkSearchBindingslistofSdkSearchSuggestionReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_Suggestion_release_handle'));
final _heresdkSearchBindingslistofSdkSearchSuggestionInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_Suggestion_insert'));
final _heresdkSearchBindingslistofSdkSearchSuggestionIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_Suggestion_iterator'));
final _heresdkSearchBindingslistofSdkSearchSuggestionIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_Suggestion_iterator_release_handle'));
final _heresdkSearchBindingslistofSdkSearchSuggestionIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_Suggestion_iterator_is_valid'));
final _heresdkSearchBindingslistofSdkSearchSuggestionIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_Suggestion_iterator_increment'));
final _heresdkSearchBindingslistofSdkSearchSuggestionIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_Suggestion_iterator_get'));

Pointer<Void> heresdkSearchBindingslistofSdkSearchSuggestionToFfi(List<Suggestion> value) {
  final _result = _heresdkSearchBindingslistofSdkSearchSuggestionCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchSuggestionToFfi(element);
    _heresdkSearchBindingslistofSdkSearchSuggestionInsert(_result, _elementHandle);
    sdkSearchSuggestionReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Suggestion> heresdkSearchBindingslistofSdkSearchSuggestionFromFfi(Pointer<Void> handle) {
  final result = List<Suggestion>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchBindingslistofSdkSearchSuggestionIterator(handle);
  while (_heresdkSearchBindingslistofSdkSearchSuggestionIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchBindingslistofSdkSearchSuggestionIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchSuggestionFromFfi(_elementHandle));
    } finally {
      sdkSearchSuggestionReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchBindingslistofSdkSearchSuggestionIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchBindingslistofSdkSearchSuggestionIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchBindingslistofSdkSearchSuggestionReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchBindingslistofSdkSearchSuggestionReleaseHandle(handle);

final _heresdkSearchBindingslistofSdkSearchSuggestionCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_Suggestion_create_handle_nullable'));
final _heresdkSearchBindingslistofSdkSearchSuggestionReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_Suggestion_release_handle_nullable'));
final _heresdkSearchBindingslistofSdkSearchSuggestionGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_Suggestion_get_value_nullable'));

Pointer<Void> heresdkSearchBindingslistofSdkSearchSuggestionToFfiNullable(List<Suggestion>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchBindingslistofSdkSearchSuggestionToFfi(value);
  final result = _heresdkSearchBindingslistofSdkSearchSuggestionCreateHandleNullable(_handle);
  heresdkSearchBindingslistofSdkSearchSuggestionReleaseFfiHandle(_handle);
  return result;
}

List<Suggestion>? heresdkSearchBindingslistofSdkSearchSuggestionFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchBindingslistofSdkSearchSuggestionGetValueNullable(handle);
  final result = heresdkSearchBindingslistofSdkSearchSuggestionFromFfi(_handle);
  heresdkSearchBindingslistofSdkSearchSuggestionReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchBindingslistofSdkSearchSuggestionReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchBindingslistofSdkSearchSuggestionReleaseHandleNullable(handle);

final _heresdkSearchBindingslistofSdkSearchSupplierreferenceCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_SupplierReference_create_handle'));
final _heresdkSearchBindingslistofSdkSearchSupplierreferenceReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_SupplierReference_release_handle'));
final _heresdkSearchBindingslistofSdkSearchSupplierreferenceInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_SupplierReference_insert'));
final _heresdkSearchBindingslistofSdkSearchSupplierreferenceIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_SupplierReference_iterator'));
final _heresdkSearchBindingslistofSdkSearchSupplierreferenceIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_SupplierReference_iterator_release_handle'));
final _heresdkSearchBindingslistofSdkSearchSupplierreferenceIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_SupplierReference_iterator_is_valid'));
final _heresdkSearchBindingslistofSdkSearchSupplierreferenceIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_SupplierReference_iterator_increment'));
final _heresdkSearchBindingslistofSdkSearchSupplierreferenceIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_SupplierReference_iterator_get'));

Pointer<Void> heresdkSearchBindingslistofSdkSearchSupplierreferenceToFfi(List<SupplierReference> value) {
  final _result = _heresdkSearchBindingslistofSdkSearchSupplierreferenceCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchSupplierreferenceToFfi(element);
    _heresdkSearchBindingslistofSdkSearchSupplierreferenceInsert(_result, _elementHandle);
    sdkSearchSupplierreferenceReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<SupplierReference> heresdkSearchBindingslistofSdkSearchSupplierreferenceFromFfi(Pointer<Void> handle) {
  final result = List<SupplierReference>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchBindingslistofSdkSearchSupplierreferenceIterator(handle);
  while (_heresdkSearchBindingslistofSdkSearchSupplierreferenceIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchBindingslistofSdkSearchSupplierreferenceIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchSupplierreferenceFromFfi(_elementHandle));
    } finally {
      sdkSearchSupplierreferenceReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchBindingslistofSdkSearchSupplierreferenceIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchBindingslistofSdkSearchSupplierreferenceIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchBindingslistofSdkSearchSupplierreferenceReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchBindingslistofSdkSearchSupplierreferenceReleaseHandle(handle);

final _heresdkSearchBindingslistofSdkSearchSupplierreferenceCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_SupplierReference_create_handle_nullable'));
final _heresdkSearchBindingslistofSdkSearchSupplierreferenceReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_SupplierReference_release_handle_nullable'));
final _heresdkSearchBindingslistofSdkSearchSupplierreferenceGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_SupplierReference_get_value_nullable'));

Pointer<Void> heresdkSearchBindingslistofSdkSearchSupplierreferenceToFfiNullable(List<SupplierReference>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchBindingslistofSdkSearchSupplierreferenceToFfi(value);
  final result = _heresdkSearchBindingslistofSdkSearchSupplierreferenceCreateHandleNullable(_handle);
  heresdkSearchBindingslistofSdkSearchSupplierreferenceReleaseFfiHandle(_handle);
  return result;
}

List<SupplierReference>? heresdkSearchBindingslistofSdkSearchSupplierreferenceFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchBindingslistofSdkSearchSupplierreferenceGetValueNullable(handle);
  final result = heresdkSearchBindingslistofSdkSearchSupplierreferenceFromFfi(_handle);
  heresdkSearchBindingslistofSdkSearchSupplierreferenceReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchBindingslistofSdkSearchSupplierreferenceReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchBindingslistofSdkSearchSupplierreferenceReleaseHandleNullable(handle);

final _heresdkSearchBindingslistofSdkSearchWebeditorialCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_WebEditorial_create_handle'));
final _heresdkSearchBindingslistofSdkSearchWebeditorialReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_WebEditorial_release_handle'));
final _heresdkSearchBindingslistofSdkSearchWebeditorialInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_WebEditorial_insert'));
final _heresdkSearchBindingslistofSdkSearchWebeditorialIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_WebEditorial_iterator'));
final _heresdkSearchBindingslistofSdkSearchWebeditorialIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_WebEditorial_iterator_release_handle'));
final _heresdkSearchBindingslistofSdkSearchWebeditorialIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_WebEditorial_iterator_is_valid'));
final _heresdkSearchBindingslistofSdkSearchWebeditorialIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_WebEditorial_iterator_increment'));
final _heresdkSearchBindingslistofSdkSearchWebeditorialIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_WebEditorial_iterator_get'));

Pointer<Void> heresdkSearchBindingslistofSdkSearchWebeditorialToFfi(List<WebEditorial> value) {
  final _result = _heresdkSearchBindingslistofSdkSearchWebeditorialCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchWebeditorialToFfi(element);
    _heresdkSearchBindingslistofSdkSearchWebeditorialInsert(_result, _elementHandle);
    sdkSearchWebeditorialReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<WebEditorial> heresdkSearchBindingslistofSdkSearchWebeditorialFromFfi(Pointer<Void> handle) {
  final result = List<WebEditorial>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchBindingslistofSdkSearchWebeditorialIterator(handle);
  while (_heresdkSearchBindingslistofSdkSearchWebeditorialIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchBindingslistofSdkSearchWebeditorialIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchWebeditorialFromFfi(_elementHandle));
    } finally {
      sdkSearchWebeditorialReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchBindingslistofSdkSearchWebeditorialIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchBindingslistofSdkSearchWebeditorialIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchBindingslistofSdkSearchWebeditorialReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchBindingslistofSdkSearchWebeditorialReleaseHandle(handle);

final _heresdkSearchBindingslistofSdkSearchWebeditorialCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_WebEditorial_create_handle_nullable'));
final _heresdkSearchBindingslistofSdkSearchWebeditorialReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_WebEditorial_release_handle_nullable'));
final _heresdkSearchBindingslistofSdkSearchWebeditorialGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_WebEditorial_get_value_nullable'));

Pointer<Void> heresdkSearchBindingslistofSdkSearchWebeditorialToFfiNullable(List<WebEditorial>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchBindingslistofSdkSearchWebeditorialToFfi(value);
  final result = _heresdkSearchBindingslistofSdkSearchWebeditorialCreateHandleNullable(_handle);
  heresdkSearchBindingslistofSdkSearchWebeditorialReleaseFfiHandle(_handle);
  return result;
}

List<WebEditorial>? heresdkSearchBindingslistofSdkSearchWebeditorialFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchBindingslistofSdkSearchWebeditorialGetValueNullable(handle);
  final result = heresdkSearchBindingslistofSdkSearchWebeditorialFromFfi(_handle);
  heresdkSearchBindingslistofSdkSearchWebeditorialReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchBindingslistofSdkSearchWebeditorialReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchBindingslistofSdkSearchWebeditorialReleaseHandleNullable(handle);

final _heresdkSearchBindingslistofSdkSearchWebimageCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_WebImage_create_handle'));
final _heresdkSearchBindingslistofSdkSearchWebimageReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_WebImage_release_handle'));
final _heresdkSearchBindingslistofSdkSearchWebimageInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_WebImage_insert'));
final _heresdkSearchBindingslistofSdkSearchWebimageIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_WebImage_iterator'));
final _heresdkSearchBindingslistofSdkSearchWebimageIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_WebImage_iterator_release_handle'));
final _heresdkSearchBindingslistofSdkSearchWebimageIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_WebImage_iterator_is_valid'));
final _heresdkSearchBindingslistofSdkSearchWebimageIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_WebImage_iterator_increment'));
final _heresdkSearchBindingslistofSdkSearchWebimageIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_WebImage_iterator_get'));

Pointer<Void> heresdkSearchBindingslistofSdkSearchWebimageToFfi(List<WebImage> value) {
  final _result = _heresdkSearchBindingslistofSdkSearchWebimageCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchWebimageToFfi(element);
    _heresdkSearchBindingslistofSdkSearchWebimageInsert(_result, _elementHandle);
    sdkSearchWebimageReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<WebImage> heresdkSearchBindingslistofSdkSearchWebimageFromFfi(Pointer<Void> handle) {
  final result = List<WebImage>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchBindingslistofSdkSearchWebimageIterator(handle);
  while (_heresdkSearchBindingslistofSdkSearchWebimageIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchBindingslistofSdkSearchWebimageIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchWebimageFromFfi(_elementHandle));
    } finally {
      sdkSearchWebimageReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchBindingslistofSdkSearchWebimageIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchBindingslistofSdkSearchWebimageIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchBindingslistofSdkSearchWebimageReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchBindingslistofSdkSearchWebimageReleaseHandle(handle);

final _heresdkSearchBindingslistofSdkSearchWebimageCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_WebImage_create_handle_nullable'));
final _heresdkSearchBindingslistofSdkSearchWebimageReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_WebImage_release_handle_nullable'));
final _heresdkSearchBindingslistofSdkSearchWebimageGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_WebImage_get_value_nullable'));

Pointer<Void> heresdkSearchBindingslistofSdkSearchWebimageToFfiNullable(List<WebImage>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchBindingslistofSdkSearchWebimageToFfi(value);
  final result = _heresdkSearchBindingslistofSdkSearchWebimageCreateHandleNullable(_handle);
  heresdkSearchBindingslistofSdkSearchWebimageReleaseFfiHandle(_handle);
  return result;
}

List<WebImage>? heresdkSearchBindingslistofSdkSearchWebimageFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchBindingslistofSdkSearchWebimageGetValueNullable(handle);
  final result = heresdkSearchBindingslistofSdkSearchWebimageFromFfi(_handle);
  heresdkSearchBindingslistofSdkSearchWebimageReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchBindingslistofSdkSearchWebimageReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchBindingslistofSdkSearchWebimageReleaseHandleNullable(handle);

final _heresdkSearchBindingslistofSdkSearchWebratingCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_WebRating_create_handle'));
final _heresdkSearchBindingslistofSdkSearchWebratingReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_WebRating_release_handle'));
final _heresdkSearchBindingslistofSdkSearchWebratingInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_WebRating_insert'));
final _heresdkSearchBindingslistofSdkSearchWebratingIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_WebRating_iterator'));
final _heresdkSearchBindingslistofSdkSearchWebratingIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_WebRating_iterator_release_handle'));
final _heresdkSearchBindingslistofSdkSearchWebratingIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_WebRating_iterator_is_valid'));
final _heresdkSearchBindingslistofSdkSearchWebratingIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_WebRating_iterator_increment'));
final _heresdkSearchBindingslistofSdkSearchWebratingIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_WebRating_iterator_get'));

Pointer<Void> heresdkSearchBindingslistofSdkSearchWebratingToFfi(List<WebRating> value) {
  final _result = _heresdkSearchBindingslistofSdkSearchWebratingCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchWebratingToFfi(element);
    _heresdkSearchBindingslistofSdkSearchWebratingInsert(_result, _elementHandle);
    sdkSearchWebratingReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<WebRating> heresdkSearchBindingslistofSdkSearchWebratingFromFfi(Pointer<Void> handle) {
  final result = List<WebRating>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchBindingslistofSdkSearchWebratingIterator(handle);
  while (_heresdkSearchBindingslistofSdkSearchWebratingIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchBindingslistofSdkSearchWebratingIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchWebratingFromFfi(_elementHandle));
    } finally {
      sdkSearchWebratingReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchBindingslistofSdkSearchWebratingIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchBindingslistofSdkSearchWebratingIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchBindingslistofSdkSearchWebratingReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchBindingslistofSdkSearchWebratingReleaseHandle(handle);

final _heresdkSearchBindingslistofSdkSearchWebratingCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_WebRating_create_handle_nullable'));
final _heresdkSearchBindingslistofSdkSearchWebratingReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_WebRating_release_handle_nullable'));
final _heresdkSearchBindingslistofSdkSearchWebratingGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_WebRating_get_value_nullable'));

Pointer<Void> heresdkSearchBindingslistofSdkSearchWebratingToFfiNullable(List<WebRating>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchBindingslistofSdkSearchWebratingToFfi(value);
  final result = _heresdkSearchBindingslistofSdkSearchWebratingCreateHandleNullable(_handle);
  heresdkSearchBindingslistofSdkSearchWebratingReleaseFfiHandle(_handle);
  return result;
}

List<WebRating>? heresdkSearchBindingslistofSdkSearchWebratingFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchBindingslistofSdkSearchWebratingGetValueNullable(handle);
  final result = heresdkSearchBindingslistofSdkSearchWebratingFromFfi(_handle);
  heresdkSearchBindingslistofSdkSearchWebratingReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchBindingslistofSdkSearchWebratingReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchBindingslistofSdkSearchWebratingReleaseHandleNullable(handle);

final _heresdkSearchBindingslistofSdkSearchWebsiteaddressCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_WebsiteAddress_create_handle'));
final _heresdkSearchBindingslistofSdkSearchWebsiteaddressReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_WebsiteAddress_release_handle'));
final _heresdkSearchBindingslistofSdkSearchWebsiteaddressInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_WebsiteAddress_insert'));
final _heresdkSearchBindingslistofSdkSearchWebsiteaddressIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_WebsiteAddress_iterator'));
final _heresdkSearchBindingslistofSdkSearchWebsiteaddressIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_WebsiteAddress_iterator_release_handle'));
final _heresdkSearchBindingslistofSdkSearchWebsiteaddressIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_WebsiteAddress_iterator_is_valid'));
final _heresdkSearchBindingslistofSdkSearchWebsiteaddressIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_WebsiteAddress_iterator_increment'));
final _heresdkSearchBindingslistofSdkSearchWebsiteaddressIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_WebsiteAddress_iterator_get'));

Pointer<Void> heresdkSearchBindingslistofSdkSearchWebsiteaddressToFfi(List<WebsiteAddress> value) {
  final _result = _heresdkSearchBindingslistofSdkSearchWebsiteaddressCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchWebsiteaddressToFfi(element);
    _heresdkSearchBindingslistofSdkSearchWebsiteaddressInsert(_result, _elementHandle);
    sdkSearchWebsiteaddressReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<WebsiteAddress> heresdkSearchBindingslistofSdkSearchWebsiteaddressFromFfi(Pointer<Void> handle) {
  final result = List<WebsiteAddress>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchBindingslistofSdkSearchWebsiteaddressIterator(handle);
  while (_heresdkSearchBindingslistofSdkSearchWebsiteaddressIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchBindingslistofSdkSearchWebsiteaddressIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchWebsiteaddressFromFfi(_elementHandle));
    } finally {
      sdkSearchWebsiteaddressReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchBindingslistofSdkSearchWebsiteaddressIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchBindingslistofSdkSearchWebsiteaddressIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchBindingslistofSdkSearchWebsiteaddressReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchBindingslistofSdkSearchWebsiteaddressReleaseHandle(handle);

final _heresdkSearchBindingslistofSdkSearchWebsiteaddressCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_WebsiteAddress_create_handle_nullable'));
final _heresdkSearchBindingslistofSdkSearchWebsiteaddressReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_WebsiteAddress_release_handle_nullable'));
final _heresdkSearchBindingslistofSdkSearchWebsiteaddressGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_WebsiteAddress_get_value_nullable'));

Pointer<Void> heresdkSearchBindingslistofSdkSearchWebsiteaddressToFfiNullable(List<WebsiteAddress>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchBindingslistofSdkSearchWebsiteaddressToFfi(value);
  final result = _heresdkSearchBindingslistofSdkSearchWebsiteaddressCreateHandleNullable(_handle);
  heresdkSearchBindingslistofSdkSearchWebsiteaddressReleaseFfiHandle(_handle);
  return result;
}

List<WebsiteAddress>? heresdkSearchBindingslistofSdkSearchWebsiteaddressFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchBindingslistofSdkSearchWebsiteaddressGetValueNullable(handle);
  final result = heresdkSearchBindingslistofSdkSearchWebsiteaddressFromFfi(_handle);
  heresdkSearchBindingslistofSdkSearchWebsiteaddressReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchBindingslistofSdkSearchWebsiteaddressReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchBindingslistofSdkSearchWebsiteaddressReleaseHandleNullable(handle);

final _heresdkSearchBindingsmapofSdkSearchHighlighttypeToHeresdkSearchBindingslistofSdkSearchIndexrangeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_bindingsMapOf_sdk_search_HighlightType_to_heresdk_search_bindingsListOf_sdk_search_IndexRange_create_handle'));
final _heresdkSearchBindingsmapofSdkSearchHighlighttypeToHeresdkSearchBindingslistofSdkSearchIndexrangeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsMapOf_sdk_search_HighlightType_to_heresdk_search_bindingsListOf_sdk_search_IndexRange_release_handle'));
final _heresdkSearchBindingsmapofSdkSearchHighlighttypeToHeresdkSearchBindingslistofSdkSearchIndexrangePut = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32, Pointer<Void>),
    void Function(Pointer<Void>, int, Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsMapOf_sdk_search_HighlightType_to_heresdk_search_bindingsListOf_sdk_search_IndexRange_put'));
final _heresdkSearchBindingsmapofSdkSearchHighlighttypeToHeresdkSearchBindingslistofSdkSearchIndexrangeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsMapOf_sdk_search_HighlightType_to_heresdk_search_bindingsListOf_sdk_search_IndexRange_iterator'));
final _heresdkSearchBindingsmapofSdkSearchHighlighttypeToHeresdkSearchBindingslistofSdkSearchIndexrangeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsMapOf_sdk_search_HighlightType_to_heresdk_search_bindingsListOf_sdk_search_IndexRange_iterator_release_handle'));
final _heresdkSearchBindingsmapofSdkSearchHighlighttypeToHeresdkSearchBindingslistofSdkSearchIndexrangeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_bindingsMapOf_sdk_search_HighlightType_to_heresdk_search_bindingsListOf_sdk_search_IndexRange_iterator_is_valid'));
final _heresdkSearchBindingsmapofSdkSearchHighlighttypeToHeresdkSearchBindingslistofSdkSearchIndexrangeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsMapOf_sdk_search_HighlightType_to_heresdk_search_bindingsListOf_sdk_search_IndexRange_iterator_increment'));
final _heresdkSearchBindingsmapofSdkSearchHighlighttypeToHeresdkSearchBindingslistofSdkSearchIndexrangeIteratorGetKey = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsMapOf_sdk_search_HighlightType_to_heresdk_search_bindingsListOf_sdk_search_IndexRange_iterator_get_key'));
final _heresdkSearchBindingsmapofSdkSearchHighlighttypeToHeresdkSearchBindingslistofSdkSearchIndexrangeIteratorGetValue = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsMapOf_sdk_search_HighlightType_to_heresdk_search_bindingsListOf_sdk_search_IndexRange_iterator_get_value'));

Pointer<Void> heresdkSearchBindingsmapofSdkSearchHighlighttypeToHeresdkSearchBindingslistofSdkSearchIndexrangeToFfi(Map<HighlightType, List<IndexRange>> value) {
  final _result = _heresdkSearchBindingsmapofSdkSearchHighlighttypeToHeresdkSearchBindingslistofSdkSearchIndexrangeCreateHandle();
  for (final entry in value.entries) {
    final _keyHandle = sdkSearchHighlighttypeToFfi(entry.key);
    final _valueHandle = heresdkSearchBindingslistofSdkSearchIndexrangeToFfi(entry.value);
    _heresdkSearchBindingsmapofSdkSearchHighlighttypeToHeresdkSearchBindingslistofSdkSearchIndexrangePut(_result, _keyHandle, _valueHandle);
    sdkSearchHighlighttypeReleaseFfiHandle(_keyHandle);
    heresdkSearchBindingslistofSdkSearchIndexrangeReleaseFfiHandle(_valueHandle);
  }
  return _result;
}

Map<HighlightType, List<IndexRange>> heresdkSearchBindingsmapofSdkSearchHighlighttypeToHeresdkSearchBindingslistofSdkSearchIndexrangeFromFfi(Pointer<Void> handle) {
  final result = Map<HighlightType, List<IndexRange>>();
  final _iteratorHandle = _heresdkSearchBindingsmapofSdkSearchHighlighttypeToHeresdkSearchBindingslistofSdkSearchIndexrangeIterator(handle);
  while (_heresdkSearchBindingsmapofSdkSearchHighlighttypeToHeresdkSearchBindingslistofSdkSearchIndexrangeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _keyHandle = _heresdkSearchBindingsmapofSdkSearchHighlighttypeToHeresdkSearchBindingslistofSdkSearchIndexrangeIteratorGetKey(_iteratorHandle);
    final _valueHandle = _heresdkSearchBindingsmapofSdkSearchHighlighttypeToHeresdkSearchBindingslistofSdkSearchIndexrangeIteratorGetValue(_iteratorHandle);
    try {
      result[sdkSearchHighlighttypeFromFfi(_keyHandle)] =
        heresdkSearchBindingslistofSdkSearchIndexrangeFromFfi(_valueHandle);
    } finally {
      sdkSearchHighlighttypeReleaseFfiHandle(_keyHandle);
      heresdkSearchBindingslistofSdkSearchIndexrangeReleaseFfiHandle(_valueHandle);
    }
    _heresdkSearchBindingsmapofSdkSearchHighlighttypeToHeresdkSearchBindingslistofSdkSearchIndexrangeIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchBindingsmapofSdkSearchHighlighttypeToHeresdkSearchBindingslistofSdkSearchIndexrangeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchBindingsmapofSdkSearchHighlighttypeToHeresdkSearchBindingslistofSdkSearchIndexrangeReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchBindingsmapofSdkSearchHighlighttypeToHeresdkSearchBindingslistofSdkSearchIndexrangeReleaseHandle(handle);

final _heresdkSearchBindingsmapofSdkSearchHighlighttypeToHeresdkSearchBindingslistofSdkSearchIndexrangeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsMapOf_sdk_search_HighlightType_to_heresdk_search_bindingsListOf_sdk_search_IndexRange_create_handle_nullable'));
final _heresdkSearchBindingsmapofSdkSearchHighlighttypeToHeresdkSearchBindingslistofSdkSearchIndexrangeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsMapOf_sdk_search_HighlightType_to_heresdk_search_bindingsListOf_sdk_search_IndexRange_release_handle_nullable'));
final _heresdkSearchBindingsmapofSdkSearchHighlighttypeToHeresdkSearchBindingslistofSdkSearchIndexrangeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsMapOf_sdk_search_HighlightType_to_heresdk_search_bindingsListOf_sdk_search_IndexRange_get_value_nullable'));

Pointer<Void> heresdkSearchBindingsmapofSdkSearchHighlighttypeToHeresdkSearchBindingslistofSdkSearchIndexrangeToFfiNullable(Map<HighlightType, List<IndexRange>>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchBindingsmapofSdkSearchHighlighttypeToHeresdkSearchBindingslistofSdkSearchIndexrangeToFfi(value);
  final result = _heresdkSearchBindingsmapofSdkSearchHighlighttypeToHeresdkSearchBindingslistofSdkSearchIndexrangeCreateHandleNullable(_handle);
  heresdkSearchBindingsmapofSdkSearchHighlighttypeToHeresdkSearchBindingslistofSdkSearchIndexrangeReleaseFfiHandle(_handle);
  return result;
}

Map<HighlightType, List<IndexRange>>? heresdkSearchBindingsmapofSdkSearchHighlighttypeToHeresdkSearchBindingslistofSdkSearchIndexrangeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchBindingsmapofSdkSearchHighlighttypeToHeresdkSearchBindingslistofSdkSearchIndexrangeGetValueNullable(handle);
  final result = heresdkSearchBindingsmapofSdkSearchHighlighttypeToHeresdkSearchBindingslistofSdkSearchIndexrangeFromFfi(_handle);
  heresdkSearchBindingsmapofSdkSearchHighlighttypeToHeresdkSearchBindingslistofSdkSearchIndexrangeReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchBindingsmapofSdkSearchHighlighttypeToHeresdkSearchBindingslistofSdkSearchIndexrangeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchBindingsmapofSdkSearchHighlighttypeToHeresdkSearchBindingslistofSdkSearchIndexrangeReleaseHandleNullable(handle);


// Copyright (c) 2018-2021 HERE Global B.V. and its affiliate(s).
// All rights reserved.
//
// This software and other materials contain proprietary information
// controlled by HERE and are protected by applicable copyright legislation.
// Any use and utilization of this software and other materials and
// disclosure to any third parties is conditional upon having a separate
// agreement with HERE for the access, use, utilization or disclosure of this
// software. In the absence of such agreement, the use of the software is not
// allowed.
//





























final _heresdkSearchCommonBindingslistofLocaleCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_common_bindingsListOf_Locale_create_handle'));
final _heresdkSearchCommonBindingslistofLocaleReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_Locale_release_handle'));
final _heresdkSearchCommonBindingslistofLocaleInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_Locale_insert'));
final _heresdkSearchCommonBindingslistofLocaleIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_Locale_iterator'));
final _heresdkSearchCommonBindingslistofLocaleIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_Locale_iterator_release_handle'));
final _heresdkSearchCommonBindingslistofLocaleIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_Locale_iterator_is_valid'));
final _heresdkSearchCommonBindingslistofLocaleIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_Locale_iterator_increment'));
final _heresdkSearchCommonBindingslistofLocaleIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_Locale_iterator_get'));

Pointer<Void> heresdkSearchCommonBindingslistofLocaleToFfi(List<Locale> value) {
  final _result = _heresdkSearchCommonBindingslistofLocaleCreateHandle();
  for (final element in value) {
    final _elementHandle = localeToFfi(element);
    _heresdkSearchCommonBindingslistofLocaleInsert(_result, _elementHandle);
    localeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Locale> heresdkSearchCommonBindingslistofLocaleFromFfi(Pointer<Void> handle) {
  final result = List<Locale>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchCommonBindingslistofLocaleIterator(handle);
  while (_heresdkSearchCommonBindingslistofLocaleIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchCommonBindingslistofLocaleIteratorGet(_iteratorHandle);
    try {
      result.add(localeFromFfi(_elementHandle));
    } finally {
      localeReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchCommonBindingslistofLocaleIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchCommonBindingslistofLocaleIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchCommonBindingslistofLocaleReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchCommonBindingslistofLocaleReleaseHandle(handle);

final _heresdkSearchCommonBindingslistofLocaleCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_Locale_create_handle_nullable'));
final _heresdkSearchCommonBindingslistofLocaleReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_Locale_release_handle_nullable'));
final _heresdkSearchCommonBindingslistofLocaleGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_Locale_get_value_nullable'));

Pointer<Void> heresdkSearchCommonBindingslistofLocaleToFfiNullable(List<Locale>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchCommonBindingslistofLocaleToFfi(value);
  final result = _heresdkSearchCommonBindingslistofLocaleCreateHandleNullable(_handle);
  heresdkSearchCommonBindingslistofLocaleReleaseFfiHandle(_handle);
  return result;
}

List<Locale>? heresdkSearchCommonBindingslistofLocaleFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchCommonBindingslistofLocaleGetValueNullable(handle);
  final result = heresdkSearchCommonBindingslistofLocaleFromFfi(_handle);
  heresdkSearchCommonBindingslistofLocaleReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchCommonBindingslistofLocaleReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchCommonBindingslistofLocaleReleaseHandleNullable(handle);

final _heresdkSearchCommonBindingslistofStringCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_common_bindingsListOf_String_create_handle'));
final _heresdkSearchCommonBindingslistofStringReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_String_release_handle'));
final _heresdkSearchCommonBindingslistofStringInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_String_insert'));
final _heresdkSearchCommonBindingslistofStringIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_String_iterator'));
final _heresdkSearchCommonBindingslistofStringIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_String_iterator_release_handle'));
final _heresdkSearchCommonBindingslistofStringIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_String_iterator_is_valid'));
final _heresdkSearchCommonBindingslistofStringIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_String_iterator_increment'));
final _heresdkSearchCommonBindingslistofStringIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_String_iterator_get'));

Pointer<Void> heresdkSearchCommonBindingslistofStringToFfi(List<String> value) {
  final _result = _heresdkSearchCommonBindingslistofStringCreateHandle();
  for (final element in value) {
    final _elementHandle = stringToFfi(element);
    _heresdkSearchCommonBindingslistofStringInsert(_result, _elementHandle);
    stringReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<String> heresdkSearchCommonBindingslistofStringFromFfi(Pointer<Void> handle) {
  final result = List<String>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchCommonBindingslistofStringIterator(handle);
  while (_heresdkSearchCommonBindingslistofStringIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchCommonBindingslistofStringIteratorGet(_iteratorHandle);
    try {
      result.add(stringFromFfi(_elementHandle));
    } finally {
      stringReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchCommonBindingslistofStringIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchCommonBindingslistofStringIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchCommonBindingslistofStringReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchCommonBindingslistofStringReleaseHandle(handle);

final _heresdkSearchCommonBindingslistofStringCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_String_create_handle_nullable'));
final _heresdkSearchCommonBindingslistofStringReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_String_release_handle_nullable'));
final _heresdkSearchCommonBindingslistofStringGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_String_get_value_nullable'));

Pointer<Void> heresdkSearchCommonBindingslistofStringToFfiNullable(List<String>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchCommonBindingslistofStringToFfi(value);
  final result = _heresdkSearchCommonBindingslistofStringCreateHandleNullable(_handle);
  heresdkSearchCommonBindingslistofStringReleaseFfiHandle(_handle);
  return result;
}

List<String>? heresdkSearchCommonBindingslistofStringFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchCommonBindingslistofStringGetValueNullable(handle);
  final result = heresdkSearchCommonBindingslistofStringFromFfi(_handle);
  heresdkSearchCommonBindingslistofStringReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchCommonBindingslistofStringReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchCommonBindingslistofStringReleaseHandleNullable(handle);

final _heresdkSearchCommonBindingslistofSdkCoreCountrycodeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_CountryCode_create_handle'));
final _heresdkSearchCommonBindingslistofSdkCoreCountrycodeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_CountryCode_release_handle'));
final _heresdkSearchCommonBindingslistofSdkCoreCountrycodeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_CountryCode_insert'));
final _heresdkSearchCommonBindingslistofSdkCoreCountrycodeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_CountryCode_iterator'));
final _heresdkSearchCommonBindingslistofSdkCoreCountrycodeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_CountryCode_iterator_release_handle'));
final _heresdkSearchCommonBindingslistofSdkCoreCountrycodeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_CountryCode_iterator_is_valid'));
final _heresdkSearchCommonBindingslistofSdkCoreCountrycodeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_CountryCode_iterator_increment'));
final _heresdkSearchCommonBindingslistofSdkCoreCountrycodeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_CountryCode_iterator_get'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkCoreCountrycodeToFfi(List<CountryCode> value) {
  final _result = _heresdkSearchCommonBindingslistofSdkCoreCountrycodeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreCountrycodeToFfi(element);
    _heresdkSearchCommonBindingslistofSdkCoreCountrycodeInsert(_result, _elementHandle);
    sdkCoreCountrycodeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<CountryCode> heresdkSearchCommonBindingslistofSdkCoreCountrycodeFromFfi(Pointer<Void> handle) {
  final result = List<CountryCode>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchCommonBindingslistofSdkCoreCountrycodeIterator(handle);
  while (_heresdkSearchCommonBindingslistofSdkCoreCountrycodeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchCommonBindingslistofSdkCoreCountrycodeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreCountrycodeFromFfi(_elementHandle));
    } finally {
      sdkCoreCountrycodeReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchCommonBindingslistofSdkCoreCountrycodeIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchCommonBindingslistofSdkCoreCountrycodeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkCoreCountrycodeReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchCommonBindingslistofSdkCoreCountrycodeReleaseHandle(handle);

final _heresdkSearchCommonBindingslistofSdkCoreCountrycodeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_CountryCode_create_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkCoreCountrycodeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_CountryCode_release_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkCoreCountrycodeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_CountryCode_get_value_nullable'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkCoreCountrycodeToFfiNullable(List<CountryCode>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchCommonBindingslistofSdkCoreCountrycodeToFfi(value);
  final result = _heresdkSearchCommonBindingslistofSdkCoreCountrycodeCreateHandleNullable(_handle);
  heresdkSearchCommonBindingslistofSdkCoreCountrycodeReleaseFfiHandle(_handle);
  return result;
}

List<CountryCode>? heresdkSearchCommonBindingslistofSdkCoreCountrycodeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchCommonBindingslistofSdkCoreCountrycodeGetValueNullable(handle);
  final result = heresdkSearchCommonBindingslistofSdkCoreCountrycodeFromFfi(_handle);
  heresdkSearchCommonBindingslistofSdkCoreCountrycodeReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkCoreCountrycodeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchCommonBindingslistofSdkCoreCountrycodeReleaseHandleNullable(handle);

final _heresdkSearchCommonBindingslistofSdkCoreGeocoordinatesCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_GeoCoordinates_create_handle'));
final _heresdkSearchCommonBindingslistofSdkCoreGeocoordinatesReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_GeoCoordinates_release_handle'));
final _heresdkSearchCommonBindingslistofSdkCoreGeocoordinatesInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_GeoCoordinates_insert'));
final _heresdkSearchCommonBindingslistofSdkCoreGeocoordinatesIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_GeoCoordinates_iterator'));
final _heresdkSearchCommonBindingslistofSdkCoreGeocoordinatesIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_GeoCoordinates_iterator_release_handle'));
final _heresdkSearchCommonBindingslistofSdkCoreGeocoordinatesIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_GeoCoordinates_iterator_is_valid'));
final _heresdkSearchCommonBindingslistofSdkCoreGeocoordinatesIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_GeoCoordinates_iterator_increment'));
final _heresdkSearchCommonBindingslistofSdkCoreGeocoordinatesIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_GeoCoordinates_iterator_get'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkCoreGeocoordinatesToFfi(List<GeoCoordinates> value) {
  final _result = _heresdkSearchCommonBindingslistofSdkCoreGeocoordinatesCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreGeocoordinatesToFfi(element);
    _heresdkSearchCommonBindingslistofSdkCoreGeocoordinatesInsert(_result, _elementHandle);
    sdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoCoordinates> heresdkSearchCommonBindingslistofSdkCoreGeocoordinatesFromFfi(Pointer<Void> handle) {
  final result = List<GeoCoordinates>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchCommonBindingslistofSdkCoreGeocoordinatesIterator(handle);
  while (_heresdkSearchCommonBindingslistofSdkCoreGeocoordinatesIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchCommonBindingslistofSdkCoreGeocoordinatesIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreGeocoordinatesFromFfi(_elementHandle));
    } finally {
      sdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchCommonBindingslistofSdkCoreGeocoordinatesIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchCommonBindingslistofSdkCoreGeocoordinatesIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchCommonBindingslistofSdkCoreGeocoordinatesReleaseHandle(handle);

final _heresdkSearchCommonBindingslistofSdkCoreGeocoordinatesCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_GeoCoordinates_create_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkCoreGeocoordinatesReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_GeoCoordinates_release_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkCoreGeocoordinatesGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_GeoCoordinates_get_value_nullable'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkCoreGeocoordinatesToFfiNullable(List<GeoCoordinates>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchCommonBindingslistofSdkCoreGeocoordinatesToFfi(value);
  final result = _heresdkSearchCommonBindingslistofSdkCoreGeocoordinatesCreateHandleNullable(_handle);
  heresdkSearchCommonBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

List<GeoCoordinates>? heresdkSearchCommonBindingslistofSdkCoreGeocoordinatesFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchCommonBindingslistofSdkCoreGeocoordinatesGetValueNullable(handle);
  final result = heresdkSearchCommonBindingslistofSdkCoreGeocoordinatesFromFfi(_handle);
  heresdkSearchCommonBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkCoreGeocoordinatesReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchCommonBindingslistofSdkCoreGeocoordinatesReleaseHandleNullable(handle);

final _heresdkSearchCommonBindingslistofSdkCoreLocalizedtextCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_LocalizedText_create_handle'));
final _heresdkSearchCommonBindingslistofSdkCoreLocalizedtextReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_LocalizedText_release_handle'));
final _heresdkSearchCommonBindingslistofSdkCoreLocalizedtextInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_LocalizedText_insert'));
final _heresdkSearchCommonBindingslistofSdkCoreLocalizedtextIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_LocalizedText_iterator'));
final _heresdkSearchCommonBindingslistofSdkCoreLocalizedtextIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_LocalizedText_iterator_release_handle'));
final _heresdkSearchCommonBindingslistofSdkCoreLocalizedtextIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_LocalizedText_iterator_is_valid'));
final _heresdkSearchCommonBindingslistofSdkCoreLocalizedtextIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_LocalizedText_iterator_increment'));
final _heresdkSearchCommonBindingslistofSdkCoreLocalizedtextIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_LocalizedText_iterator_get'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkCoreLocalizedtextToFfi(List<LocalizedText> value) {
  final _result = _heresdkSearchCommonBindingslistofSdkCoreLocalizedtextCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreLocalizedtextToFfi(element);
    _heresdkSearchCommonBindingslistofSdkCoreLocalizedtextInsert(_result, _elementHandle);
    sdkCoreLocalizedtextReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<LocalizedText> heresdkSearchCommonBindingslistofSdkCoreLocalizedtextFromFfi(Pointer<Void> handle) {
  final result = List<LocalizedText>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchCommonBindingslistofSdkCoreLocalizedtextIterator(handle);
  while (_heresdkSearchCommonBindingslistofSdkCoreLocalizedtextIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchCommonBindingslistofSdkCoreLocalizedtextIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreLocalizedtextFromFfi(_elementHandle));
    } finally {
      sdkCoreLocalizedtextReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchCommonBindingslistofSdkCoreLocalizedtextIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchCommonBindingslistofSdkCoreLocalizedtextIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkCoreLocalizedtextReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchCommonBindingslistofSdkCoreLocalizedtextReleaseHandle(handle);

final _heresdkSearchCommonBindingslistofSdkCoreLocalizedtextCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_LocalizedText_create_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkCoreLocalizedtextReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_LocalizedText_release_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkCoreLocalizedtextGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_LocalizedText_get_value_nullable'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkCoreLocalizedtextToFfiNullable(List<LocalizedText>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchCommonBindingslistofSdkCoreLocalizedtextToFfi(value);
  final result = _heresdkSearchCommonBindingslistofSdkCoreLocalizedtextCreateHandleNullable(_handle);
  heresdkSearchCommonBindingslistofSdkCoreLocalizedtextReleaseFfiHandle(_handle);
  return result;
}

List<LocalizedText>? heresdkSearchCommonBindingslistofSdkCoreLocalizedtextFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchCommonBindingslistofSdkCoreLocalizedtextGetValueNullable(handle);
  final result = heresdkSearchCommonBindingslistofSdkCoreLocalizedtextFromFfi(_handle);
  heresdkSearchCommonBindingslistofSdkCoreLocalizedtextReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkCoreLocalizedtextReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchCommonBindingslistofSdkCoreLocalizedtextReleaseHandleNullable(handle);

final _heresdkSearchCommonBindingslistofSdkSearchContactCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_Contact_create_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchContactReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_Contact_release_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchContactInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_Contact_insert'));
final _heresdkSearchCommonBindingslistofSdkSearchContactIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_Contact_iterator'));
final _heresdkSearchCommonBindingslistofSdkSearchContactIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_Contact_iterator_release_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchContactIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_Contact_iterator_is_valid'));
final _heresdkSearchCommonBindingslistofSdkSearchContactIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_Contact_iterator_increment'));
final _heresdkSearchCommonBindingslistofSdkSearchContactIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_Contact_iterator_get'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkSearchContactToFfi(List<Contact> value) {
  final _result = _heresdkSearchCommonBindingslistofSdkSearchContactCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchContactToFfi(element);
    _heresdkSearchCommonBindingslistofSdkSearchContactInsert(_result, _elementHandle);
    sdkSearchContactReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Contact> heresdkSearchCommonBindingslistofSdkSearchContactFromFfi(Pointer<Void> handle) {
  final result = List<Contact>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchCommonBindingslistofSdkSearchContactIterator(handle);
  while (_heresdkSearchCommonBindingslistofSdkSearchContactIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchCommonBindingslistofSdkSearchContactIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchContactFromFfi(_elementHandle));
    } finally {
      sdkSearchContactReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchCommonBindingslistofSdkSearchContactIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchCommonBindingslistofSdkSearchContactIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkSearchContactReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchCommonBindingslistofSdkSearchContactReleaseHandle(handle);

final _heresdkSearchCommonBindingslistofSdkSearchContactCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_Contact_create_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkSearchContactReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_Contact_release_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkSearchContactGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_Contact_get_value_nullable'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkSearchContactToFfiNullable(List<Contact>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchCommonBindingslistofSdkSearchContactToFfi(value);
  final result = _heresdkSearchCommonBindingslistofSdkSearchContactCreateHandleNullable(_handle);
  heresdkSearchCommonBindingslistofSdkSearchContactReleaseFfiHandle(_handle);
  return result;
}

List<Contact>? heresdkSearchCommonBindingslistofSdkSearchContactFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchCommonBindingslistofSdkSearchContactGetValueNullable(handle);
  final result = heresdkSearchCommonBindingslistofSdkSearchContactFromFfi(_handle);
  heresdkSearchCommonBindingslistofSdkSearchContactReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkSearchContactReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchCommonBindingslistofSdkSearchContactReleaseHandleNullable(handle);

final _heresdkSearchCommonBindingslistofSdkSearchEvchargingstationCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_EVChargingStation_create_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchEvchargingstationReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_EVChargingStation_release_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchEvchargingstationInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_EVChargingStation_insert'));
final _heresdkSearchCommonBindingslistofSdkSearchEvchargingstationIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_EVChargingStation_iterator'));
final _heresdkSearchCommonBindingslistofSdkSearchEvchargingstationIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_EVChargingStation_iterator_release_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchEvchargingstationIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_EVChargingStation_iterator_is_valid'));
final _heresdkSearchCommonBindingslistofSdkSearchEvchargingstationIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_EVChargingStation_iterator_increment'));
final _heresdkSearchCommonBindingslistofSdkSearchEvchargingstationIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_EVChargingStation_iterator_get'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkSearchEvchargingstationToFfi(List<EVChargingStation> value) {
  final _result = _heresdkSearchCommonBindingslistofSdkSearchEvchargingstationCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchEvchargingstationToFfi(element);
    _heresdkSearchCommonBindingslistofSdkSearchEvchargingstationInsert(_result, _elementHandle);
    sdkSearchEvchargingstationReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<EVChargingStation> heresdkSearchCommonBindingslistofSdkSearchEvchargingstationFromFfi(Pointer<Void> handle) {
  final result = List<EVChargingStation>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchCommonBindingslistofSdkSearchEvchargingstationIterator(handle);
  while (_heresdkSearchCommonBindingslistofSdkSearchEvchargingstationIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchCommonBindingslistofSdkSearchEvchargingstationIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchEvchargingstationFromFfi(_elementHandle));
    } finally {
      sdkSearchEvchargingstationReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchCommonBindingslistofSdkSearchEvchargingstationIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchCommonBindingslistofSdkSearchEvchargingstationIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkSearchEvchargingstationReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchCommonBindingslistofSdkSearchEvchargingstationReleaseHandle(handle);

final _heresdkSearchCommonBindingslistofSdkSearchEvchargingstationCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_EVChargingStation_create_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkSearchEvchargingstationReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_EVChargingStation_release_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkSearchEvchargingstationGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_EVChargingStation_get_value_nullable'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkSearchEvchargingstationToFfiNullable(List<EVChargingStation>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchCommonBindingslistofSdkSearchEvchargingstationToFfi(value);
  final result = _heresdkSearchCommonBindingslistofSdkSearchEvchargingstationCreateHandleNullable(_handle);
  heresdkSearchCommonBindingslistofSdkSearchEvchargingstationReleaseFfiHandle(_handle);
  return result;
}

List<EVChargingStation>? heresdkSearchCommonBindingslistofSdkSearchEvchargingstationFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchCommonBindingslistofSdkSearchEvchargingstationGetValueNullable(handle);
  final result = heresdkSearchCommonBindingslistofSdkSearchEvchargingstationFromFfi(_handle);
  heresdkSearchCommonBindingslistofSdkSearchEvchargingstationReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkSearchEvchargingstationReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchCommonBindingslistofSdkSearchEvchargingstationReleaseHandleNullable(handle);

final _heresdkSearchCommonBindingslistofSdkSearchEmailaddressCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_EmailAddress_create_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchEmailaddressReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_EmailAddress_release_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchEmailaddressInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_EmailAddress_insert'));
final _heresdkSearchCommonBindingslistofSdkSearchEmailaddressIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_EmailAddress_iterator'));
final _heresdkSearchCommonBindingslistofSdkSearchEmailaddressIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_EmailAddress_iterator_release_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchEmailaddressIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_EmailAddress_iterator_is_valid'));
final _heresdkSearchCommonBindingslistofSdkSearchEmailaddressIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_EmailAddress_iterator_increment'));
final _heresdkSearchCommonBindingslistofSdkSearchEmailaddressIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_EmailAddress_iterator_get'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkSearchEmailaddressToFfi(List<EmailAddress> value) {
  final _result = _heresdkSearchCommonBindingslistofSdkSearchEmailaddressCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchEmailaddressToFfi(element);
    _heresdkSearchCommonBindingslistofSdkSearchEmailaddressInsert(_result, _elementHandle);
    sdkSearchEmailaddressReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<EmailAddress> heresdkSearchCommonBindingslistofSdkSearchEmailaddressFromFfi(Pointer<Void> handle) {
  final result = List<EmailAddress>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchCommonBindingslistofSdkSearchEmailaddressIterator(handle);
  while (_heresdkSearchCommonBindingslistofSdkSearchEmailaddressIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchCommonBindingslistofSdkSearchEmailaddressIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchEmailaddressFromFfi(_elementHandle));
    } finally {
      sdkSearchEmailaddressReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchCommonBindingslistofSdkSearchEmailaddressIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchCommonBindingslistofSdkSearchEmailaddressIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkSearchEmailaddressReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchCommonBindingslistofSdkSearchEmailaddressReleaseHandle(handle);

final _heresdkSearchCommonBindingslistofSdkSearchEmailaddressCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_EmailAddress_create_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkSearchEmailaddressReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_EmailAddress_release_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkSearchEmailaddressGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_EmailAddress_get_value_nullable'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkSearchEmailaddressToFfiNullable(List<EmailAddress>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchCommonBindingslistofSdkSearchEmailaddressToFfi(value);
  final result = _heresdkSearchCommonBindingslistofSdkSearchEmailaddressCreateHandleNullable(_handle);
  heresdkSearchCommonBindingslistofSdkSearchEmailaddressReleaseFfiHandle(_handle);
  return result;
}

List<EmailAddress>? heresdkSearchCommonBindingslistofSdkSearchEmailaddressFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchCommonBindingslistofSdkSearchEmailaddressGetValueNullable(handle);
  final result = heresdkSearchCommonBindingslistofSdkSearchEmailaddressFromFfi(_handle);
  heresdkSearchCommonBindingslistofSdkSearchEmailaddressReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkSearchEmailaddressReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchCommonBindingslistofSdkSearchEmailaddressReleaseHandleNullable(handle);

final _heresdkSearchCommonBindingslistofSdkSearchEvconnectorexperimentalCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_EvConnectorExperimental_create_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchEvconnectorexperimentalReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_EvConnectorExperimental_release_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchEvconnectorexperimentalInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_EvConnectorExperimental_insert'));
final _heresdkSearchCommonBindingslistofSdkSearchEvconnectorexperimentalIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_EvConnectorExperimental_iterator'));
final _heresdkSearchCommonBindingslistofSdkSearchEvconnectorexperimentalIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_EvConnectorExperimental_iterator_release_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchEvconnectorexperimentalIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_EvConnectorExperimental_iterator_is_valid'));
final _heresdkSearchCommonBindingslistofSdkSearchEvconnectorexperimentalIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_EvConnectorExperimental_iterator_increment'));
final _heresdkSearchCommonBindingslistofSdkSearchEvconnectorexperimentalIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_EvConnectorExperimental_iterator_get'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkSearchEvconnectorexperimentalToFfi(List<EvConnectorExperimental> value) {
  final _result = _heresdkSearchCommonBindingslistofSdkSearchEvconnectorexperimentalCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchEvconnectorexperimentalToFfi(element);
    _heresdkSearchCommonBindingslistofSdkSearchEvconnectorexperimentalInsert(_result, _elementHandle);
    sdkSearchEvconnectorexperimentalReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<EvConnectorExperimental> heresdkSearchCommonBindingslistofSdkSearchEvconnectorexperimentalFromFfi(Pointer<Void> handle) {
  final result = List<EvConnectorExperimental>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchCommonBindingslistofSdkSearchEvconnectorexperimentalIterator(handle);
  while (_heresdkSearchCommonBindingslistofSdkSearchEvconnectorexperimentalIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchCommonBindingslistofSdkSearchEvconnectorexperimentalIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchEvconnectorexperimentalFromFfi(_elementHandle));
    } finally {
      sdkSearchEvconnectorexperimentalReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchCommonBindingslistofSdkSearchEvconnectorexperimentalIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchCommonBindingslistofSdkSearchEvconnectorexperimentalIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkSearchEvconnectorexperimentalReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchCommonBindingslistofSdkSearchEvconnectorexperimentalReleaseHandle(handle);

final _heresdkSearchCommonBindingslistofSdkSearchEvconnectorexperimentalCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_EvConnectorExperimental_create_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkSearchEvconnectorexperimentalReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_EvConnectorExperimental_release_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkSearchEvconnectorexperimentalGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_EvConnectorExperimental_get_value_nullable'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkSearchEvconnectorexperimentalToFfiNullable(List<EvConnectorExperimental>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchCommonBindingslistofSdkSearchEvconnectorexperimentalToFfi(value);
  final result = _heresdkSearchCommonBindingslistofSdkSearchEvconnectorexperimentalCreateHandleNullable(_handle);
  heresdkSearchCommonBindingslistofSdkSearchEvconnectorexperimentalReleaseFfiHandle(_handle);
  return result;
}

List<EvConnectorExperimental>? heresdkSearchCommonBindingslistofSdkSearchEvconnectorexperimentalFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchCommonBindingslistofSdkSearchEvconnectorexperimentalGetValueNullable(handle);
  final result = heresdkSearchCommonBindingslistofSdkSearchEvconnectorexperimentalFromFfi(_handle);
  heresdkSearchCommonBindingslistofSdkSearchEvconnectorexperimentalReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkSearchEvconnectorexperimentalReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchCommonBindingslistofSdkSearchEvconnectorexperimentalReleaseHandleNullable(handle);

final _heresdkSearchCommonBindingslistofSdkSearchIndexrangeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_IndexRange_create_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchIndexrangeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_IndexRange_release_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchIndexrangeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_IndexRange_insert'));
final _heresdkSearchCommonBindingslistofSdkSearchIndexrangeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_IndexRange_iterator'));
final _heresdkSearchCommonBindingslistofSdkSearchIndexrangeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_IndexRange_iterator_release_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchIndexrangeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_IndexRange_iterator_is_valid'));
final _heresdkSearchCommonBindingslistofSdkSearchIndexrangeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_IndexRange_iterator_increment'));
final _heresdkSearchCommonBindingslistofSdkSearchIndexrangeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_IndexRange_iterator_get'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkSearchIndexrangeToFfi(List<IndexRange> value) {
  final _result = _heresdkSearchCommonBindingslistofSdkSearchIndexrangeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchIndexrangeToFfi(element);
    _heresdkSearchCommonBindingslistofSdkSearchIndexrangeInsert(_result, _elementHandle);
    sdkSearchIndexrangeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<IndexRange> heresdkSearchCommonBindingslistofSdkSearchIndexrangeFromFfi(Pointer<Void> handle) {
  final result = List<IndexRange>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchCommonBindingslistofSdkSearchIndexrangeIterator(handle);
  while (_heresdkSearchCommonBindingslistofSdkSearchIndexrangeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchCommonBindingslistofSdkSearchIndexrangeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchIndexrangeFromFfi(_elementHandle));
    } finally {
      sdkSearchIndexrangeReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchCommonBindingslistofSdkSearchIndexrangeIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchCommonBindingslistofSdkSearchIndexrangeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkSearchIndexrangeReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchCommonBindingslistofSdkSearchIndexrangeReleaseHandle(handle);

final _heresdkSearchCommonBindingslistofSdkSearchIndexrangeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_IndexRange_create_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkSearchIndexrangeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_IndexRange_release_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkSearchIndexrangeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_IndexRange_get_value_nullable'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkSearchIndexrangeToFfiNullable(List<IndexRange>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchCommonBindingslistofSdkSearchIndexrangeToFfi(value);
  final result = _heresdkSearchCommonBindingslistofSdkSearchIndexrangeCreateHandleNullable(_handle);
  heresdkSearchCommonBindingslistofSdkSearchIndexrangeReleaseFfiHandle(_handle);
  return result;
}

List<IndexRange>? heresdkSearchCommonBindingslistofSdkSearchIndexrangeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchCommonBindingslistofSdkSearchIndexrangeGetValueNullable(handle);
  final result = heresdkSearchCommonBindingslistofSdkSearchIndexrangeFromFfi(_handle);
  heresdkSearchCommonBindingslistofSdkSearchIndexrangeReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkSearchIndexrangeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchCommonBindingslistofSdkSearchIndexrangeReleaseHandleNullable(handle);

final _heresdkSearchCommonBindingslistofSdkSearchLandlinephoneCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_LandlinePhone_create_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchLandlinephoneReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_LandlinePhone_release_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchLandlinephoneInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_LandlinePhone_insert'));
final _heresdkSearchCommonBindingslistofSdkSearchLandlinephoneIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_LandlinePhone_iterator'));
final _heresdkSearchCommonBindingslistofSdkSearchLandlinephoneIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_LandlinePhone_iterator_release_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchLandlinephoneIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_LandlinePhone_iterator_is_valid'));
final _heresdkSearchCommonBindingslistofSdkSearchLandlinephoneIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_LandlinePhone_iterator_increment'));
final _heresdkSearchCommonBindingslistofSdkSearchLandlinephoneIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_LandlinePhone_iterator_get'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkSearchLandlinephoneToFfi(List<LandlinePhone> value) {
  final _result = _heresdkSearchCommonBindingslistofSdkSearchLandlinephoneCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchLandlinephoneToFfi(element);
    _heresdkSearchCommonBindingslistofSdkSearchLandlinephoneInsert(_result, _elementHandle);
    sdkSearchLandlinephoneReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<LandlinePhone> heresdkSearchCommonBindingslistofSdkSearchLandlinephoneFromFfi(Pointer<Void> handle) {
  final result = List<LandlinePhone>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchCommonBindingslistofSdkSearchLandlinephoneIterator(handle);
  while (_heresdkSearchCommonBindingslistofSdkSearchLandlinephoneIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchCommonBindingslistofSdkSearchLandlinephoneIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchLandlinephoneFromFfi(_elementHandle));
    } finally {
      sdkSearchLandlinephoneReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchCommonBindingslistofSdkSearchLandlinephoneIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchCommonBindingslistofSdkSearchLandlinephoneIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkSearchLandlinephoneReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchCommonBindingslistofSdkSearchLandlinephoneReleaseHandle(handle);

final _heresdkSearchCommonBindingslistofSdkSearchLandlinephoneCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_LandlinePhone_create_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkSearchLandlinephoneReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_LandlinePhone_release_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkSearchLandlinephoneGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_LandlinePhone_get_value_nullable'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkSearchLandlinephoneToFfiNullable(List<LandlinePhone>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchCommonBindingslistofSdkSearchLandlinephoneToFfi(value);
  final result = _heresdkSearchCommonBindingslistofSdkSearchLandlinephoneCreateHandleNullable(_handle);
  heresdkSearchCommonBindingslistofSdkSearchLandlinephoneReleaseFfiHandle(_handle);
  return result;
}

List<LandlinePhone>? heresdkSearchCommonBindingslistofSdkSearchLandlinephoneFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchCommonBindingslistofSdkSearchLandlinephoneGetValueNullable(handle);
  final result = heresdkSearchCommonBindingslistofSdkSearchLandlinephoneFromFfi(_handle);
  heresdkSearchCommonBindingslistofSdkSearchLandlinephoneReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkSearchLandlinephoneReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchCommonBindingslistofSdkSearchLandlinephoneReleaseHandleNullable(handle);

final _heresdkSearchCommonBindingslistofSdkSearchMobilephoneCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_MobilePhone_create_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchMobilephoneReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_MobilePhone_release_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchMobilephoneInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_MobilePhone_insert'));
final _heresdkSearchCommonBindingslistofSdkSearchMobilephoneIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_MobilePhone_iterator'));
final _heresdkSearchCommonBindingslistofSdkSearchMobilephoneIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_MobilePhone_iterator_release_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchMobilephoneIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_MobilePhone_iterator_is_valid'));
final _heresdkSearchCommonBindingslistofSdkSearchMobilephoneIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_MobilePhone_iterator_increment'));
final _heresdkSearchCommonBindingslistofSdkSearchMobilephoneIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_MobilePhone_iterator_get'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkSearchMobilephoneToFfi(List<MobilePhone> value) {
  final _result = _heresdkSearchCommonBindingslistofSdkSearchMobilephoneCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchMobilephoneToFfi(element);
    _heresdkSearchCommonBindingslistofSdkSearchMobilephoneInsert(_result, _elementHandle);
    sdkSearchMobilephoneReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<MobilePhone> heresdkSearchCommonBindingslistofSdkSearchMobilephoneFromFfi(Pointer<Void> handle) {
  final result = List<MobilePhone>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchCommonBindingslistofSdkSearchMobilephoneIterator(handle);
  while (_heresdkSearchCommonBindingslistofSdkSearchMobilephoneIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchCommonBindingslistofSdkSearchMobilephoneIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchMobilephoneFromFfi(_elementHandle));
    } finally {
      sdkSearchMobilephoneReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchCommonBindingslistofSdkSearchMobilephoneIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchCommonBindingslistofSdkSearchMobilephoneIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkSearchMobilephoneReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchCommonBindingslistofSdkSearchMobilephoneReleaseHandle(handle);

final _heresdkSearchCommonBindingslistofSdkSearchMobilephoneCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_MobilePhone_create_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkSearchMobilephoneReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_MobilePhone_release_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkSearchMobilephoneGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_MobilePhone_get_value_nullable'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkSearchMobilephoneToFfiNullable(List<MobilePhone>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchCommonBindingslistofSdkSearchMobilephoneToFfi(value);
  final result = _heresdkSearchCommonBindingslistofSdkSearchMobilephoneCreateHandleNullable(_handle);
  heresdkSearchCommonBindingslistofSdkSearchMobilephoneReleaseFfiHandle(_handle);
  return result;
}

List<MobilePhone>? heresdkSearchCommonBindingslistofSdkSearchMobilephoneFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchCommonBindingslistofSdkSearchMobilephoneGetValueNullable(handle);
  final result = heresdkSearchCommonBindingslistofSdkSearchMobilephoneFromFfi(_handle);
  heresdkSearchCommonBindingslistofSdkSearchMobilephoneReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkSearchMobilephoneReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchCommonBindingslistofSdkSearchMobilephoneReleaseHandleNullable(handle);

final _heresdkSearchCommonBindingslistofSdkSearchOpeninghoursCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_OpeningHours_create_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchOpeninghoursReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_OpeningHours_release_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchOpeninghoursInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_OpeningHours_insert'));
final _heresdkSearchCommonBindingslistofSdkSearchOpeninghoursIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_OpeningHours_iterator'));
final _heresdkSearchCommonBindingslistofSdkSearchOpeninghoursIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_OpeningHours_iterator_release_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchOpeninghoursIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_OpeningHours_iterator_is_valid'));
final _heresdkSearchCommonBindingslistofSdkSearchOpeninghoursIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_OpeningHours_iterator_increment'));
final _heresdkSearchCommonBindingslistofSdkSearchOpeninghoursIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_OpeningHours_iterator_get'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkSearchOpeninghoursToFfi(List<OpeningHours> value) {
  final _result = _heresdkSearchCommonBindingslistofSdkSearchOpeninghoursCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchOpeninghoursToFfi(element);
    _heresdkSearchCommonBindingslistofSdkSearchOpeninghoursInsert(_result, _elementHandle);
    sdkSearchOpeninghoursReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<OpeningHours> heresdkSearchCommonBindingslistofSdkSearchOpeninghoursFromFfi(Pointer<Void> handle) {
  final result = List<OpeningHours>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchCommonBindingslistofSdkSearchOpeninghoursIterator(handle);
  while (_heresdkSearchCommonBindingslistofSdkSearchOpeninghoursIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchCommonBindingslistofSdkSearchOpeninghoursIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchOpeninghoursFromFfi(_elementHandle));
    } finally {
      sdkSearchOpeninghoursReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchCommonBindingslistofSdkSearchOpeninghoursIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchCommonBindingslistofSdkSearchOpeninghoursIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkSearchOpeninghoursReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchCommonBindingslistofSdkSearchOpeninghoursReleaseHandle(handle);

final _heresdkSearchCommonBindingslistofSdkSearchOpeninghoursCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_OpeningHours_create_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkSearchOpeninghoursReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_OpeningHours_release_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkSearchOpeninghoursGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_OpeningHours_get_value_nullable'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkSearchOpeninghoursToFfiNullable(List<OpeningHours>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchCommonBindingslistofSdkSearchOpeninghoursToFfi(value);
  final result = _heresdkSearchCommonBindingslistofSdkSearchOpeninghoursCreateHandleNullable(_handle);
  heresdkSearchCommonBindingslistofSdkSearchOpeninghoursReleaseFfiHandle(_handle);
  return result;
}

List<OpeningHours>? heresdkSearchCommonBindingslistofSdkSearchOpeninghoursFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchCommonBindingslistofSdkSearchOpeninghoursGetValueNullable(handle);
  final result = heresdkSearchCommonBindingslistofSdkSearchOpeninghoursFromFfi(_handle);
  heresdkSearchCommonBindingslistofSdkSearchOpeninghoursReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkSearchOpeninghoursReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchCommonBindingslistofSdkSearchOpeninghoursReleaseHandleNullable(handle);

final _heresdkSearchCommonBindingslistofSdkSearchPlaceCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_Place_create_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchPlaceReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_Place_release_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchPlaceInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_Place_insert'));
final _heresdkSearchCommonBindingslistofSdkSearchPlaceIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_Place_iterator'));
final _heresdkSearchCommonBindingslistofSdkSearchPlaceIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_Place_iterator_release_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchPlaceIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_Place_iterator_is_valid'));
final _heresdkSearchCommonBindingslistofSdkSearchPlaceIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_Place_iterator_increment'));
final _heresdkSearchCommonBindingslistofSdkSearchPlaceIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_Place_iterator_get'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkSearchPlaceToFfi(List<Place> value) {
  final _result = _heresdkSearchCommonBindingslistofSdkSearchPlaceCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchPlaceToFfi(element);
    _heresdkSearchCommonBindingslistofSdkSearchPlaceInsert(_result, _elementHandle);
    sdkSearchPlaceReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Place> heresdkSearchCommonBindingslistofSdkSearchPlaceFromFfi(Pointer<Void> handle) {
  final result = List<Place>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchCommonBindingslistofSdkSearchPlaceIterator(handle);
  while (_heresdkSearchCommonBindingslistofSdkSearchPlaceIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchCommonBindingslistofSdkSearchPlaceIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchPlaceFromFfi(_elementHandle));
    } finally {
      sdkSearchPlaceReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchCommonBindingslistofSdkSearchPlaceIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchCommonBindingslistofSdkSearchPlaceIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkSearchPlaceReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchCommonBindingslistofSdkSearchPlaceReleaseHandle(handle);

final _heresdkSearchCommonBindingslistofSdkSearchPlaceCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_Place_create_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkSearchPlaceReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_Place_release_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkSearchPlaceGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_Place_get_value_nullable'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkSearchPlaceToFfiNullable(List<Place>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchCommonBindingslistofSdkSearchPlaceToFfi(value);
  final result = _heresdkSearchCommonBindingslistofSdkSearchPlaceCreateHandleNullable(_handle);
  heresdkSearchCommonBindingslistofSdkSearchPlaceReleaseFfiHandle(_handle);
  return result;
}

List<Place>? heresdkSearchCommonBindingslistofSdkSearchPlaceFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchCommonBindingslistofSdkSearchPlaceGetValueNullable(handle);
  final result = heresdkSearchCommonBindingslistofSdkSearchPlaceFromFfi(_handle);
  heresdkSearchCommonBindingslistofSdkSearchPlaceReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkSearchPlaceReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchCommonBindingslistofSdkSearchPlaceReleaseHandleNullable(handle);

final _heresdkSearchCommonBindingslistofSdkSearchPlacecategoryCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_PlaceCategory_create_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchPlacecategoryReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_PlaceCategory_release_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchPlacecategoryInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_PlaceCategory_insert'));
final _heresdkSearchCommonBindingslistofSdkSearchPlacecategoryIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_PlaceCategory_iterator'));
final _heresdkSearchCommonBindingslistofSdkSearchPlacecategoryIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_PlaceCategory_iterator_release_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchPlacecategoryIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_PlaceCategory_iterator_is_valid'));
final _heresdkSearchCommonBindingslistofSdkSearchPlacecategoryIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_PlaceCategory_iterator_increment'));
final _heresdkSearchCommonBindingslistofSdkSearchPlacecategoryIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_PlaceCategory_iterator_get'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkSearchPlacecategoryToFfi(List<PlaceCategory> value) {
  final _result = _heresdkSearchCommonBindingslistofSdkSearchPlacecategoryCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchPlacecategoryToFfi(element);
    _heresdkSearchCommonBindingslistofSdkSearchPlacecategoryInsert(_result, _elementHandle);
    sdkSearchPlacecategoryReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<PlaceCategory> heresdkSearchCommonBindingslistofSdkSearchPlacecategoryFromFfi(Pointer<Void> handle) {
  final result = List<PlaceCategory>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchCommonBindingslistofSdkSearchPlacecategoryIterator(handle);
  while (_heresdkSearchCommonBindingslistofSdkSearchPlacecategoryIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchCommonBindingslistofSdkSearchPlacecategoryIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchPlacecategoryFromFfi(_elementHandle));
    } finally {
      sdkSearchPlacecategoryReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchCommonBindingslistofSdkSearchPlacecategoryIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchCommonBindingslistofSdkSearchPlacecategoryIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkSearchPlacecategoryReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchCommonBindingslistofSdkSearchPlacecategoryReleaseHandle(handle);

final _heresdkSearchCommonBindingslistofSdkSearchPlacecategoryCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_PlaceCategory_create_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkSearchPlacecategoryReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_PlaceCategory_release_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkSearchPlacecategoryGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_PlaceCategory_get_value_nullable'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkSearchPlacecategoryToFfiNullable(List<PlaceCategory>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchCommonBindingslistofSdkSearchPlacecategoryToFfi(value);
  final result = _heresdkSearchCommonBindingslistofSdkSearchPlacecategoryCreateHandleNullable(_handle);
  heresdkSearchCommonBindingslistofSdkSearchPlacecategoryReleaseFfiHandle(_handle);
  return result;
}

List<PlaceCategory>? heresdkSearchCommonBindingslistofSdkSearchPlacecategoryFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchCommonBindingslistofSdkSearchPlacecategoryGetValueNullable(handle);
  final result = heresdkSearchCommonBindingslistofSdkSearchPlacecategoryFromFfi(_handle);
  heresdkSearchCommonBindingslistofSdkSearchPlacecategoryReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkSearchPlacecategoryReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchCommonBindingslistofSdkSearchPlacecategoryReleaseHandleNullable(handle);

final _heresdkSearchCommonBindingslistofSdkSearchScheduledetailsCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_ScheduleDetails_create_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchScheduledetailsReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_ScheduleDetails_release_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchScheduledetailsInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_ScheduleDetails_insert'));
final _heresdkSearchCommonBindingslistofSdkSearchScheduledetailsIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_ScheduleDetails_iterator'));
final _heresdkSearchCommonBindingslistofSdkSearchScheduledetailsIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_ScheduleDetails_iterator_release_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchScheduledetailsIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_ScheduleDetails_iterator_is_valid'));
final _heresdkSearchCommonBindingslistofSdkSearchScheduledetailsIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_ScheduleDetails_iterator_increment'));
final _heresdkSearchCommonBindingslistofSdkSearchScheduledetailsIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_ScheduleDetails_iterator_get'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkSearchScheduledetailsToFfi(List<ScheduleDetails> value) {
  final _result = _heresdkSearchCommonBindingslistofSdkSearchScheduledetailsCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchScheduledetailsToFfi(element);
    _heresdkSearchCommonBindingslistofSdkSearchScheduledetailsInsert(_result, _elementHandle);
    sdkSearchScheduledetailsReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<ScheduleDetails> heresdkSearchCommonBindingslistofSdkSearchScheduledetailsFromFfi(Pointer<Void> handle) {
  final result = List<ScheduleDetails>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchCommonBindingslistofSdkSearchScheduledetailsIterator(handle);
  while (_heresdkSearchCommonBindingslistofSdkSearchScheduledetailsIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchCommonBindingslistofSdkSearchScheduledetailsIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchScheduledetailsFromFfi(_elementHandle));
    } finally {
      sdkSearchScheduledetailsReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchCommonBindingslistofSdkSearchScheduledetailsIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchCommonBindingslistofSdkSearchScheduledetailsIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkSearchScheduledetailsReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchCommonBindingslistofSdkSearchScheduledetailsReleaseHandle(handle);

final _heresdkSearchCommonBindingslistofSdkSearchScheduledetailsCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_ScheduleDetails_create_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkSearchScheduledetailsReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_ScheduleDetails_release_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkSearchScheduledetailsGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_ScheduleDetails_get_value_nullable'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkSearchScheduledetailsToFfiNullable(List<ScheduleDetails>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchCommonBindingslistofSdkSearchScheduledetailsToFfi(value);
  final result = _heresdkSearchCommonBindingslistofSdkSearchScheduledetailsCreateHandleNullable(_handle);
  heresdkSearchCommonBindingslistofSdkSearchScheduledetailsReleaseFfiHandle(_handle);
  return result;
}

List<ScheduleDetails>? heresdkSearchCommonBindingslistofSdkSearchScheduledetailsFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchCommonBindingslistofSdkSearchScheduledetailsGetValueNullable(handle);
  final result = heresdkSearchCommonBindingslistofSdkSearchScheduledetailsFromFfi(_handle);
  heresdkSearchCommonBindingslistofSdkSearchScheduledetailsReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkSearchScheduledetailsReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchCommonBindingslistofSdkSearchScheduledetailsReleaseHandleNullable(handle);

final _heresdkSearchCommonBindingslistofSdkSearchSuggestionCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_Suggestion_create_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchSuggestionReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_Suggestion_release_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchSuggestionInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_Suggestion_insert'));
final _heresdkSearchCommonBindingslistofSdkSearchSuggestionIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_Suggestion_iterator'));
final _heresdkSearchCommonBindingslistofSdkSearchSuggestionIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_Suggestion_iterator_release_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchSuggestionIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_Suggestion_iterator_is_valid'));
final _heresdkSearchCommonBindingslistofSdkSearchSuggestionIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_Suggestion_iterator_increment'));
final _heresdkSearchCommonBindingslistofSdkSearchSuggestionIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_Suggestion_iterator_get'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkSearchSuggestionToFfi(List<Suggestion> value) {
  final _result = _heresdkSearchCommonBindingslistofSdkSearchSuggestionCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchSuggestionToFfi(element);
    _heresdkSearchCommonBindingslistofSdkSearchSuggestionInsert(_result, _elementHandle);
    sdkSearchSuggestionReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Suggestion> heresdkSearchCommonBindingslistofSdkSearchSuggestionFromFfi(Pointer<Void> handle) {
  final result = List<Suggestion>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchCommonBindingslistofSdkSearchSuggestionIterator(handle);
  while (_heresdkSearchCommonBindingslistofSdkSearchSuggestionIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchCommonBindingslistofSdkSearchSuggestionIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchSuggestionFromFfi(_elementHandle));
    } finally {
      sdkSearchSuggestionReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchCommonBindingslistofSdkSearchSuggestionIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchCommonBindingslistofSdkSearchSuggestionIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkSearchSuggestionReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchCommonBindingslistofSdkSearchSuggestionReleaseHandle(handle);

final _heresdkSearchCommonBindingslistofSdkSearchSuggestionCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_Suggestion_create_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkSearchSuggestionReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_Suggestion_release_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkSearchSuggestionGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_Suggestion_get_value_nullable'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkSearchSuggestionToFfiNullable(List<Suggestion>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchCommonBindingslistofSdkSearchSuggestionToFfi(value);
  final result = _heresdkSearchCommonBindingslistofSdkSearchSuggestionCreateHandleNullable(_handle);
  heresdkSearchCommonBindingslistofSdkSearchSuggestionReleaseFfiHandle(_handle);
  return result;
}

List<Suggestion>? heresdkSearchCommonBindingslistofSdkSearchSuggestionFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchCommonBindingslistofSdkSearchSuggestionGetValueNullable(handle);
  final result = heresdkSearchCommonBindingslistofSdkSearchSuggestionFromFfi(_handle);
  heresdkSearchCommonBindingslistofSdkSearchSuggestionReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkSearchSuggestionReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchCommonBindingslistofSdkSearchSuggestionReleaseHandleNullable(handle);

final _heresdkSearchCommonBindingslistofSdkSearchSupplierreferenceCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_SupplierReference_create_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchSupplierreferenceReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_SupplierReference_release_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchSupplierreferenceInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_SupplierReference_insert'));
final _heresdkSearchCommonBindingslistofSdkSearchSupplierreferenceIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_SupplierReference_iterator'));
final _heresdkSearchCommonBindingslistofSdkSearchSupplierreferenceIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_SupplierReference_iterator_release_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchSupplierreferenceIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_SupplierReference_iterator_is_valid'));
final _heresdkSearchCommonBindingslistofSdkSearchSupplierreferenceIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_SupplierReference_iterator_increment'));
final _heresdkSearchCommonBindingslistofSdkSearchSupplierreferenceIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_SupplierReference_iterator_get'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkSearchSupplierreferenceToFfi(List<SupplierReference> value) {
  final _result = _heresdkSearchCommonBindingslistofSdkSearchSupplierreferenceCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchSupplierreferenceToFfi(element);
    _heresdkSearchCommonBindingslistofSdkSearchSupplierreferenceInsert(_result, _elementHandle);
    sdkSearchSupplierreferenceReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<SupplierReference> heresdkSearchCommonBindingslistofSdkSearchSupplierreferenceFromFfi(Pointer<Void> handle) {
  final result = List<SupplierReference>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchCommonBindingslistofSdkSearchSupplierreferenceIterator(handle);
  while (_heresdkSearchCommonBindingslistofSdkSearchSupplierreferenceIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchCommonBindingslistofSdkSearchSupplierreferenceIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchSupplierreferenceFromFfi(_elementHandle));
    } finally {
      sdkSearchSupplierreferenceReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchCommonBindingslistofSdkSearchSupplierreferenceIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchCommonBindingslistofSdkSearchSupplierreferenceIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkSearchSupplierreferenceReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchCommonBindingslistofSdkSearchSupplierreferenceReleaseHandle(handle);

final _heresdkSearchCommonBindingslistofSdkSearchSupplierreferenceCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_SupplierReference_create_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkSearchSupplierreferenceReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_SupplierReference_release_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkSearchSupplierreferenceGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_SupplierReference_get_value_nullable'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkSearchSupplierreferenceToFfiNullable(List<SupplierReference>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchCommonBindingslistofSdkSearchSupplierreferenceToFfi(value);
  final result = _heresdkSearchCommonBindingslistofSdkSearchSupplierreferenceCreateHandleNullable(_handle);
  heresdkSearchCommonBindingslistofSdkSearchSupplierreferenceReleaseFfiHandle(_handle);
  return result;
}

List<SupplierReference>? heresdkSearchCommonBindingslistofSdkSearchSupplierreferenceFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchCommonBindingslistofSdkSearchSupplierreferenceGetValueNullable(handle);
  final result = heresdkSearchCommonBindingslistofSdkSearchSupplierreferenceFromFfi(_handle);
  heresdkSearchCommonBindingslistofSdkSearchSupplierreferenceReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkSearchSupplierreferenceReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchCommonBindingslistofSdkSearchSupplierreferenceReleaseHandleNullable(handle);

final _heresdkSearchCommonBindingslistofSdkSearchWebeditorialCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_WebEditorial_create_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchWebeditorialReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_WebEditorial_release_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchWebeditorialInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_WebEditorial_insert'));
final _heresdkSearchCommonBindingslistofSdkSearchWebeditorialIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_WebEditorial_iterator'));
final _heresdkSearchCommonBindingslistofSdkSearchWebeditorialIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_WebEditorial_iterator_release_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchWebeditorialIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_WebEditorial_iterator_is_valid'));
final _heresdkSearchCommonBindingslistofSdkSearchWebeditorialIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_WebEditorial_iterator_increment'));
final _heresdkSearchCommonBindingslistofSdkSearchWebeditorialIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_WebEditorial_iterator_get'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkSearchWebeditorialToFfi(List<WebEditorial> value) {
  final _result = _heresdkSearchCommonBindingslistofSdkSearchWebeditorialCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchWebeditorialToFfi(element);
    _heresdkSearchCommonBindingslistofSdkSearchWebeditorialInsert(_result, _elementHandle);
    sdkSearchWebeditorialReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<WebEditorial> heresdkSearchCommonBindingslistofSdkSearchWebeditorialFromFfi(Pointer<Void> handle) {
  final result = List<WebEditorial>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchCommonBindingslistofSdkSearchWebeditorialIterator(handle);
  while (_heresdkSearchCommonBindingslistofSdkSearchWebeditorialIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchCommonBindingslistofSdkSearchWebeditorialIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchWebeditorialFromFfi(_elementHandle));
    } finally {
      sdkSearchWebeditorialReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchCommonBindingslistofSdkSearchWebeditorialIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchCommonBindingslistofSdkSearchWebeditorialIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkSearchWebeditorialReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchCommonBindingslistofSdkSearchWebeditorialReleaseHandle(handle);

final _heresdkSearchCommonBindingslistofSdkSearchWebeditorialCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_WebEditorial_create_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkSearchWebeditorialReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_WebEditorial_release_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkSearchWebeditorialGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_WebEditorial_get_value_nullable'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkSearchWebeditorialToFfiNullable(List<WebEditorial>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchCommonBindingslistofSdkSearchWebeditorialToFfi(value);
  final result = _heresdkSearchCommonBindingslistofSdkSearchWebeditorialCreateHandleNullable(_handle);
  heresdkSearchCommonBindingslistofSdkSearchWebeditorialReleaseFfiHandle(_handle);
  return result;
}

List<WebEditorial>? heresdkSearchCommonBindingslistofSdkSearchWebeditorialFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchCommonBindingslistofSdkSearchWebeditorialGetValueNullable(handle);
  final result = heresdkSearchCommonBindingslistofSdkSearchWebeditorialFromFfi(_handle);
  heresdkSearchCommonBindingslistofSdkSearchWebeditorialReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkSearchWebeditorialReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchCommonBindingslistofSdkSearchWebeditorialReleaseHandleNullable(handle);

final _heresdkSearchCommonBindingslistofSdkSearchWebimageCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_WebImage_create_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchWebimageReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_WebImage_release_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchWebimageInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_WebImage_insert'));
final _heresdkSearchCommonBindingslistofSdkSearchWebimageIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_WebImage_iterator'));
final _heresdkSearchCommonBindingslistofSdkSearchWebimageIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_WebImage_iterator_release_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchWebimageIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_WebImage_iterator_is_valid'));
final _heresdkSearchCommonBindingslistofSdkSearchWebimageIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_WebImage_iterator_increment'));
final _heresdkSearchCommonBindingslistofSdkSearchWebimageIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_WebImage_iterator_get'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkSearchWebimageToFfi(List<WebImage> value) {
  final _result = _heresdkSearchCommonBindingslistofSdkSearchWebimageCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchWebimageToFfi(element);
    _heresdkSearchCommonBindingslistofSdkSearchWebimageInsert(_result, _elementHandle);
    sdkSearchWebimageReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<WebImage> heresdkSearchCommonBindingslistofSdkSearchWebimageFromFfi(Pointer<Void> handle) {
  final result = List<WebImage>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchCommonBindingslistofSdkSearchWebimageIterator(handle);
  while (_heresdkSearchCommonBindingslistofSdkSearchWebimageIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchCommonBindingslistofSdkSearchWebimageIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchWebimageFromFfi(_elementHandle));
    } finally {
      sdkSearchWebimageReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchCommonBindingslistofSdkSearchWebimageIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchCommonBindingslistofSdkSearchWebimageIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkSearchWebimageReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchCommonBindingslistofSdkSearchWebimageReleaseHandle(handle);

final _heresdkSearchCommonBindingslistofSdkSearchWebimageCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_WebImage_create_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkSearchWebimageReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_WebImage_release_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkSearchWebimageGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_WebImage_get_value_nullable'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkSearchWebimageToFfiNullable(List<WebImage>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchCommonBindingslistofSdkSearchWebimageToFfi(value);
  final result = _heresdkSearchCommonBindingslistofSdkSearchWebimageCreateHandleNullable(_handle);
  heresdkSearchCommonBindingslistofSdkSearchWebimageReleaseFfiHandle(_handle);
  return result;
}

List<WebImage>? heresdkSearchCommonBindingslistofSdkSearchWebimageFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchCommonBindingslistofSdkSearchWebimageGetValueNullable(handle);
  final result = heresdkSearchCommonBindingslistofSdkSearchWebimageFromFfi(_handle);
  heresdkSearchCommonBindingslistofSdkSearchWebimageReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkSearchWebimageReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchCommonBindingslistofSdkSearchWebimageReleaseHandleNullable(handle);

final _heresdkSearchCommonBindingslistofSdkSearchWebratingCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_WebRating_create_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchWebratingReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_WebRating_release_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchWebratingInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_WebRating_insert'));
final _heresdkSearchCommonBindingslistofSdkSearchWebratingIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_WebRating_iterator'));
final _heresdkSearchCommonBindingslistofSdkSearchWebratingIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_WebRating_iterator_release_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchWebratingIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_WebRating_iterator_is_valid'));
final _heresdkSearchCommonBindingslistofSdkSearchWebratingIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_WebRating_iterator_increment'));
final _heresdkSearchCommonBindingslistofSdkSearchWebratingIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_WebRating_iterator_get'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkSearchWebratingToFfi(List<WebRating> value) {
  final _result = _heresdkSearchCommonBindingslistofSdkSearchWebratingCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchWebratingToFfi(element);
    _heresdkSearchCommonBindingslistofSdkSearchWebratingInsert(_result, _elementHandle);
    sdkSearchWebratingReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<WebRating> heresdkSearchCommonBindingslistofSdkSearchWebratingFromFfi(Pointer<Void> handle) {
  final result = List<WebRating>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchCommonBindingslistofSdkSearchWebratingIterator(handle);
  while (_heresdkSearchCommonBindingslistofSdkSearchWebratingIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchCommonBindingslistofSdkSearchWebratingIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchWebratingFromFfi(_elementHandle));
    } finally {
      sdkSearchWebratingReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchCommonBindingslistofSdkSearchWebratingIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchCommonBindingslistofSdkSearchWebratingIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkSearchWebratingReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchCommonBindingslistofSdkSearchWebratingReleaseHandle(handle);

final _heresdkSearchCommonBindingslistofSdkSearchWebratingCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_WebRating_create_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkSearchWebratingReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_WebRating_release_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkSearchWebratingGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_WebRating_get_value_nullable'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkSearchWebratingToFfiNullable(List<WebRating>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchCommonBindingslistofSdkSearchWebratingToFfi(value);
  final result = _heresdkSearchCommonBindingslistofSdkSearchWebratingCreateHandleNullable(_handle);
  heresdkSearchCommonBindingslistofSdkSearchWebratingReleaseFfiHandle(_handle);
  return result;
}

List<WebRating>? heresdkSearchCommonBindingslistofSdkSearchWebratingFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchCommonBindingslistofSdkSearchWebratingGetValueNullable(handle);
  final result = heresdkSearchCommonBindingslistofSdkSearchWebratingFromFfi(_handle);
  heresdkSearchCommonBindingslistofSdkSearchWebratingReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkSearchWebratingReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchCommonBindingslistofSdkSearchWebratingReleaseHandleNullable(handle);

final _heresdkSearchCommonBindingslistofSdkSearchWebsiteaddressCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_WebsiteAddress_create_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchWebsiteaddressReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_WebsiteAddress_release_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchWebsiteaddressInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_WebsiteAddress_insert'));
final _heresdkSearchCommonBindingslistofSdkSearchWebsiteaddressIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_WebsiteAddress_iterator'));
final _heresdkSearchCommonBindingslistofSdkSearchWebsiteaddressIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_WebsiteAddress_iterator_release_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchWebsiteaddressIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_WebsiteAddress_iterator_is_valid'));
final _heresdkSearchCommonBindingslistofSdkSearchWebsiteaddressIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_WebsiteAddress_iterator_increment'));
final _heresdkSearchCommonBindingslistofSdkSearchWebsiteaddressIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_WebsiteAddress_iterator_get'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkSearchWebsiteaddressToFfi(List<WebsiteAddress> value) {
  final _result = _heresdkSearchCommonBindingslistofSdkSearchWebsiteaddressCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchWebsiteaddressToFfi(element);
    _heresdkSearchCommonBindingslistofSdkSearchWebsiteaddressInsert(_result, _elementHandle);
    sdkSearchWebsiteaddressReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<WebsiteAddress> heresdkSearchCommonBindingslistofSdkSearchWebsiteaddressFromFfi(Pointer<Void> handle) {
  final result = List<WebsiteAddress>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchCommonBindingslistofSdkSearchWebsiteaddressIterator(handle);
  while (_heresdkSearchCommonBindingslistofSdkSearchWebsiteaddressIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchCommonBindingslistofSdkSearchWebsiteaddressIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchWebsiteaddressFromFfi(_elementHandle));
    } finally {
      sdkSearchWebsiteaddressReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchCommonBindingslistofSdkSearchWebsiteaddressIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchCommonBindingslistofSdkSearchWebsiteaddressIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkSearchWebsiteaddressReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchCommonBindingslistofSdkSearchWebsiteaddressReleaseHandle(handle);

final _heresdkSearchCommonBindingslistofSdkSearchWebsiteaddressCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_WebsiteAddress_create_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkSearchWebsiteaddressReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_WebsiteAddress_release_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkSearchWebsiteaddressGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_WebsiteAddress_get_value_nullable'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkSearchWebsiteaddressToFfiNullable(List<WebsiteAddress>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchCommonBindingslistofSdkSearchWebsiteaddressToFfi(value);
  final result = _heresdkSearchCommonBindingslistofSdkSearchWebsiteaddressCreateHandleNullable(_handle);
  heresdkSearchCommonBindingslistofSdkSearchWebsiteaddressReleaseFfiHandle(_handle);
  return result;
}

List<WebsiteAddress>? heresdkSearchCommonBindingslistofSdkSearchWebsiteaddressFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchCommonBindingslistofSdkSearchWebsiteaddressGetValueNullable(handle);
  final result = heresdkSearchCommonBindingslistofSdkSearchWebsiteaddressFromFfi(_handle);
  heresdkSearchCommonBindingslistofSdkSearchWebsiteaddressReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkSearchWebsiteaddressReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchCommonBindingslistofSdkSearchWebsiteaddressReleaseHandleNullable(handle);

final _heresdkSearchCommonBindingsmapofSdkSearchHighlighttypeToHeresdkSearchCommonBindingslistofSdkSearchIndexrangeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_common_bindingsMapOf_sdk_search_HighlightType_to_heresdk_search_common_bindingsListOf_sdk_search_IndexRange_create_handle'));
final _heresdkSearchCommonBindingsmapofSdkSearchHighlighttypeToHeresdkSearchCommonBindingslistofSdkSearchIndexrangeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsMapOf_sdk_search_HighlightType_to_heresdk_search_common_bindingsListOf_sdk_search_IndexRange_release_handle'));
final _heresdkSearchCommonBindingsmapofSdkSearchHighlighttypeToHeresdkSearchCommonBindingslistofSdkSearchIndexrangePut = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32, Pointer<Void>),
    void Function(Pointer<Void>, int, Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsMapOf_sdk_search_HighlightType_to_heresdk_search_common_bindingsListOf_sdk_search_IndexRange_put'));
final _heresdkSearchCommonBindingsmapofSdkSearchHighlighttypeToHeresdkSearchCommonBindingslistofSdkSearchIndexrangeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsMapOf_sdk_search_HighlightType_to_heresdk_search_common_bindingsListOf_sdk_search_IndexRange_iterator'));
final _heresdkSearchCommonBindingsmapofSdkSearchHighlighttypeToHeresdkSearchCommonBindingslistofSdkSearchIndexrangeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsMapOf_sdk_search_HighlightType_to_heresdk_search_common_bindingsListOf_sdk_search_IndexRange_iterator_release_handle'));
final _heresdkSearchCommonBindingsmapofSdkSearchHighlighttypeToHeresdkSearchCommonBindingslistofSdkSearchIndexrangeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsMapOf_sdk_search_HighlightType_to_heresdk_search_common_bindingsListOf_sdk_search_IndexRange_iterator_is_valid'));
final _heresdkSearchCommonBindingsmapofSdkSearchHighlighttypeToHeresdkSearchCommonBindingslistofSdkSearchIndexrangeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsMapOf_sdk_search_HighlightType_to_heresdk_search_common_bindingsListOf_sdk_search_IndexRange_iterator_increment'));
final _heresdkSearchCommonBindingsmapofSdkSearchHighlighttypeToHeresdkSearchCommonBindingslistofSdkSearchIndexrangeIteratorGetKey = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsMapOf_sdk_search_HighlightType_to_heresdk_search_common_bindingsListOf_sdk_search_IndexRange_iterator_get_key'));
final _heresdkSearchCommonBindingsmapofSdkSearchHighlighttypeToHeresdkSearchCommonBindingslistofSdkSearchIndexrangeIteratorGetValue = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsMapOf_sdk_search_HighlightType_to_heresdk_search_common_bindingsListOf_sdk_search_IndexRange_iterator_get_value'));

Pointer<Void> heresdkSearchCommonBindingsmapofSdkSearchHighlighttypeToHeresdkSearchCommonBindingslistofSdkSearchIndexrangeToFfi(Map<HighlightType, List<IndexRange>> value) {
  final _result = _heresdkSearchCommonBindingsmapofSdkSearchHighlighttypeToHeresdkSearchCommonBindingslistofSdkSearchIndexrangeCreateHandle();
  for (final entry in value.entries) {
    final _keyHandle = sdkSearchHighlighttypeToFfi(entry.key);
    final _valueHandle = heresdkSearchCommonBindingslistofSdkSearchIndexrangeToFfi(entry.value);
    _heresdkSearchCommonBindingsmapofSdkSearchHighlighttypeToHeresdkSearchCommonBindingslistofSdkSearchIndexrangePut(_result, _keyHandle, _valueHandle);
    sdkSearchHighlighttypeReleaseFfiHandle(_keyHandle);
    heresdkSearchCommonBindingslistofSdkSearchIndexrangeReleaseFfiHandle(_valueHandle);
  }
  return _result;
}

Map<HighlightType, List<IndexRange>> heresdkSearchCommonBindingsmapofSdkSearchHighlighttypeToHeresdkSearchCommonBindingslistofSdkSearchIndexrangeFromFfi(Pointer<Void> handle) {
  final result = Map<HighlightType, List<IndexRange>>();
  final _iteratorHandle = _heresdkSearchCommonBindingsmapofSdkSearchHighlighttypeToHeresdkSearchCommonBindingslistofSdkSearchIndexrangeIterator(handle);
  while (_heresdkSearchCommonBindingsmapofSdkSearchHighlighttypeToHeresdkSearchCommonBindingslistofSdkSearchIndexrangeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _keyHandle = _heresdkSearchCommonBindingsmapofSdkSearchHighlighttypeToHeresdkSearchCommonBindingslistofSdkSearchIndexrangeIteratorGetKey(_iteratorHandle);
    final _valueHandle = _heresdkSearchCommonBindingsmapofSdkSearchHighlighttypeToHeresdkSearchCommonBindingslistofSdkSearchIndexrangeIteratorGetValue(_iteratorHandle);
    try {
      result[sdkSearchHighlighttypeFromFfi(_keyHandle)] =
        heresdkSearchCommonBindingslistofSdkSearchIndexrangeFromFfi(_valueHandle);
    } finally {
      sdkSearchHighlighttypeReleaseFfiHandle(_keyHandle);
      heresdkSearchCommonBindingslistofSdkSearchIndexrangeReleaseFfiHandle(_valueHandle);
    }
    _heresdkSearchCommonBindingsmapofSdkSearchHighlighttypeToHeresdkSearchCommonBindingslistofSdkSearchIndexrangeIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchCommonBindingsmapofSdkSearchHighlighttypeToHeresdkSearchCommonBindingslistofSdkSearchIndexrangeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchCommonBindingsmapofSdkSearchHighlighttypeToHeresdkSearchCommonBindingslistofSdkSearchIndexrangeReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchCommonBindingsmapofSdkSearchHighlighttypeToHeresdkSearchCommonBindingslistofSdkSearchIndexrangeReleaseHandle(handle);

final _heresdkSearchCommonBindingsmapofSdkSearchHighlighttypeToHeresdkSearchCommonBindingslistofSdkSearchIndexrangeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsMapOf_sdk_search_HighlightType_to_heresdk_search_common_bindingsListOf_sdk_search_IndexRange_create_handle_nullable'));
final _heresdkSearchCommonBindingsmapofSdkSearchHighlighttypeToHeresdkSearchCommonBindingslistofSdkSearchIndexrangeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsMapOf_sdk_search_HighlightType_to_heresdk_search_common_bindingsListOf_sdk_search_IndexRange_release_handle_nullable'));
final _heresdkSearchCommonBindingsmapofSdkSearchHighlighttypeToHeresdkSearchCommonBindingslistofSdkSearchIndexrangeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsMapOf_sdk_search_HighlightType_to_heresdk_search_common_bindingsListOf_sdk_search_IndexRange_get_value_nullable'));

Pointer<Void> heresdkSearchCommonBindingsmapofSdkSearchHighlighttypeToHeresdkSearchCommonBindingslistofSdkSearchIndexrangeToFfiNullable(Map<HighlightType, List<IndexRange>>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchCommonBindingsmapofSdkSearchHighlighttypeToHeresdkSearchCommonBindingslistofSdkSearchIndexrangeToFfi(value);
  final result = _heresdkSearchCommonBindingsmapofSdkSearchHighlighttypeToHeresdkSearchCommonBindingslistofSdkSearchIndexrangeCreateHandleNullable(_handle);
  heresdkSearchCommonBindingsmapofSdkSearchHighlighttypeToHeresdkSearchCommonBindingslistofSdkSearchIndexrangeReleaseFfiHandle(_handle);
  return result;
}

Map<HighlightType, List<IndexRange>>? heresdkSearchCommonBindingsmapofSdkSearchHighlighttypeToHeresdkSearchCommonBindingslistofSdkSearchIndexrangeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchCommonBindingsmapofSdkSearchHighlighttypeToHeresdkSearchCommonBindingslistofSdkSearchIndexrangeGetValueNullable(handle);
  final result = heresdkSearchCommonBindingsmapofSdkSearchHighlighttypeToHeresdkSearchCommonBindingslistofSdkSearchIndexrangeFromFfi(_handle);
  heresdkSearchCommonBindingsmapofSdkSearchHighlighttypeToHeresdkSearchCommonBindingslistofSdkSearchIndexrangeReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchCommonBindingsmapofSdkSearchHighlighttypeToHeresdkSearchCommonBindingslistofSdkSearchIndexrangeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchCommonBindingsmapofSdkSearchHighlighttypeToHeresdkSearchCommonBindingslistofSdkSearchIndexrangeReleaseHandleNullable(handle);


